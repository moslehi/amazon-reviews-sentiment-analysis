(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    442210,       9224]
NotebookOptionsPosition[    425957,       8817]
NotebookOutlinePosition[    426313,       8833]
CellTagsIndexPosition[    426270,       8830]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Amazon Reviews Sentiment Analysis", "Title",
 CellChangeTimes->{{3.709173633740305*^9, 3.709173663942033*^9}, {
  3.7091737080415554`*^9, 3.709173725946579*^9}, {3.7175326392240553`*^9, 
  3.717532644223761*^9}},ExpressionUUID->"32e54073-6b62-4e59-bdd0-\
85140af44fea"],

Cell["Mahsa Moslehi (email: moslehi@usc.edu)", "Subtitle",
 CellChangeTimes->{{3.709173808264288*^9, 3.7091738718319235`*^9}, {
   3.709173904276779*^9, 3.7091739577418375`*^9}, 
   3.7175326326006527`*^9},ExpressionUUID->"d97251f3-2a0d-46f1-bb59-\
70a7b75c0671"],

Cell["", "Subsubtitle",
 CellChangeTimes->{{3.709173973821757*^9, 3.709173999159206*^9}, {
  3.709176026122142*^9, 3.7091760356626873`*^9}, {3.7091761450369434`*^9, 
  3.7091761464430237`*^9}, {3.717532648115039*^9, 
  3.717532661376769*^9}},ExpressionUUID->"792bb02a-28a3-4f5b-ac13-\
b6096c6bb577"],

Cell[CellGroupData[{

Cell["Aim of the Study", "Section",
 CellChangeTimes->{{3.709182085567171*^9, 
  3.7091821064353647`*^9}},ExpressionUUID->"ae489d12-3e4c-44c9-9d6a-\
eb33877c10b1"],

Cell["\<\
We are given a dataset that contains 400,000 reviews on Amazon and their \
corresponding labels which specify whether the review is positive or \
negative. Our main goal is to use the available dataset to design Learning \
algorithms that classify reviews as positive or negative. Such analysis in \
Machine Learning (ML) is called Sentiment Analysis.\
\>", "Text",
 CellChangeTimes->{{3.709182267324567*^9, 
  3.709182278308195*^9}},ExpressionUUID->"8992d773-fa76-46ac-8298-\
ceb8d8eae8e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Importing Dataset-3 (Amazon Reviews)", "Section",
 CellChangeTimes->{{3.709176492917841*^9, 
  3.7091765111608844`*^9}},ExpressionUUID->"4aa7c7e9-1c72-46d8-bd3b-\
87608c535a67"],

Cell[BoxData[
 RowBox[{
  RowBox[{"raw", "=", 
   RowBox[{"OpenRead", "[", "\"\<reviews.csv\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7086311952605667`*^9, 3.7086312496787615`*^9}, {
   3.7088230665927467`*^9, 3.708823141275383*^9}, 3.7088277437052555`*^9, {
   3.708890874539999*^9, 3.7088908958394823`*^9}, {3.7091690203024316`*^9, 
   3.70916903110805*^9}, {3.7092582432216206`*^9, 
   3.709258247637873*^9}},ExpressionUUID->"e382c85d-6f02-42a7-814f-\
86eec7206048"],

Cell[BoxData[
 RowBox[{
  RowBox[{"reviews", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringSplit", "[", 
       RowBox[{"#", ",", "\"\<|\>\""}], "]"}], "&"}], ",", 
     RowBox[{"ReadList", "[", 
      RowBox[{"raw", ",", "String"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.708631259919665*^9, 3.7086312850465326`*^9}, 
   3.709147947974815*^9, 3.7091887545326138`*^9, 
   3.7091888182692595`*^9},ExpressionUUID->"0eb05cef-3a0e-4b91-b4e9-\
269271468570"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extracting Training and Test Sets", "Section",
 CellChangeTimes->{{3.709176561044738*^9, 
  3.7091765889493337`*^9}},ExpressionUUID->"527e42e4-f2cf-444b-8b50-\
b9a312ed09e5"],

Cell["\<\
In order to perform the analysis, the provided dataset is separated into two \
sets, training set and test set which contain 80% and 20% of the dataset, \
respectively. The dataset is divided into two sets such that every 5th sample \
belongs to test set and the remaining samples belong to training set. Since \
training learning algorithms using the entire training set is computationally \
expensive and the goal of this study is mainly discussing the ML steps rather \
than obtaining the most efficient and accurate classifier, we decided to use \
a subset of the training set to train the algorithm (8000 samples for \
training set and 2000 samples for test set). The choice of 8000 samples for \
training classifiers is achieved by training classifiers (e.g. neural \
network) with different numbers of samples and observing that above certain \
numbers of samples, the performance (e.g. accuracy) is not improving \
significantly, while the running time is increasing easily. This observation \
is illustrated in the following two plots. Considering this trade-off between \
the computational time and the classifier\[CloseCurlyQuote]s performance, we \
decided to select 8000 and 2000 as the size of our train and test subsets, \
respectively. The train and test subsets are uniformly distributed over the \
original train and test sets to make sure that the entire dataset is covered. \
\>", "Text",
 CellChangeTimes->{{3.709182367509297*^9, 3.7091823806330476`*^9}, {
  3.709182411983841*^9, 3.709182461014645*^9}, {3.7091830875894833`*^9, 
  3.7091831220944567`*^9}, {3.7091831703702183`*^9, 3.709183200435938*^9}, {
  3.7091832491587243`*^9, 3.7091832554370832`*^9}, {3.7091832865638638`*^9, 
  3.709183294227302*^9}, {3.7091833264681463`*^9, 3.709183337172758*^9}, {
  3.7091833793201694`*^9, 3.7091833940270104`*^9}, {3.709183447330059*^9, 
  3.7091840673575225`*^9}, {3.70918677393633*^9, 3.709186775960446*^9}, {
  3.7092291660154996`*^9, 3.7092292018475494`*^9}, {3.709229260594909*^9, 
  3.709229278248919*^9}, {3.709247912314728*^9, 3.7092479220853653`*^9}, {
  3.709248144120002*^9, 3.709248283699017*^9}, {3.70924831371492*^9, 
  3.709248390126944*^9}},ExpressionUUID->"836cd3d7-0042-46ee-9236-\
bbffc7b9a08e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"50", ",", "0.65"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"150", ",", "0.655"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"300", ",", "0.672"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"600", ",", "0.709"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1200", ",", "0.73"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2500", ",", "0.77"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6038", ",", "0.788"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6957", ",", "0.794"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8000", ",", "0.802"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10000", ",", "0.805"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12308", ",", "0.81"}], "}"}]}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Train Size\>\"", ",", "\"\<Accuracy\>\""}], "}"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "12"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Train Size vs. Accuracy for Neural Network\>\""}], ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "2"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "Large", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"8000", ",", "0.802"}], "}"}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.709247927118993*^9, 
  3.709247927120039*^9}},ExpressionUUID->"7b7bb7ec-04ef-4935-a739-\
8b5d1eb25e8f"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     StyleBox[LineBox[CompressedData["
1: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
xlowd48A8RslsPA3eF/gV4My4atfCPwfJwYguw==
       "]],
      FontSize->12]}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Train Size\"", TraditionalForm], 
    FormBox["\"Accuracy\"", TraditionalForm]},
  AxesOrigin->{0, 0.6420000000000001},
  BaseStyle->{FontSize -> 12},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    PointSize[Large], 
    PointBox[{8000, 0.802}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Train Size vs. Accuracy for Neural Network\"", TraditionalForm],
  PlotRange->{{0, 12308.}, {0.65, 0.81}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.709247928494932*^9, 
  3.7092581362335014`*^9},ExpressionUUID->"b7383a84-ddeb-4c53-9b0a-\
18f0a867bc1d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"50", ",", "0.2454"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"150", ",", "0.5572"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"300", ",", "0.6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"600", ",", "0.74"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1200", ",", "1.33"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2500", ",", "2.63"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6038", ",", "6.01"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6957", ",", "6.98"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8000", ",", "8.77"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10000", ",", "12.01"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12308", ",", "14.8"}], "}"}]}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Train Size\>\"", ",", "\"\<Training Time(sec)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "12"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Train Size vs. Training Time for Neural Network\>\""}], ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "2"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "Large", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"8000", ",", "8.77"}], "}"}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",ExpressionUUID->"4c99b3ee-4e07-4a34-9ae0-4ea96e4f6d3c"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     StyleBox[LineBox[CompressedData["
1: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
       "]],
      FontSize->12]}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Train Size\"", TraditionalForm], 
    FormBox["\"Training Time(sec)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 12},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    PointSize[Large], 
    PointBox[{8000, 8.77}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Train Size vs. Training Time for Neural Network\"", TraditionalForm],
  PlotRange->{{0, 12308.}, {0, 14.8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.709248036028634*^9, 
  3.7092581362715034`*^9},ExpressionUUID->"0b8afcd0-ae41-4f64-954b-\
99ed03b81cd1"]
}, Open  ]],

Cell["\<\


In most of the ML experiments, the dataset is separated into 3 groups, \
training set, validation set and test set. Validation set is usually used to \
tune the learning algorithm and set the algorithm's parameters (e.g. number \
of hidden layers in Artificial Neural Network classifier). Alternatively, \
cross-validation techniques such as k-fold cross-validation can be performed. \
In k-fold cross-validation, the original sample is randomly partitioned into \
k equal size sub-samples. Of the k sub-samples, a single sub-sample is \
retained as the validation data for testing the model, and the remaining k-1 \
sub-samples are used as training data. The cross-validation process is then \
repeated k times (the folds), with each of the k sub-samples used exactly \
once as the validation data. The k results from the folds can then be \
averaged or combined to produce a single estimation. The advantage of this \
method is that all observations are used for both training and validation, \
and each observation is used for validation exactly once. 

Using cross-validation can increase the performance of the classifier, while \
more computational time is normally required to obtain a high-performance \
classifier. Therefore, we have decided to skip the cross-validation step \
mainly because of reducing the running-time and the fact that tuning the \
learning algorithm parameters and consequently optimizing the algorithm is \
already implemented in \"Classify\" function in Mathematica which is the \
function used in this study.\
\>", "Text",
 CellChangeTimes->{{3.709182367509297*^9, 3.7091823806330476`*^9}, {
  3.709182411983841*^9, 3.709182461014645*^9}, {3.7091830875894833`*^9, 
  3.7091831220944567`*^9}, {3.7091831703702183`*^9, 3.709183200435938*^9}, {
  3.7091832491587243`*^9, 3.7091832554370832`*^9}, {3.7091832865638638`*^9, 
  3.709183294227302*^9}, {3.7091833264681463`*^9, 3.709183337172758*^9}, {
  3.7091833793201694`*^9, 3.7091833940270104`*^9}, {3.709183447330059*^9, 
  3.7091840673575225`*^9}, {3.70918677393633*^9, 3.709186775960446*^9}, {
  3.7092291660154996`*^9, 3.7092292018475494`*^9}, {3.709229260594909*^9, 
  3.709229278248919*^9}, {3.709247912314728*^9, 
  3.709247923544786*^9}},ExpressionUUID->"b378679d-c92e-45cc-bbf2-\
9237f0b42804"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"allTest", " ", "=", " ", 
   RowBox[{"Take", "[", 
    RowBox[{"reviews", ",", " ", 
     RowBox[{"{", 
      RowBox[{"6", ",", 
       RowBox[{"-", "1"}], ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allTrain", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{"reviews", ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", "5"}], "}"}]}], "]"}]}], ";"}]}], "Input",Expr\
essionUUID->"eb01c248-f993-4e9f-93c5-11da9204eb42"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sampleFactor", "=", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"train", "=", 
   RowBox[{"Take", "[", 
    RowBox[{"allTrain", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", "sampleFactor"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"Take", "[", 
    RowBox[{"allTest", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", "sampleFactor"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdyk0ow3Ecx/GZg1Ysk4NWFOMiNTsttZE8FOGgLM1OsmIbiy072BzRaLKU
hlbmb8tsI1uUo4dysCU1YoeFRIhZWzIOfp/v4d3r8q4cNPZq+TweT8yCApvF
5fG8Nd99Wd2w3FzDwSefguQ0/ggU/4oOYJ6sIQp7MkbyuHs3Dj0C6TXsKvt5
huGk5gUGS69GN5kzIzoLTNttNshtH07D04fwLDRql+dghUXthLIpK9kWyNdy
zMJbxzBUDgmtMPXdSKblk14Yb0r54HvGN7bF/GuNkcKlzwkYWyg2wapq0w1s
b1kkXaroI32KLHmRyAX9zFW7JAR1apFmh2nYryU7vYoTqBkoOYN1av0l3Otf
Izn9fF+AuXK+Qb4euQ1QZY6QUWVyHMo/0mRWInWGmHzHOllfdJ+AHbmCJPwH
irHuhQ==
  "],ExpressionUUID->"32f365ed-5b81-4d38-b9b3-8c9ecb0951fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nTrain", "=", " ", 
   RowBox[{
    RowBox[{"Dimensions", "[", "train", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nTest", "=", 
   RowBox[{
    RowBox[{"Dimensions", "[", "test", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7091700945878773`*^9, 3.709170142243603*^9}, {
  3.7091767261021786`*^9, 
  3.709176757794991*^9}},ExpressionUUID->"c616b881-380b-4f33-a373-\
43c681ab2bd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Preprocessing for Classification   ", "Section",
 CellChangeTimes->{{3.709176976062475*^9, 3.7091769939164963`*^9}, {
  3.709177095616313*^9, 3.709177133044454*^9}, {3.709177176029913*^9, 
  3.709177221875535*^9}, {3.709177278418769*^9, 3.7091772844241123`*^9}, {
  3.709179374818676*^9, 
  3.709179378751901*^9}},ExpressionUUID->"cfc550d4-9135-4b60-8a36-\
3c37179c57f3"],

Cell[TextData[{
 "After collecting training and test sets from the original dataset, we need \
to extract features to input and train the learning model. Since we are \
dealing with texts in reviews, some text normalizations are required to begin \
the feature extraction processes such as n-grams. Such text normalization \
includes changing all strings to lower case and extracting some common words \
such as, \[OpenCurlyDoubleQuote]the\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]I\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]am\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]is\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]are\[CloseCurlyDoubleQuote], etc. \n\nTo perform the \
feature extraction and classification, I tried various methods described as \
follows:\n\n",
 StyleBox["1-  Preprocessing ",
  FontVariations->{"Underline"->True}],
 StyleBox["Methods employed for Classification using Random Forest, Neural \
Network and Support vector Machines:", "Item",
  FontVariations->{"Underline"->True}],
 "\n\n1.1- Find the count of each word used in the reviews from the positive \
and negative reviews and collect m/2 (where m is the total number of \
features) number of words from the most frequently-used words in positive \
reviews. Then, to evaluate the value of the features for each review, a \
simple approach is to examine whether a review contains that feature (i.e. \
selected words as features) or not. If it contains the feature, the value \
will be 1; otherwise, 0.\n\n1.2- Another approach is to modify the first \
method by assigning the number of occurrence of the features in the reviews \
as their values. Meaning that instead of assigning 0 or 1 to the value of \
feature, find the number of occurrence of each feature (i.e. selected words \
as features) in the review and consider the it as the value of the feature. \n\
\n1.3- Furthermore, the above approaches can be both done by considering most \
frequently -used bi-grams (or in general n-grams) instead of words as \
features. Meaning that, m/2 most frequently-used bi-grams in positive reviews \
and m/2 most frequently-used bi-grams in negative reviews can be used as \
features. Then, the value of features for each review can be evaluated using \
the description stated in the first or second methods. \n\n",
 StyleBox["1.4-",
  FontWeight->"Bold"],
 " In this method, after normalizing the reviews (i.e. converting the text to \
lower case and removing stop words), we first extract all the words in all of \
the positive and negative reviews and put them into two separate bags. \
Similarly, we extract all the bi-grams from all of the positive and negative \
reviews and put them into two separate bags.  In the next step, we compute \
the frequency of each word and bi-gram with respect to their associated bags. \
We negate the frequency of the words and bi-grams in the negative bags. \
Therefore, the frequency for words in negative reviews is negative, but for \
words in positive reviews is positive. \nThen, we merge the results by adding \
these frequencies for common words. In the end, we will have weights for each \
word that its value could be either negative or positive. Similar process is \
used for bi-grams to obtain the weights for bi-grams. Then, we use these \
weights to encode all the reviews and prepare them for our training process. \
Once we receive a review, we convert it to a bag of bi-grams. Then we look up \
the value of the weights that we computed in the pre-processing step. If, for \
example, one bi-gram does not exists in our preprocessed weights, we look up \
the weights associated with each word within the bi-gram and used that as the \
value of our encoder. Therefore, by this process, each review will be \
converted to a vector of positive and negative numbers. If a vector has many \
elements with large positive numbers, it is very likely that the review is a \
positive review. \n\nAll of the above preprocessing methods have been \
employed for classification. The fastest one (1.4) is chosen since besides \
the high efficiency, it results in a reasonable accuracy which keeps the \
classification highly-performed. \n\n",
 StyleBox["2-  Preprocessing Method employed for Classification using Markov",
  FontVariations->{"Underline"->True}],
 "\n\n",
 StyleBox["2.1-",
  FontWeight->"Bold"],
 " The subset extracted from the original dataset, which contain the reviews \
in text and their corresponding labels, is used to design a classification \
using Markov. The reason that we only applied this method on Markov is that, \
based on Mathematica\[CloseCurlyQuote]s description, Markov can be applied on \
texts as features. Meaning that, no preprocessing is required for this method \
and the Classify function with Method Markov can handle the text in the \
reviews automatically. \n\n",
 StyleBox["3-  Preprocessing Method employed for Classification using \
Logistic Regression",
  FontVariations->{"Underline"->True}],
 "\n\n",
 StyleBox["3.1-",
  FontWeight->"Bold"],
 " First, each review is converted to a list words (lower case and without \
stop words). Then, a subset of the train set (1000 reviews) are used to \
extract features using FeatureExtraction function with technique \
\[OpenCurlyDoubleQuote]TFIDF\[CloseCurlyDoubleQuote] in Mathematica. Also, \
\[OpenCurlyDoubleQuote]DimensionReducedVector\[OpenCurlyDoubleQuote] is \
utilized to increase the efficiency of the training. Then, the original \
training subset (with 8000 samples) is used to construct the classifier with \
Classify function using Method LogisticRegression. The reason that other \
Methods is not used is that classification using feature extraction TFIDF \
requires a lot computational time even with DimensionReducedVector, and it \
was only efficient with Logistic Regression method. \n  "
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQLZIdWLlt0WvHbfnJLSA6Wt5qOYgWkrU8DaI3XPO/
AqLfzfzIsR1In1D3FgfRPA3RsiBaotj8yVEgnbab/x+I1llhwXQMSFsESAiB
6A8sM8VAtMnF3ZIgeor/VHkQnXJrqSKIFnCN0ATRBbdbHUC029bdbiA6Zn1Z
FIjW2rRjM4iOOm+1A0RX+cfsAdEO+Q/ugOi5wZFPQfSFpVcZjwPp2JJ0ThD9
4WsPmP6ionvrJMgeRWsw7TaFl/M0kO6zeM4NordNFbe8AKTPXY62AtGvMieU
XAHSF0ungOl7O642gehrPXXNIBoA5q+pFw==
  "],ExpressionUUID->"fdc29595-ec42-4163-a02b-cebbe95fa526"],

Cell[CellGroupData[{

Cell["Defining Functions for Text Normalizations for 1.4 and 2.1", \
"Subsection",
 CellChangeTimes->{{3.70917741445855*^9, 3.70917749331006*^9}, {
  3.7091780624946156`*^9, 3.7091780815277042`*^9}, {3.709178198272382*^9, 
  3.709178218896561*^9}, {3.7091784394011736`*^9, 3.7091784421133285`*^9}, {
  3.7091790827119684`*^9, 3.709179174388212*^9}, {3.7091792098282394`*^9, 
  3.7091792888037567`*^9}, {3.7092209910979214`*^9, 3.709221009373966*^9}, {
  3.7092246582926726`*^9, 
  3.7092246588667054`*^9}},ExpressionUUID->"339477a4-b570-4209-990b-\
33620a5530d9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"removeStopWords", "[", "words_", "]"}], ":=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{"words", ",", 
     RowBox[{"Alternatives", "@@", "stopwords"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stopwords", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<the\>\"", ",", "\"\<i\>\"", ",", "\"\<a\>\"", ",", "\"\<and\>\"", 
     ",", "\"\<to\>\"", ",", "\"\<of\>\"", ",", "\"\<or\>\"", ",", 
     "\"\<at\>\"", ",", "\"\<if\>\"", ",", "\"\<it\>\"", ",", "\"\<this\>\"", 
     ",", "\"\<is\>\"", ",", "\"\<in\>\"", ",", "\"\<was\>\"", ",", 
     "\"\<that\>\"", ",", "\"\<for\>\"", ",", "\"\<from\>\"", ",", 
     "\"\<have\>\"", ",", "\"\<as\>\"", ",", "\"\<be\>\"", ",", "\"\<on\>\"", 
     ",", "\"\<you\>\"", ",", "\"\<with\>\"", ",", "\"\<are\>\"", ",", 
     "\"\<has\>\"", ",", "\"\<had\>\"", ",", "\"\<he\>\"", ",", "\"\<she\>\"",
      ",", "\"\<his\>\"", ",", "\"\<her\>\""}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.709150554037066*^9, 3.709150554390484*^9}, {
   3.709152334677607*^9, 3.709152436479048*^9}, {3.709152494629987*^9, 
   3.709152577495281*^9}, {3.7091526107974358`*^9, 3.709152704702026*^9}, {
   3.7091529478776293`*^9, 3.709152949016201*^9}, {3.709153019483405*^9, 
   3.709153036010878*^9}, 3.709153173897756*^9, {3.709169301488515*^9, 
   3.7091693048247056`*^9}, {3.7091693819301157`*^9, 
   3.7091693832251897`*^9}, {3.7091711221506505`*^9, 3.709171128630021*^9}, {
   3.7091775202736025`*^9, 
   3.7091775215126734`*^9}},ExpressionUUID->"6503b1d8-0b56-457b-b8e9-\
7b763fd05aa5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"unigramTokenizer", "[", "sentences_", "]"}], ":=", 
   RowBox[{"removeStopWords", "@", 
    RowBox[{"ToLowerCase", "@", 
     RowBox[{"StringCases", "[", 
      RowBox[{"sentences", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"WordCharacter", "|", "\"\<'\>\"", "|", "\"\<-\>\""}], ")"}],
         ".."}]}], "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bigramTokenizer", "[", "words_", "]"}], ":=", 
  RowBox[{
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#1", ",", "#2"}], "}"}], "&"}], "]"}], "@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"words", "[", 
      RowBox[{"[", 
       RowBox[{";;", 
        RowBox[{"-", "2"}]}], "]"}], "]"}], ",", 
     RowBox[{"words", "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;"}], "]"}], "]"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.709153124212356*^9, 3.7091531878930807`*^9}, {
  3.7091610207870007`*^9, 3.709161052520993*^9}, {3.7091693762417903`*^9, 
  3.7091693873144236`*^9}, {3.7091699496135855`*^9, 
  3.709169950137615*^9}},ExpressionUUID->"b828f139-261c-4787-8311-\
6f9122a941be"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Extracting Uni-gram/Bi-grams for Positive and Negative Reviews for 1.4\
\>", "Subsection",
 CellChangeTimes->{{3.7091793293480754`*^9, 3.709179338678609*^9}, {
  3.7092210170814075`*^9, 
  3.709221021579664*^9}},ExpressionUUID->"d6e33961-239b-4d76-bfab-\
687a6cb8b2e8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"posWords", "=", 
   RowBox[{"unigramTokenizer", "@", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
      RowBox[{"Select", "[", 
       RowBox[{"train", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\"\<positive\>\""}], 
         "&"}]}], "]"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"negWords", "=", 
   RowBox[{"unigramTokenizer", "@", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
      RowBox[{"Select", "[", 
       RowBox[{"train", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\"\<negative\>\""}], 
         "&"}]}], "]"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.709169768982254*^9, 3.709169770079316*^9}, {
  3.709169810223613*^9, 3.7091698442465587`*^9}, {3.7091698872230167`*^9, 
  3.7091699000117483`*^9}},ExpressionUUID->"ad4fe4c1-8050-4b30-9188-\
e0443ae63b0a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"posBi", "=", 
   RowBox[{"bigramTokenizer", "@", 
    RowBox[{"unigramTokenizer", "@", 
     RowBox[{"StringJoin", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
       RowBox[{"Select", "[", 
        RowBox[{"train", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\"\<positive\>\""}], 
          "&"}]}], "]"}]}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"negBi", "=", 
   RowBox[{"bigramTokenizer", "@", 
    RowBox[{"unigramTokenizer", "@", 
     RowBox[{"StringJoin", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
       RowBox[{"Select", "[", 
        RowBox[{"train", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\"\<negative\>\""}], 
          "&"}]}], "]"}]}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7091699037729635`*^9, 3.709170006136818*^9}, {
   3.7091700542035675`*^9, 3.7091700593778634`*^9}, 
   3.709177882511321*^9},ExpressionUUID->"cce17796-2fed-434e-a9f0-\
1d54b1cfdc2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Defining a Function for Feature Extraction for 1.4", "Subsection",
 CellChangeTimes->{{3.7091781104343576`*^9, 3.7091781449613323`*^9}, {
  3.709178485207793*^9, 3.709178487179906*^9}, {3.70917918396376*^9, 
  3.7091791885480223`*^9}, {3.7092210431328974`*^9, 
  3.7092210450930095`*^9}},ExpressionUUID->"ba1b615a-6ecb-4d7d-a9ac-\
cb9730ebf56e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"weights", "=", 
   RowBox[{
    RowBox[{"Merge", "[", "Total", "]"}], "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nTrain", "*", 
       RowBox[{
        RowBox[{"N", "@", 
         RowBox[{"Counts", "@", "posWords"}]}], "/", 
        RowBox[{"Length", "[", "posWords", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"nTrain", "*", 
          RowBox[{"N", "@", 
           RowBox[{"-", "#"}]}]}], "&"}], "/@", 
        RowBox[{"Counts", "@", "negWords"}]}], "/", 
       RowBox[{"Length", "[", "negWords", "]"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weightsBi", "=", 
   RowBox[{
    RowBox[{"Merge", "[", "Total", "]"}], "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nTrain", "*", 
       RowBox[{
        RowBox[{"N", "@", 
         RowBox[{"Counts", "@", "posBi"}]}], "/", 
        RowBox[{"Length", "[", "posBi", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"nTrain", "*", 
          RowBox[{"N", "@", 
           RowBox[{"-", "#"}]}]}], "&"}], "/@", 
        RowBox[{"Counts", "@", "negBi"}]}], "/", 
       RowBox[{"Length", "[", "negBi", "]"}]}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.70917001088909*^9, 3.7091700268580036`*^9}, {
   3.7091700786789675`*^9, 3.7091700814471254`*^9}, {3.7091701470698795`*^9, 
   3.70917027244405*^9}, 
   3.7091779574576077`*^9},ExpressionUUID->"9033b294-fcb0-47dd-ab87-\
f02c83797529"],

Cell[BoxData[
 RowBox[{
  RowBox[{"encoder", "[", "review_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Lookup", "[", 
     RowBox[{"weightsBi", ",", 
      RowBox[{"Key", "[", "#", "]"}], ",", 
      RowBox[{"0.1", "*", 
       RowBox[{"Total", "@", 
        RowBox[{"Lookup", "[", 
         RowBox[{"weights", ",", "#", ",", "0"}], "]"}]}]}]}], "]"}], "&"}], "/@", 
   RowBox[{"bigramTokenizer", "@", 
    RowBox[{"unigramTokenizer", "@", "review"}]}]}]}]], "Input",
 CellChangeTimes->{{3.709170286797871*^9, 3.7091703311614084`*^9}, {
  3.709170361595149*^9, 
  3.7091703642232995`*^9}},ExpressionUUID->"4b00fb45-b96b-48ad-9721-\
fe7f4c840c75"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Defining a Function for Feature Extraction for 3.1 ", "Subsection",
 CellChangeTimes->{{3.7092210909616327`*^9, 3.7092210990790973`*^9}, {
  3.709224590834814*^9, 
  3.7092246135831156`*^9}},ExpressionUUID->"acb236e1-8f34-46fa-b83d-\
9707999bc175"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"feSetLR", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"unigramTokenizer", "@", "#"}], "&"}], "/@", 
    RowBox[{"train", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{";;", "1000"}], ",", "2"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"feLR", "=", 
   RowBox[{"FeatureExtraction", "[", 
    RowBox[{"feSetLR", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<TFIDF\>\"", ",", "\"\<DimensionReducedVector\>\""}], 
      "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.709221201181937*^9, 3.709221240759201*^9}, {
  3.7092212709619284`*^9, 3.709221273869095*^9}, {3.7092233577112837`*^9, 
  3.709223373821205*^9}},ExpressionUUID->"5b89243e-4f2b-4fa1-8667-\
10221cf7734a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classifications", "Section",
 CellChangeTimes->{{3.709178514136448*^9, 3.709178528389263*^9}, 
   3.7091789208947134`*^9},ExpressionUUID->"d04756cb-aa3d-4e2b-99f9-\
af0c5269dc3b"],

Cell["\<\
Next, the encoder function defined above will be used on the training dataset \
via FeatureExtraction function to obtain the features, which will eventually \
be used together with their corresponding labels to design the ML classifier. \
Using the preprocessing technique described in 1.4, three different \
classification algorithms are used: Random Forest (RF), Artificial Neural \
Network (ANN), and Support Vector Machine (SVM). The first two algorithms, RF \
(which is an ensemble variant of Decision Tree) and ANN, are mandatory based \
on the homework description. The third one, SVM, is chosen since it is widely \
used in the real-world text classification problems. Moreover, one advantage \
of using an SVM instead of a Logistic Regression is that our problem might \
not be linearly separable. In that case, an SVM with a non-linear kernel \
(e.g. RBF) can be applied to address the classification problem. Note that a \
Logistic Regression can also be used with a different kernel, but due to \
practical reasons SVMs are more commonly used when dealing with problems \
might not be linearly separable. Another reason to use SVMs is if you are in \
a highly dimensional space. For example, SVMs have been reported to work \
better for text classification which is our problem. Also, SVMs are usually \
less susceptible to noise and outlier points as presented in practical ML \
experiments (References: Coursera ML course taught by Andrew NG). However, \
one of the downsides of using SVMs is that running time is relatively large, \
especially when dealing with large training sets. 

Alternatively, classification has been performed using Markov and Logistic \
Regression algorithms with different preprocessing techniques which are \
described separately in 2.1 and 3.1 in \[OpenCurlyDoubleQuote]Data \
Preprocessing for Classification\[CloseCurlyDoubleQuote] section. The reason \
that I have included the results of these two algorithms in the report is \
that they both result in highly-performed and efficient classifiers (e.g. \
accuracy around 83% and running time less around a few seconds).

In order to train the classifier algorithm, \[OpenCurlyDoubleQuote]Classify\
\[CloseCurlyDoubleQuote] function Mathematica has been used. Several \
parameters in this function can be specified, such as the \
\[OpenCurlyDoubleQuote]Method\[CloseCurlyDoubleQuote] employed for the \
classification and the function utilized for feature extraction. Furthermore, \
there is an option named \[OpenCurlyDoubleQuote]PerformanceGoal\
\[CloseCurlyDoubleQuote] where you can specify whether you want your model to \
be optimized in terms of \
\[OpenCurlyDoubleQuote]Memory\[CloseCurlyDoubleQuote], \
\[CloseCurlyDoubleQuote]Quality\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]Speed\[CloseCurlyDoubleQuote] or \
\[OpenCurlyDoubleQuote]TrainingSpeed\[CloseCurlyDoubleQuote]. \
\>", "Text",
 CellChangeTimes->{{3.7091843399081116`*^9, 3.7091844390437818`*^9}, {
   3.709184487153534*^9, 3.7091845938556366`*^9}, {3.709184645214574*^9, 
   3.7091846570062485`*^9}, {3.709184694373386*^9, 3.7091846957344637`*^9}, {
   3.7091847463613596`*^9, 3.7091848090789466`*^9}, 3.7091867691130543`*^9, {
   3.709224870951836*^9, 3.709224986482444*^9}, {3.709225037065337*^9, 
   3.7092252514686003`*^9}, {3.7092253645300674`*^9, 
   3.7092254859750133`*^9}, {3.7092255174828157`*^9, 3.709225597125371*^9}, {
   3.709248850692916*^9, 
   3.709248853442299*^9}},ExpressionUUID->"52bf5e6d-15ef-4a42-b53e-\
24b68e73837f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"trainingset", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[Rule]", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "&"}], "/@", "train"}]}], ";"}], 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "train", " ", "set", " ", "for", " ", "methods", " ", "1.4", " ", "and", 
    " ", "2.1"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.709185627872779*^9, 3.7091856307419434`*^9}, {
  3.7092214474780245`*^9, 3.7092214482680693`*^9}, {3.7092214861532364`*^9, 
  3.709221486339247*^9}},ExpressionUUID->"4618379d-f4d7-417f-a918-\
d21362443db9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"trainingsetLR", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"unigramTokenizer", "@", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "\[Rule]", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "&"}], "/@", "train"}]}], ";"}], 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{"train", " ", "set", " ", "for", " ", "method", " ", "3.1"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.7092214063586726`*^9, 3.709221434534284*^9}, {
  3.709221490377478*^9, 3.709221490619492*^9}, {3.709221821562421*^9, 
  3.709221835081194*^9}},ExpressionUUID->"a9c2d6ae-e228-4c80-b4f6-\
1d6a54f878ab"],

Cell[CellGroupData[{

Cell["Neural Network (1.4)", "Subsection",
 CellChangeTimes->{{3.7091786082128286`*^9, 3.7091786201885138`*^9}, {
  3.7092217599608974`*^9, 
  3.709221763296088*^9}},ExpressionUUID->"60e675a5-e1df-4c64-8863-\
7960fdc7f089"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nn", "=", 
   RowBox[{"Classify", "[", 
    RowBox[{"trainingset", ",", 
     RowBox[{"FeatureExtractor", "\[Rule]", "encoder"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.709170348653409*^9, 
  3.709170370438655*^9}},ExpressionUUID->"76fc781a-84b9-4bd8-a6c9-\
45dfdc80d5f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Random Forest (1.4)", "Subsection",
 CellChangeTimes->{{3.7091787440365973`*^9, 3.709178746785755*^9}, {
  3.7092217652251987`*^9, 
  3.7092217673893223`*^9}},ExpressionUUID->"64120bdd-bb60-49b1-829a-\
87a00f073400"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rf", "=", 
   RowBox[{"Classify", "[", 
    RowBox[{"trainingset", ",", 
     RowBox[{"FeatureExtractor", "\[Rule]", "encoder"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<RandomForest\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.709171564276939*^9, 3.70917156832317*^9}, {
  3.709223421738946*^9, 3.7092234566459427`*^9}, {3.7092235831081753`*^9, 
  3.7092235846302624`*^9}},ExpressionUUID->"38585e38-ba7c-421e-8ea1-\
a8b71799b548"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Support Vector Machines (1.4)", "Subsection",
 CellChangeTimes->{{3.709178818136836*^9, 3.7091788253152466`*^9}, {
  3.7092217692064266`*^9, 
  3.709221771212541*^9}},ExpressionUUID->"9181122e-9c3f-44c4-bbb6-\
e5d615c04f58"],

Cell[BoxData[
 RowBox[{
  RowBox[{"svm", "=", 
   RowBox[{"Classify", "[", 
    RowBox[{"trainingset", ",", 
     RowBox[{"FeatureExtractor", "\[Rule]", "encoder"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<SupportVectorMachine\>\"", ",", 
        RowBox[{"\"\<KernelType\>\"", "\[Rule]", "\"\<Linear\>\""}], ",", 
        RowBox[{"\"\<SoftMarginParameter\>\"", "\[Rule]", "2"}]}], "}"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.709170660712258*^9, {3.709170690984989*^9, 3.709170719813638*^9}, {
   3.709171828506052*^9, 3.709171841262781*^9}, {3.7091718793939624`*^9, 
   3.709171885459309*^9}, 3.709171946155781*^9, {3.7091720080263195`*^9, 
   3.709172017212845*^9}, 3.7091721471982803`*^9, 
   3.709178839417053*^9},ExpressionUUID->"50b6d55d-9f72-447d-ab3a-\
ec933bde09a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Markov (2.1)", "Subsection",
 CellChangeTimes->{{3.709221714698309*^9, 3.7092217196065893`*^9}, {
  3.709221774110707*^9, 
  3.709221775821805*^9}},ExpressionUUID->"309ad387-5dd6-4bfc-960c-\
36531bb900b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markov", "=", 
   RowBox[{"Classify", "[", 
    RowBox[{"trainingset", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Markov\>\""}]}], "]"}]}], 
  ";"}]], "Input",ExpressionUUID->"9224d6de-eb37-4dd0-8a4a-0fbe6acbb899"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Logistic Regression (3.1)", "Subsection",
 CellChangeTimes->{{3.709221750807374*^9, 
  3.7092217797570295`*^9}},ExpressionUUID->"ebce0716-cd0c-4a6b-ae77-\
5e3550f0447b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lr", "=", 
   RowBox[{"Classify", "[", 
    RowBox[{"trainingsetLR", ",", 
     RowBox[{"FeatureExtractor", "\[Rule]", "feLR"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7092218672650347`*^9, 
  3.7092218703872137`*^9}},ExpressionUUID->"6b2b6a38-76e9-4141-beb0-\
d993cb2a93fd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results", "Section",
 CellChangeTimes->{{3.709178941381885*^9, 
  3.7091789456731305`*^9}},ExpressionUUID->"4a24ec72-1b03-4461-b7f6-\
c6171bcceba2"],

Cell["\<\
In this section, the trained classifiers, obtained from the previous section, \
are used to achieve the accuracy, precision, recall, confusion matrix plot, \
ROC curves and the area under ROC curves of the classifiers using the test \
set. In Mathematica, \[OpenCurlyDoubleQuote]ClassifierMeasurements\
\[CloseCurlyDoubleQuote] function can be used to evaluate all the required \
performance metrics and visualizations. \
\>", "Text",
 CellChangeTimes->{{3.7091855431359324`*^9, 
  3.709185616448126*^9}},ExpressionUUID->"51d40484-82ec-4681-bafa-\
66453235a077"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"testset", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[Rule]", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "&"}], "/@", "test"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "test", " ", "set", " ", "for", " ", "methods", " ", "1.4", " ", "and", 
    " ", "2.1"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7092214532193527`*^9, 
  3.709221482575032*^9}},ExpressionUUID->"e39ccbf2-c0c7-417a-9519-\
c68aa79c18c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"testsetLR", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"unigramTokenizer", "@", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "\[Rule]", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "&"}], "/@", "test"}]}], ";"}], 
  "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"test", " ", "set", " ", "for", " ", "method", " ", "3.1"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{
  3.709221422659605*^9, {3.7092214572355824`*^9, 3.7092214777697573`*^9}, {
   3.7092218054504995`*^9, 
   3.7092218165851364`*^9}},ExpressionUUID->"07df86bd-d305-429e-b2c4-\
485dc412c737"],

Cell[CellGroupData[{

Cell["Neural Network (1.4)", "Subsection",
 CellChangeTimes->{{3.7091797407546062`*^9, 3.709179746743949*^9}, {
  3.7092218953106394`*^9, 
  3.7092218977147765`*^9}},ExpressionUUID->"7a4bc7ec-b9f3-4b56-a18a-\
64ef67edf2dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cmNN", "=", 
   RowBox[{"ClassifierMeasurements", "[", 
    RowBox[{"nn", ",", "testset"}], "]"}]}], ";"}]], "Input",ExpressionUUID->\
"84420e7b-4296-4717-b279-ee83ab8dc6e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"accNN", "=", 
  RowBox[{"cmNN", "[", "\"\<Accuracy\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709179807471422*^9, 
  3.709179838867218*^9}},ExpressionUUID->"c0030fab-6427-4b69-b728-\
88866a3d0cb1"],

Cell[BoxData["0.804`"], "Output",
 CellChangeTimes->{3.709179841800386*^9, 3.709223547083115*^9, 
  3.7092236316559525`*^9, 3.7092246197814703`*^9, 3.7092247479117985`*^9, 
  3.709258186933401*^9},ExpressionUUID->"652a5505-6899-470a-86b9-\
10cd78ebaa30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"precNN", "=", 
  RowBox[{"cmNN", "[", "\"\<Precision\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709179857903307*^9, 
  3.709179878183467*^9}},ExpressionUUID->"f6697853-653d-438c-88c5-\
f7b0156f086b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"negative\"\>", "\[Rule]", "0.7857142857142857`"}], ",", 
   RowBox[{"\<\"positive\"\>", "\[Rule]", "0.8259911894273128`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.709179879252528*^9, 3.7092235470951157`*^9, 
  3.709223631666953*^9, 3.709224619794471*^9, 3.7092247479237995`*^9, 
  3.7092581869434013`*^9},ExpressionUUID->"76c97a18-7ccf-4d06-87a5-\
969659ed7adf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"recNN", "=", 
  RowBox[{"cmNN", "[", "\"\<Recall\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709179891439225*^9, 
  3.7091799112503586`*^9}},ExpressionUUID->"8a5e0b20-9ed8-42c9-85a1-\
e7ff06f41ea5"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"negative\"\>", "\[Rule]", "0.844488188976378`"}], ",", 
   RowBox[{"\<\"positive\"\>", "\[Rule]", "0.7621951219512195`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.709179913870508*^9, 3.7092235471061163`*^9, 
  3.7092236316789536`*^9, 3.7092246198054714`*^9, 3.7092247479358*^9, 
  3.709258186952402*^9},ExpressionUUID->"1e4d9209-c971-4d1d-b332-\
bba3c3db18a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"confMtxNN", "=", 
  RowBox[{"cmNN", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7091803277791824`*^9, 
  3.709180345289184*^9}},ExpressionUUID->"5ef8b359-73f7-479f-b06b-\
e644399e3bbc"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{0.9048188222852891, 0.7537666570217191, 
   0.39031143461006407`}, {0.9212035972781202, 0.49827431460521693`, 
   0.00392305242487417}}, {{1., 0.42, 0.}, {0.9286324836340184, 
   0.8487648917945183, 0.6140092477767675}}}, {{0, 0}, {2, 2}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["858", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "858", "\" examples of \"", "\"negative\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.7857142857142857`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.844488188976378`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.8140417457305503`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{858, " examples of ", "negative", " correctly classified"}], 
         Row[{"Precision = ", 0.7857142857142857}], 
         Row[{"Recall = ", 0.844488188976378}], 
         Row[{"FScore = ", 0.8140417457305503}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["234", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "234", "\" examples of \"", "\"positive\"", 
             "\" misclassified as \"", "\"negative\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.21428571428571427`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.23780487804878048`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          234, " examples of ", "positive", " misclassified as ", 
           "negative"}], 
         Row[{"Column fraction = ", 0.21428571428571427`}], 
         Row[{"Row fraction = ", 0.23780487804878048`}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["158", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "158", "\" examples of \"", "\"negative\"", 
             "\" misclassified as \"", "\"positive\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.17400881057268722`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.15551181102362205`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          158, " examples of ", "negative", " misclassified as ", 
           "positive"}], 
         Row[{"Column fraction = ", 0.17400881057268722`}], 
         Row[{"Row fraction = ", 0.15551181102362205`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["750", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "750", "\" examples of \"", "\"positive\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.8259911894273128`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.7621951219512195`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.7928118393234672`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{750, " examples of ", "positive", " correctly classified"}], 
         Row[{"Precision = ", 0.8259911894273128}], 
         Row[{"Recall = ", 0.7621951219512195}], 
         Row[{"FScore = ", 0.7928118393234672}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1016", "\" example\"", "\"s\"", "\" of class \"", "\"negative\""},
            "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.844488188976378`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1016, " example", "s", " of class ", "negative"}], 
        Row[{"Recall = ", 0.844488188976378}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          TemplateBox[{
           "984", "\" example\"", "\"s\"", "\" of class \"", "\"positive\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.7621951219512195`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{984, " example", "s", " of class ", "positive"}], 
        Row[{"Recall = ", 0.7621951219512195}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1092", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"negative\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.7857142857142857`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1092, " example", "s", " classified as ", "negative"}], 
        Row[{"Precision = ", 0.7857142857142857}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "908", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"positive\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.8259911894273128`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{908, " example", "s", " classified as ", "positive"}], 
        Row[{"Precision = ", 0.8259911894273128}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{1.5, 
       FormBox[
        RotationBox["\"negative\"", BoxRotation -> 0.], TraditionalForm]}, {
      0.5, 
       FormBox[
        RotationBox["\"positive\"", BoxRotation -> 0.], TraditionalForm]}}, {{
      1.5, 
       FormBox["1016", TraditionalForm]}, {0.5, 
       FormBox["984", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["1092", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["908", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"negative\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"positive\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.709180348514368*^9, 3.709223547310128*^9, 
  3.7092236317439575`*^9, 3.709224619871475*^9, 3.709224747992803*^9, 
  3.709258187040407*^9},ExpressionUUID->"77fcc397-cb2f-441e-8db6-\
de2f7783ae4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rocNN", "=", 
  RowBox[{"cmNN", "[", "\"\<ROCCurve\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709179924320106*^9, 
  3.7091799561059237`*^9}},ExpressionUUID->"f25ab4ed-95a3-4a34-be1b-\
b37ca5711ddb"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"negative\"\>", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{}, 
        GraphicsComplexBox[CompressedData["
1:eJx13HuQ3WV5wHGGYSjjMJRSihRFxFvRUopOhmEYhlcRFS/ITUUqAiLQlFJM
acSIoCIiWorcLwXEcE3C/SIixki5hhCuuZLLJptNsrtn95yzUkRExOn5vd/3
vN/peVr+cT5KkrNnz3nf7/Psibuf8LUjTtpyiy22WPpnW2zR/Of/9882W215
zoffeVj63z6+etutz33k+L2nD/zvM6rfct6BNxy2x8yBf39W9XbnP7Zhxr5n
Dfz671b/6KB3XXLwe7438Pt9v/qCJ06494t7/mDg9/9h9YUfv+nF6dP+feDP
+4/qixZufHnW/j8e+PMvrv7ke3ZoHsLA47m0+ukTP/Sfn3nfZQOP7/LqT99y
xLzPfeCKgcd7ZfUzm09/6Ji9rhp4/FdXH/K+yxb1/oiBr+ea6udOvn/Vqftc
O/D1XVd96JylrZn7/WTg672++oWxV14/64CfDnz9s6v32LH5imYPPB83VP/T
tF16D+mGgefnxurmi//ULTcOPF83VU/0Htxn59w08PzdXN386iPm3TzwfN5S
/c8P/MOdX7j9loHn99bq25ef0vs3bh14vudUt189c8Gxd88ZeP7nVu+5U/M7
zh34fsyr/pd9rn325PvnDXx/bqvuPbjeI7ht4Pt1e5qz/fS3nHPrYWnQ3TPm
D532oOb7eUf1Xlct7n0Fmu/vndVfe3BN54z5mu/3XdV3r5zsfcWa7//d1b95
7Y03v/2w5vVwT/XO+QnSvD70vm9vHrHm9XJv9dE8odW8fvQ3939H7yFrXk/3
VTdvtkUnal5funkzLd6seb3dX7361PwNKz6++g87X3fRI69PD+b1qf/Qe7M8
P6Z5vf6sepf8AtC8fnXzuy1taV7PD1R/iRdMNa9v/a3eq3XlpOb1/vPq5sGv
OlXz+tfNq2tNR/N+eLB6bSe/AKt5f+g/9l4d66c075dfVOdv/wzNt1vnb+/L
mvfTQ9Vf5gVezftLn908/a9o3m+/rM5P70zN06nz0/eq5v03v3rdafkNVM37
Uf+p+fJf07w/f1Wdv7xZmi9H54f/uub9u6D6ON6g5fU5I5j3t/5O83DeWJBe
2HHLQ3Z/YWYw7/9fV+c//izNb6/zL39Tcz48XD08lQ+Ias4LzSn3X9WcH3r7
/F9ozhP9zvwvaM4XvXf+BZrzRn8k/waPVHP+6MPzb6g5j/RX+AOqOZ/0v+Y/
UHNe6d4X23sAj1Zzfukeeg9Ic57p3mHSe4Ca80333uy9B6w57/SjxzdfwGPV
nH96yfTmC9Kcd3pkRv4Cqzn/9H/Par5gzXmot8xPwOPVnI8619TBmvNSvys/
QZrzU+faWqQ5T/VH8xP4RDXnqz4yP6Ga81Z/lSe4mvNX/1t+wjXnsW5Ow523
fbKa81nnmvuM5rzWzWm2y4Wa81vn2ntWc57rxzc038CF1ZzvC8v5Mit4WVOH
n12Y3r3rPku+8u6zg7kP9KaX8wugmvthYTmPvhv826Yun9fcHzofD9s/Vc19
ovPb/zDN/aLJc819o/Pb90XN/aM/ll9wi6q5j/Tn8wtQcz/pk3hBVnNf6a/n
F6jm/tL57bHj09XcZ0+n+Ts88LeHz/9ecH47fE5z32nGDc39p/PLebnmPtRP
Ni/XnRZXcz/qFc3L8Qua+1KP5nFGc3/q3zUvj5Wa+1Tnb//Oz1Rzv+r87f2i
5r7VjEua+1fnb88qzX2sP5HfgM+W98/3g7mv9VH5Daq5r/U/8oat5v7W38hv
YM39rfOX//bnqrnPdf7yjtHc75rxT3PfP5c273ToaS9v+kFwfnhDmh7QTzV/
/Duer6YP9EvNb3esphf0eB43Nf2gf99wvaYnXqjmvND0heb80PSG5jzR9Ifm
fHmhnI8/DKZPNOePplc055EmLzTnk6ZnNOeVpm9erOb8ejH9+dta91yy3QXB
9I/mfNP0kOa80/SR5vzT9JLmPNT0k+Z81PSU5rzU9JXm/NT01pJqzlNNfy0p
99WFwZyvmj7TnLdL0r67nfvKB/e9qJrz+uJgek5zPmv6TnNea3pPc35r8kRz
nmt6UHO+a/pwaTXn/dJ07yXbNc9YNefhpdVPXval/R964rJg+lJzX2h6U3N/
aPpTc59oenRpOb8uD+a+0fSq5v7R9KvmPtL0rOZ+0vTtsmruq2VpzRVzv/yj
1VcE07+a+0zTw8vK+XNlMPedppc195+mnzX3oaanNfejJmc09+WyNHXVq98+
euqqYPpbc59qenx5Nfepps8196um1zX3rabfl5fz8Opg7mNN32vuZ03va+7r
5Wmraw6c/f6trqnmfLk2mPlAc79r5gXNfa+ZH1ZUc/+vSH/dPJydr6vmfPpJ
MPOGphc084emHzTziKYnNPOJpi8084qmLzQ5pOkNzTyj6Y8Vaa/r144s+rvr
qzmPfxrM/LMy7Z7foLOrOe+i6RnNfLQy7Xl4cwLeEEzvrCznZTTzk6aHNPOU
po8085Wml1am5tnYdZ8bg5m3ND21spzf+iNHbjPtvA/fVM35qj+97K6DOp+6
uZrzLZp5TtNrmvluZfp8/ueWYHrupWp6TtNzmp7T9Jym5zQ991I5X6PpOU3P
aXpO03OantP0nCZ3ND2n6TlNz62qpt80/abpt1Xp+BVvnLTguFuD6blV5fyO
pu80fafpO03fafpO03er0ilH3XjGe0+ZE0zvrSrndTT9p+k/Tf9p+k/Tf6ur
6b/V6esvHXz+hTPnBtN/mv7T9J+m7zR9p+k7Td9p+k7Td5q+0/Sd5jrS9J2m
7zR9t6aaXtP0mqbXNL2m6TVNr2l6TdNnmj7T9Jmmz9aU+zaaXluTvnN08x2e
V819fFswPafpOU3PaXpubTX9puk3Tb9pek3Ta5peW5t6rdd7A0fTb5p+0/Sb
pt80/abpN83bbW3piduD6TdNv2n6baiafhtKl+c8j6bnND2n6TlNz2n6baj0
zh3VXP/R9J2m7zR9p+m7odIXdwbTc0NpXlPnc6Ppu6HSI3cF03ua3htK96/7
+8k379P0yt3VC45rDvBo+lDTh+tK39wTTA9qelDTg5oe1PSgpgc1PajpwXXp
xBkHbD321Wj6UNOHmj7U9KHm6df04brSa9H04LrUvFp7L9lg+m99Nf23vvTd
vcH0n6b3NL23PvUuw96NqOm3aHpQ04OaHtT0oKb/1qfffrB5BUXTg5p+0/Sb
pt80vabpteFqzktNvw2X/rwvmPNU03ea81XTe8Ppm6df8DcPzorm/NX04HDp
3WjO5+H0p/vyGzCYftSc35p+HC79fH8w57mmLzXnu6Y3Nee9pj+HU3M67HZu
NPeBpk+HS89Hc19o+lVzf2h6djg1j+bIbX4WzP2i6V3N/aLpX819o+lhzf2j
6eMN1dxHml7W3EeaftbcT5p+1txXmn7W3F+ant5Q5qdo7jdNb2vuM01/a+63
DenHM5tgiqbPNfefptc3lPksmvtR0++a+1HT75r7UdPzmvtR0/ea+3JD+svm
7brDA9XMc9HMA5r7UjMfaO5PzbwwUs39qZkXNPfpSLo6r5uimSdGynwWzf2r
mTc097Fm/tDcz5p5RHNfa+YTzf2tmVdGUs6dXX8ezP2umWdGynypm+nuqBuj
uf8184+mB0bK/BjNfKTpBc28NJL2eHBWcwME0xMjZf6MZr7S9IZm3tL0x0i6
87XFZz58RzTzmKZHNPPZSJlPo+kTzfy2sZpe0cxzml7RzHeaftHMe5qe0cx/
mn7ZmD6Ug/UXwcyHmr7RzIsby7wXTf9o5klND2nmS00fbUx8+6OZPzW9pJlH
Nf2kmUc3lnk0mr7SzKOa3tLMp5r+0syrmh7TzK+aPttUTZ9pekzTY5oe0/TY
ptRMY70iCKbHND2m6S9Nb2l6a1OZ56PpL01vaXpL01ua3tL0lqa3NH2l6StN
T2l6StNTmp7S9NOm9OjrzRMcTU9pempT2R/8Mpi+0ly3m9In9jv15sc+rpn/
9TO90+i1xdH0mKbHND2m6bHN1fSYpsc0Pabpsc1lnzA/mD7T9JmmzzR9pukz
TY9tToczEATTZ5o+21z2EdH0mqbXNH2m6TNNn2l6bHPK1+uKaPpsc9mH/CqY
XtP0mqbXNL2m6TVNr2l6TdNjmh7T9JimxzQ9pumx0XRMPiCi6TNNn2l6TNNf
mv7S9Ndo2QfpDWdt+9zC4Wj6TNNnmj7T9Nlo2SctqD6ZBU4w/abpN02/aXpN
02uaHhst+6po+kzTZ5oeG0292bc3AGv2Wb8Optc0vTaa8rpmhmb/FU2/aXpN
02uaXtP02mj6XZPjr2r2aw9Xf6s5fs7UPF26/7nlQdN7o2XfFc3bRdN/mt7T
9N5o+mjz0+QDo+m/sWr6b6zsv3QzfU47L5o+1PShpg/Hyr4sml4cS08NNy/o
aPpxrOzPounJsdT7zXq/4yPV7Mv0IfkJ0ezPounRsXTxI/mCDKZHNT2q6VFN
f2r6c6zs13ReRy2Jpk/Hyv4rml4dS3/VjLc7PlrNfiuantX0q6ZfNf06lvJ4
clQ0PTtW9mOajy9E07uavtX0raZvNX2r6VtN32r6dqzs5/RQcxyv1ezfounh
sZTf3rs9Vs3+LJpe1ryvx9MJ+YCOpp81/Txe9m3R9LSmp8dTL8aaIgumpzU9
renp8bKP073DtHcARNPb42Uf9Xgw/a3p7fH0gRyQ0fS3pr81/T1e9lPR9Lim
x8fTqfkLjKbPx8u+Kppe1/S6ptfH0929P23ZXdH0u6bfNf0+XvZROh8/L2v2
U08E0/uavh9P+emeptknRdP/4+kbzXrkjGj6f7zsm6KZBzR9P54YtzT7n2j6
X9P/mv7X9H8r/bHJ0zc0+6Inq/P1f0A080Kr7JOimR8084NmXtDMC62Ur5tz
opkfWmX/pB/PbzfNfknnh7v1wmr2S/qT51/YewVGM5+0yv4omnmllZrT+fQL
NPsi3YvJ5sINZr5plf2M/ovm+t7+qWDmnVbZx+h8HB6p2adEMx9p5iHNPKSZ
h1rpyvzxxmjmo1bZr+j8y1+KZn7SzE+tsq/Qedx726Jg5qlW2T9EM09p5qlW
OjYP0Jp5Xuc8mx3N/NUq83w085hmHmuljc31NxLNfKaZz1pl/n86mHmtlfLx
8d5o5jfN/KaZ3zTzm2Z+08xrE2X/oPPLb3o089xE2U/o229r/olm3tPMe5p5
b6LsF3Rzuh/UiWYe1Mx7mnlvouwPFgcz/2nmP818p5nvJtLeeaCKZt7TzHua
eW+i7Ceimf80895Eyvl3umbfEM08qJkHNfOeZt7TzHOaeU4zz00kfrwTzXw3
UfYd0cx7E+n3i/M3uJr9wTPV+eW3n2be12c34/lZ0cx7E2UfEM28N5EYHzXz
vs65v+Wz1cz/+mP5BaaZ13W+Ps7XzOP66fz218zn0cyjmnlUM49OpG25UIKZ
RyfKPB/NfDqZDs0Dmmbe15fmv06gmdd1zsNl0cyzk2We12/Nf+Dzwcy7mnl3
ssz/Oh/fR0cz/2rm3cmyL9B8/FqzP9Drmy9vne7/vaVBMy9r5t3Jcl9r9gWa
+zuaeVgzD0+W/YHmvtfsEzT3t2ZfEM18PVnuc83+QHO/a/YHmvtcsz/Q3O+a
fcKLwcz3k+W+1+wbNPe7Zv+gue+j2Rdo9gGTZT+h6YNo9gOTZd+g6QXN/iGa
fcFk6YVo9gea/cFk2VdEs0/Q7A80+wHNfkCzH5gsPRLNvkCzL9DsCzT7As2+
QDP/T5b9SjTzvmbenyw9tKSafYymX6LL/ytMNfuAdtm/aHpHs3/R9E40+wPN
/kCzL2iX/Y2ml6LZJ7TLfiWa/UK79FI0+4R22cdEs09ol77S7Gs0/aTZ12h6
aGk1+xtN72j2NZq+iWa/0S77mmj2G+3SQ5p9TTT7D83+Q7PvaJe+0exvNH0T
zX5Esw9pl32Ppn+i2Y+0y/5H00eafc+yanpJs8/R9JNmfxPNPkazj9HsX9ql
v6LZx7TL/kfTY5r9TjT7m3bps2j2M5r9TLvsezQ9p7luNX2n2Qdpem95MPud
dtkHaXpQsx/S9GE0+6B22Rdp+lGzL9L0pGY/FM0+qV16M5r9Urvsk6LZJ7VL
n2r2RZr+1OyPNP25opp9kqY/oxlv22W/FM0+q116VbM/imbf1S49q9knRbPf
6lSzz+qU/tXsnzQ9rNlHad5O0ezHOmVfFc2+rFP6WbPPWhnMPk2zP9Pstzql
rzX7ME1va/Zh0ezDOqW3NfsxTX9Hsw/T7Ls6ZZ8WzT5Ls8/qlJ7X7N80fa8Z
jzS9r9nH6f7fcxs0+zPN/kyzL+uUeUAzD0SzL+uU/o9mf9Yp84BmHohmf9Yp
84FmPtDMA9Hs1zT7tU6ZF6LZn2n2ZZ0yT2jmiWj2aZr9mWZ/1inzRzT7s06Z
RzTziGYe0cwfq4LZt3XKPKKZR6LZx3XKfKKZTzTzRzT7O83+rlPmE808oplH
NPOIZv6IZh/YKfOGJo81/R7N/lCzH+xWs//rlp7X9Pzqanpe0+uaXtf0uqbX
Nf2t6W9Nb2v6WtPTmn7W9LOmnzX9rOnnaPahmn1ot/T1mmr6WtPX0exHu6W3
NX2t6WlNT0ezX+2WXo5m39ot/azpZ00fa/pYc11reljTw5oeXhvMfrdb+ljT
x5o+1vSupm81favp22j2yd3St5p+1fSrpl81/arpV02/RrO/1uyvNftqzb66
W3p3KJj9dbf0bzT7627pYU0Pa/pX07+a/tX0r6Z/o9mXd0v/ano3mn15t/Su
pnej2adr9und0sOaHtb0sKaH11XTw5r+1fSupnc1fRvNfl+z3++W/tX0bTT7
/27pXU3vanpX07uavtX0rKZnNX26vpo+1fSppk81ParpUU2PanpT05Oanozm
5yGan39oft7RLf2p6U9Nf2r6M5qfb3RLj+r+3+MbND/v6J+Hmv7UnI+a/ozm
5xH981PTo5rzVNOnmvNV06ea81bTq5rzV9OvmvNX06ua81jTp5rzOZqfv3RL
v0aTb/3zXNOrmvNd06ua817Tr9H8fKd/H2j6VnO+a3pXc75vqKZ3Nee7pn81
572mfzXnv6aHNfeBpo8194OmhzX3haaPNfeHppc194emnzX3iaanNfeJpqc1
94umrzX3iaa3NfeLpqc1942mrzX3j6a3R6q5jzT9rbmfND2uua80fa65vzS9
rrnPNP2uub80PR/NzzP791s0P4+cKv2vue8084Dm/tPMB5r7UDMvaO5Hzfyg
uS8184Tm/tTMF9H8/HSq3K+a+UNz32rmDc39u7Ga+UNzH2vmEc39rJlHNPe1
Zj7R3N+aeUVzn2vmF839rplfNPe9Zn7R3P+aeUZzv0fz8+qpMu9o7n/N/KPp
Ac08pOkDzXyk6QPNvKTphWh+Xj5V5ind/3tnfdMPmn7Q9IOmFzS9oOkFTS9o
ekHTC5pe0PSCphc0vaDpBU0vaHpB0wuaXtD0gaYHND2g6QFND2h6QNMDmvtf
c/9r7n/N/a+5/zX3/+Zq7n/N/a+5/zX3fzSfv5gqPaDpAU0PaHpA0wOaHtD0
gKYHND2g6QFND0Tz+Y6p0geaPtD0gaYPNH2g6QNNH2j6QNMH0XzeZKr0gqYX
ovl8yVTpB00/aPpB0w+afhitph80/aDpB00/aPpB0w+aftD0g6YfNP0Qzedp
pkpPaPpB0wuaXtD0gqYXNL2g6QVNL2h6QdMLml7Q9IKmF6L5fE+/HzS9oOkF
TS9oekHTC5peGKumFzS9oOkFTS9oekHTC5pe0PSCphc0vRDN5400nw/q94Sm
JzQ9oekJTU9oekLTE5p+0PSDph80/RDN55k0n1fq94WmLzR9oekLTV9ovt2a
nojm8079vtD9v5fTN32h6QtNX2j6QtMXmr7Q9EU0n7fq90Y0n7/q94emPzT9
oekPTX9o+kPTH5r+0PSHpj80/aHpj2g+L6b5vFi/T6L5/Fi/VzS9oukVTa9o
ekXTK5pe0fSKplc0vdKqplc0vaLpFU2faPpE0yeaPtH0iaZPNH2i6RNNn0Tz
+bx+r2h6RdMnmj7R9ImmTzR9oumTaD4f2O8VTa9oekXTJ5o+0fSIpkc0PaLp
EU2PaHpkopoeiebzjP0+0fSJpk80faLpE02faPpE0yeaHtH0iKZHND2i6ZFo
Pp/Z7xNNn2j6RNMnmj7R9Ek0n//s94qmVzS9oukTTZ9o+kTTJ9F83rTfK5pe
0fSKplcmq+mVaD6/2u8XTb9o+kXTL5p+0fSLpl80/aLpE02faPpE0yeaPtH0
iaZPNH2i6RNNn2j6RNMfmv7Q9IemPzT9oekPTX9oekPTG7r/ud9B83nkfn9o
+kPTH5r+0PSHpj80vaHpC01faPpC0xeavtD0haYvNH2h6QtNX2j6QtMXmn7Q
9IKmFzS9oOkFTS9oekHTC5rrXNMLml7Q9EKnml7Q9IKmFzS9oOkFTS9oekHT
C5pe0PSCphc0faDpA00faPpA0weaPtD0QTSfx+/3gqYPNH2g6YNoPs/f74Vo
Pq/f7wdNP2j6QdMPmuNX0w+aftD0Q7eaXtD0gqYXNL2g6QVNL2h6QdMLml7Q
9IKmFzS9oOkFTR9o+kDTB5o+0PSBpg80PaDpAU0PaHpA0wOaHtD0gOb+17y9
NPe/5v7X3P9T1dz3mvtec99r7nvNfa+57zX3vea+19z3mvtec99r7nvNfa+5
7zX3vea+19z3mvtec99r7vto7tXflPtfc/9r7n/N/a+5/zX3v+b+1zxdmvtf
/9//OfiP//v/ALI5qAM=
         "], {{{}, {}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwl2TMUIAAOQMG1bdu2bdu2bdu2bdu2bdu29/bm3hXzUqf4TZKwUftK7QIF
CBAgIHODBwhwictc5ALnOcdZznCaU5zkBMc5xlGOcJhDHOQA+9nHXvawm13s
ZAfb2cZWtrCZTWxkA+tZx1rWsJpVrGQFy1nGUpawmEUsZAHzmRf8/7vNYTaz
mMkMpjONqUxhMpOYyATGM46xjGE0oxjJCIYzjKEMYTCDGMgA+tOPvvShN73o
SQ+6042udKEznehIB9rTjra0oTWtaEkLmtOMpjShMY1oSAPqU4+61KE2tahJ
DapTjapUoTKVqEgFylOOspShNKUoSQmKU4yiFKEwhShIAfKTj7zkITe5yEkO
spONrGQhM5nISAbSk460pCE1qUhJCpKTjKQkITGJSEgC4hOPuMQhNrGISQyi
E42oRCEykYhIBMITjrCEITShCEkIghOMoAQhMIEISAD+BQsQ4D/85Q+/+cVP
fvCdb3zlC5/5xEc+8J53vOUNr3nFS17wnGc85QmPecRDHnCfe9zlDre5xU1u
cJ1rXOUKl7nERS5wnnOc5QynOcVJTnCcYxzlCIc5xEEOsJ997GUPu9nFTnaw
nW1sZQub2cRGNrCedaxlDatZxUpWsJxlLGUJi1nEQhYwn3nMZQ6zmcVMZjCd
aUxlCpOZxEQmMJ5xjGUMoxnFSEYwnGEMZQiDGcRABtCffvSlD73pRU960J1u
dKULnelERzrQnna0pQ2taUVLWtCcZjSlCY1pREMaUJ961KUOtalFTWpQnWpU
pQqVqURFKlCecpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQl
C5nJREYykJ50pCUNqUlFSlKQnGQkJQmJSURCEhCfeMQlDrGJRUxiEJ1oRCUK
kYlERCIQnnCEJQyhCUVIQhCcYAQlCIEJREAC8C+o/vnLH37zi5/84Dvf+MoX
PvOJj3zgPe94yxte84qXvOA5z3jKEx7ziIc84D73uMsdbnOLm9zgOte4yhUu
c4mLXOA85zjLGU5zipOc4DjHOMoRDnOIgxxgP/vYyx52s4ud7GA729jKFjaz
iY1sYD3rWMsaVrOKlaxgOctYyhIWs4iFLGA+85jLHGYzi5nMYDrTmMoUJjOJ
iUxgPOMYyxhGM4qRjGA4wxjKEAYziIEMoD/96EsfetOLnvSgO93oShc604mO
dKA97WhLG1rTipa0oDnNaEoTGtOIhjSgPvWoSx1qU4ua1KA61ahKFSpTiYpU
oDzlKEsZSlOKkpSgOMUoShEKU4iCFCA/+chLHnKTi5zkIDvZyEoWMpOJjGQg
PelISxpSk4qUpCA5yUhKEhKTiIQkID7xiEscYhOLmMQgOtGIShQiE4mIRCA8
4QhLGEITipCEIDjBCEoQAhOIgATgXxD985c//OYXP/nBd77xlS985hMf+cB7
3vGWN7zmFS95wXOe8ZQnPOYRD3nAfe5xlzvc5hY3ucF1rnGVK1zmEhe5wHnO
cZYznOYUJznBcY5xlCMc5hAHOcB+9rGXPexmFzvZwXa2sZUtbGYTG9nAetax
ljWsZhUrWcFylrGUJSxmEQtZwHzmMZc5zGYWM5nBdKYxlSlMZhITmcB4xjGW
MYxmFCMZwXCGMZQhDGYQAxlAf/rRlz70phc96UF3utGVLnSmEx3pQHva0ZY2
tKYVLWlBc5rRlCY0phENaUB96lGXOtSmFjWpQXWqUZUqVKYSFalAecpRljKU
phQlKUFxilGUIhSmEAUpQH7ykZc85CYXOclBdrKRlSxkJhMZyUB60pGWNKQm
FSlJQXKSkZQkJCYRCUlAfOIRlzjEJhYxiUF0ohGVKEQmEhGJQHjCEZYwhCYU
IQlBcIIRlCAEJhABCcC/wPrnL3/4zS9+8oPvfOMrX/jMJz7ygfe84y1veM0r
XvKC5zzjKU94zCMe8oD73OMud7jNLW5yg+tc4ypXuMwlLnKB85zjLGc4zSlO
coLjHOMoRzjMIQ5ygP3sYy972M0udrKD7WxjK1vYzCY2soH1rGMta1jNKlay
guUsYylLWMwiFrKA+cxjLnOYzSxmMoPpTGMqU5jMJCYygfGMYyxjGM0oRjKC
4QxjKEMYzCAGMoD+9KMvfehNL3rSg+50oytd6EwnOtKB9rSjLW1oTSta0oLm
NKMpTWhMIxrSgPrUoy51qE0talKD6lSjKlWoTCUqUoHylKMsZShNKUpSguIU
oyhFKEwhClKA/OQjL3nITS5ykoPsZCMrWchMJjKSgfSkIy1pSE0qUpKC5CQj
KUlITCISkoD4xCMucYhNLGISg+hEIypRiEwkIhKB8IQjLGEITShCEoLgBCMo
QQhMIAISgH+B9M9f/vCbX/zkB9/5xle+8JlPfOQD73nHW97wmle85AXPecZT
nvCYRzzkAfe5x13ucJtb3OQG17nGVa5wmUtc5ALnOcdZznCaU5zkBMc5xlGO
cJhDHOQA+9nHXvawm13sZAfb2cZWtrCZTWxkA+tZx1rWsJpVrGQFy1nGUpaw
mEUsZAHzmcdc5jCbWcxkBtOZxlSmMJlJTGQC4xnHWMYwmlGMZATDGcZQhjCY
QQxkAP3pR1/60Jte9KQH3elGV7rQmU50pAPt+d+Bti1taE0rWtKC5jSjKU1o
TCMa0oD61KMudahNLWpSg+pUoypVqEwlKlKB8pSjLGUoTSlKUoLiFKMoRShM
IQpSgPzkIy95yE0ucpKD7GQjK1nITCYykoH0pCMtaUhNKlKSguQkIylJSEwi
EpKA+MQjLnGITSxiEoPoRCMqUYhMJCISgfCEIyxhCE0oQhKC4AQjKEEITCAC
EoB/AfXPX/7wm1/85Aff+cZXvvCZT3zkA+95x1ve8JpXvOQFz3nGU57wmEc8
5AH3ucdd7nCbW9zkBte5xlWucJlLXOQC5znHWc5wmlOc5ATHOcZRjnCYQxzk
APvZx172sJtd7GQH29nGVrawmU1sZAPrWcda1rCaVaxkBctZxlKWsJhFLGQB
85nHXOYwm1nMZAbTmcZUpjCZSUxkAuMZx1jGMJpRjGQEwxnGUIYwmEEMZAD9
6Udf+tCbXvSkB93pRle60JlOdKQD7WlHW9rQmla0pAXNaUZTmtCYRjSkAfWp
R13qUJta1KQG1alGVapQmUpUpALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clH
XvKQm1zkJAfZyUZWspCZTGQkA+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc
4hCbWMQkBtGJRlSiEJlIRCQC4QlHWMIQmlCEJATBCUZQghCYQAQM+P+n2j/j
P/zlD7/5xU9+8J1vfOULn/nERz7wnne85Q2vecVLXvCcZzzlCY95xEMecJ97
3OUOt7nFTW5wnWtc5QqXucRFLnCec5zlDKc5xUlOcJxjHOUIhznEQQ6wn33s
ZQ+72cVOdrCdbWxlC5vZxEY2sJ51rGUNq1nFSlawnGUsZQmLWcRCFjCfef/7
bTKH2cxiJjOYzjSmMoXJTGIiExjPOMYyhtGMYiQjGM4whjKEwQxiIAPoTz/6
0ofe9KInPehON7rShc50oiMdaE872tKG1rSiJS1oTjOa0oTGNKIhDahPPepS
h9rUoiY1qE41qlKFylSiIhUoTznKUobSlKIkJShOMYpShMIUoiAFyE8+8pKH
3OQiJznIzn8BN1nrZA==
               "]]}]}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwl2UMUGNgOANCpbdu2bdu2bdu2bdu2bduYqe32356/uCeLt07ykiRo2K5i
2wD//PPPhWD//PM3BiQQgQlCUDz9E5wQhCQUoQlDWMIRnghEJBKRiUJUohGd
GMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c
5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrU
pBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rRng50pBOd6UJXutGdHvSk
F73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGeCUxkEpOZwlSmMZ0ZzGQW
s5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nCVraxnR3sZBe7
2cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc5BKXucJVrnGdG9zkFre5
w13ucZ8HPOQRj3nCU57xnH/5jxe85BWvecNb3vGeD3zkE5/5wle+8Z0f/OQX
v/nD3+QPQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4
xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzk
JR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSl
HvVpQEMa0ZgmNKUZzWlBS1rRmjb8Ld7taE8HOtKJznShK93oTg960ove9KEv
/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84SnPeM6//McLXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84W/j
D0BAAhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJ
QEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlA
QQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBD
GtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH/0ZwEAG
MZghDGUYwxnBSEYxmjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zGUe81nAQhax
mCUsZRnLWcFKVrGaNaxlHevZwEY2sZktbGUb29nBTnaxmz3sZR/7OcBBDnGY
IxzlGMc5wUlOcZoznOUc57nARS5xmStc5RrXucFNbnGbO9zlHvd5wEMe8Zgn
POUZz/mX/3jBS17xmje85R3v+cBHPvGZL3zlG9/5wU9+8Zs//P30ByAggQhM
EIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwS
kpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGK
UozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rS
jOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM
4YxgJKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozl
rGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc
4CSnOM0ZznKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM5/zL
f7zgJa94zRve8o73fOAjn/jMF77yje/84Ce/+M0f/g78AQhIIAIThKAEIzgh
CEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlI
SSpSk4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJ
KUpThrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkr
WtOGtrSjPR3oSCc604WudKM7PehJL3rTh770oz8DGMggBjOEoQxjOCMYyShG
M4axjGM8E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlaz
hrWsYz0b2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOG
s5zjPBe4yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOf/yHy94ySte
84a3vOM9H/jIJz7zha984zs/+MkvfvOHv8u+AAQkEIEJQlCCEZwQhCQUoQlD
WMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa
0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nK
UZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rR
ng50pBOd6UJXutGdHvSkF73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGe
CUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4N
bGQTm9nCVraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc
5BKXucJVrnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnH/5jxe85BWvecNb3vGe
D3zkE5/5wle+8Z0f/OQXv/nD30V/AAISiMAEISjBCE4IQhKK0IQhLOEITwQi
EonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKS
icxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJ
ylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onO
dKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclM
YSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxh
K9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOEq
17jODW5yi9vc4S73uM8DHvKIxzzhKc94zr/8xwte8orXvOEt73jPBz7yic98
4Svf+M4PfvKL3/zh75EvAAEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd6URnutCVbnSn
Bz3pRW/60Jd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcG
M5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc7
2cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOcD/b/G/r/AAKd77A=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             AbsoluteThickness[1.6], 
             GrayLevel[0.5]], 
            LineBox[{2002, 2003}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        AxesOrigin -> {0, 0}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> 1, Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
           FormBox["\"Recall\"", TraditionalForm], None}, {
           FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.5], 
          AbsoluteThickness[1], 
          AbsoluteDashing[{1, 2}]], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
         "PointLegend", DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"PointLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"positive\"\>", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{}, 
        GraphicsComplexBox[CompressedData["
1:eJx123mwnWV9wHGGYSjjMJRSSimKiFuppRQdhmEYhlcRFRdkU5GKgAg0pRRT
GjEiqIiIliL7UkBk3wKERUSMSNkJISxJgEAg5OZuOffec64UERF1et7n+zvP
d3p+bf5hPprknnvu+z7P9/ecN9se/pX9j1x/vfXWW/4n663X/vf/+3XdpnPe
cvK1+zb/24dV/27LS8+87405Q///3OqnNl9/722fmjf0++dXv2vrnZd96V0n
Df35b1cv2uzOv91v0XeG/r7vNhttsP7JH3zHvs2wx7fY59hXxr5Xzdf7fvWf
vrVz69mbnF7N1z+jepdtTnn1/bucWc3rOav6trM3af+Gal7fOdUPn/uF3e5+
6Nyh13de9arzr//iD144f+j1XlA9e+Fr3zxo9sKh139R9QYX73H532xw8dD3
c0n1X7W/fctLh76/H1XvcNmLaxf/3WVD3++Pq7ctL/jyoe9fb79f+x1fMfR+
6Parbb3zlUPvj/7QARvtdOoHrxp6v/QnV9yyZ/cTVw+9f/qz5dc1Q++nPuzZ
N4+859Brh95fffSBVx7/nqOvG3q/9VdX7nXaGfOuH3r/9bcOav/EDUM/jxur
+z/b/gu6cejns6D6vHJ5LBj6ed1UzY/npqGf383VN7RXz/U3D/08b6m+Y/Xf
T//h9luGfr4Lq+85tH2DFg79vG+tPmLu7htOfvnWoZ+/br+b/rc0dD3cVt1/
s/vvuOb60L9+f/uKBj4smevn9mbjDU+577Ad5yR//bjT//qu+ZrrS//x9vIG
VHO93RF//9zk9t3Z5hTN9ajb333ARj+p5vrUP5zXXjCa61X/efvyNruzmutX
X1Rud831rMuPf+ufVnN96/ZqPvBKzfWut7trfvuOVXP965tfX3LCvTdp7gf9
gXIB/aya+0Pz12vuF91e7f13tJr7R9//RvsHNPfTz6s/tusxVz/wUc39pR/v
v/rXl2jut0XV+3GBVHP/6fJ2Pqu5H39RfXD5BjT3px45ceMnHlmjuV/vqT6K
G66a+1f3r9X+Bau5n39ZXW7HuZr7W/+mvXxe09zv91Z/o317TtC8HM2u+l/N
W07d44p9t5uXzPqgP9zuPnto1gvd3i07napZP/Sja9o3TLOe6P5v7v+J+6pZ
X/Te5QVp1ht91n3lgqpm/dFlOVmmWX/0X7S37+b3V7P+6HL7HKhZjzTbs+by
0y+1l8+LmvVKlx/fNg9Us17pw8sFplm/dP9mae+YatazB2I9nJ/cv7j6P0DN
evdg9fvKDalZ//Qx5Qs+2Gxy2gMjc3c5MZn1US/s/+kVt2jWS11+nK9o1s+H
qsvL20mznj4U1/O3k7/WLo/Ha9ZbzfKkWX/179vl4U3Nevxw84M933n2Xu/+
TnK5XXfXrNe6XN4na9Zv/WD58WnWc13++g0fqWZ91x/vr84r99Ks97q9Wo87
XbP+6/5i1t6gcf18N5n9Qf9Ze3tv+mg1+4Uul+8Bmv1DX1ByWLOf6PLbV2r2
F12W+7curma/0YeUDWNxc/pDh9/2+e2/l8x+pMvydrlmf9Kj7e27VrNfPVZd
Lrf3aPYvXd6uOY/F/fP9ZPY3veDG9pdmv9Pt3bRnV7P/LanesWwwmv1Ql+Xr
OM3+qMkXzX6pf7ukvKBq9s/Hq8u3v6tmP9UntdvniZr9VbN9afZbXZbr9ZdW
s//qj5Q3aGlzxkevenrOTv+ezP68NNaT/6g+85HRV+bv9sPkcnudptnP9WPl
8tDs73pjbqhq9nu9T9nQNPu/PqeMn5oe0GV5XqHpgydi/Tor+S/LF3yy+fi7
N2uXgGR6Qpfb5SBNX2jGT01v6Jfbl7tax1RfzXqi6Y+nYn06J5n1RtMnmvVH
0yua9UjTL5r16anmsSM+8J+feu+51awv5yXTO5r1TNM/mvVN00Oa9U7TR09X
s/5pekmzHmr66enmk9fsf8Nn3nd+NevTBcmsl5re0qyfmv7SrKeaHtOsr5o+
06y3ml7TrL/Lquk3zXqs6TnN+qzpO836vKx5fPy4uw/e4cJk+k+zfmt6ULOe
a/pQs75relGz3mv6UbP+L6+mJzX7gaYvNfvD8lg/L0qmPzX7h6ZHNfuJpk81
+4umTzX7jaZXNfuPpl9XVLMfaXpWsz9p+nZFs/d7z13cv+WT2b80vbsi9pOL
k9nfND2s2e80fazZ/zTLn2Y/1PSzZn98pnniqDueP2bnS5Lpa83+qeltzf6p
6W3Nfqnpb83+qelxzX6q6fNnYn++NJn9VtPvmv1X0/Oa/fjZanpesz9r+l6z
X2t6X7N/a/pfs59r5gHN/q6ZDzSXp2Ze0Oz3mvnhuWr2e808odn/NfOFpgc0
84amDzTzh6YXNPOIph80+aTpCc18oumLldX0haYnVjb7XLe8M2/XHyXTF5q+
0PSFpi80faHpC00/aPpB0w+aflgZfXdZMl9O0xOantD0xPPV9ISmJzQ9oekF
TS9oekHTC5pe0PSCphc0vaDZzjW9oOkFTS+8UE0vaHpB0wuaXniheWry1TdO
3P3HyfSDphc0vaDpBU0vaHpB0wuaXtD0gqYXNL2g6YVV1fTCqpgPLk+mH1Y1
223eFmU2PaHpB00/aPpB0w+aftD0g6YfNP2gWY41/aDpB00/vFhNP2j6QdMP
ml7Q9IKmDzR9oOkDTR9o+kDTB5o+0PSBpg80PfBSNT2g6QFND2h6QNMDmh7Q
9ICmBzQ9oOkBzf6v2f81+79m/9fs/5r9f3U1+79m/9fs/5r9f3XMq1ck0wOa
HtD0gKYHND2g6YHVzT/ttFU/8bLpg9Uxv16ZTC9oekHTC5peeLmaXtD0gqYX
NL2g6QVNL2h6QdMLml7Q9IKmF15u2uH2E9dk0w+aftD0g6Yf1sT8f1Uy64Wm
L9Y0U/3N+tPXZbOeaHpDs75o+mNNzO9XV7evbv8bNPP8NcmsT5p+0axXmp7R
rF+avtGsZ5re0axvmv7RrHeaHtKsf5o+0qyHml7SrI9rmn++8x9u/tyCbPpJ
s36uifn/2uoFzxzd/x3Z9JZmvdX0l2b91fSYZj0eqabPNOuzptdGYn6/rnrm
tRPuOWRhNuu5pu9GYv69Ppn1XtN/I832W7TvUDb7gaYPNfuDphc1+4WmHzX7
x0jM3zck05cjzb/sfMnSo+7IZr8Zifn4xur+D7//jmrmzwXVveMXvXTsXdn0
q2b/0vSsZj/T9K1mf9P07kjMKzcls/9pelizH2r6WLM/anpZs1+ONDtcuKR/
hWXT02ur2U81fa3ZXzW9rdlvNf2t2X/Xxjx0czI9vrb5yl2ruscvymZ/1vS6
Zr/W9Pva6P9bktnPNX2v2d/XNgufm+7fcZreXpjMPKDpAc18oOkDzbyg6QPN
/KDpA808oekFzXyh6QfNvKHpCc38oemL0WrmkdHmV6+/+Ydv3quZP26t3rIs
SNn0iWZ+0fTKaPRbNvOMpmc0842mbzTzzmizy9vaO0jTb7cl00Oa+UjTR6PN
QSyAycxPmn4ajR7MZr7S9JVm3tL01mjz9d3e3r+ks5nHRqO/bq9uPyxZfISm
p7LpN808N9q0h9FLxjV9dUcyfTfavHBMWeCr6ads5kNND2rmxdHmd/1h+MnJ
bHpRM0+ORp/9JJmeHG22KhtONvOnpi/Hou90++qWdzR9c2cyParpT01/avpT
05+antT05FjzBTbMavopm94ca77Rr43npjV99dNkelTTo5oeHWvaH/bzx2TT
p5o+1fSppk/Hoqd0u/uu6mr66q5kelbTs2PNi92ygSfTt2PRX9n0rqZ3Nb2r
6V1N3441v++vni/PavrtZ8n0r6Zvx5qyfM3Npnc1vTsWfZZN/441Zbl4JZse
1vSwpofHq+lhTQ9relfTu+PRh3cn07vjzRcJjGT6dzz6MZv+1fSvpn81/avp
3/HmpHY5eTWbHtb0sKZ/Nb07Hn3782T6VdOvmn7V9KumXzX9Ot6U5WmeZnnI
pm/Hm7IcvJZN32r6VtO349Hni5Lp3fFm9bEl4Krpaf3H9vZ4PZs+1vSxpo81
Pazp4YlqeljTwxPR179Ipo81fTzRlMt5vubyzKafNf2s6eWJplwub2j6+Z7q
QwnWZHpa09MT0cvZ9PVE8632238zm97W9LWmrzV9relnTT9r+lnTz5p+nohe
/2UyPT3RlLfrxGz6eiL6PpvenmjKl/tDNv2t6e+J6OF7q9fMliCupo+z6XVN
r2t6XdPrE/W534Hp7Wx6XtPzmp6fbDYt/4Omv7Pp98nmHeUPaHpa71j+gKav
9YfKX3BfNf2czXww2exXvoCmn/WX+ILV9LD+1/ICspk3JqOPdf/N6b/A+5OZ
Pyajn7OZRzTziGYemWz66H+D2cwnmvljMvpc92O1/4ZkM59o5hPNPKKZRzTz
x2T0fTbziGYe0cwjmvlDM09o5gnNvKCZByabfkz2f+DZzAea+UAzD2jmAc3l
PRnzi77/sPaCeiCZeUAzD2juy3Ux7+hlc9oLMpv+1/S/pv81/a/p/3UxT+m1
c8sFnsx8oOn/dTFP6f+e394Q2fS/pv/XxXyVzTyg6X9N/2v6X9P/65r1yw34
YDJ9vy7mt2x6f11Tnk7cSzO/6XeWGy6beUDT/5r+1/S/pv81/a/pe03fa3pe
0/PrYt7MpufXNeXpx8XZ9Lym5zU9r+n5TjU934n5Npu+7zQfLgvKQ8n0fifm
U31AueE186r+MjdsNfOq/rdyA2vm12zmCc380GnaaWrLjR+uZn7NZp7oNOVp
sk9p5lPd1vZWZ2Qzf3RiftXl6amlmnlWPzjS3rCPJDO/dGKe1Svap08+rZln
s5l3NPNOpxl7pdzg1cyr+tft0wdPZjMPaeahTsy32cxHmvmo05Q82fTRauZd
XXJjX818q3kcWTPfZjNvdZqSC09nM391Yj7VHyk35OJk5rNOzKv6s+UGzWZ+
68T8ms08p5nnNPNapzmSG7SaeTWb+a3TfLXcsNnMc5p5rhPzqi7L6+aPJTPf
aea1Tsyf2cxvnaYsX5/RzKeax58182k2859m/tPMf52mLB/PZDMPTlUzD07F
PJvNPKiZBzXz3lTzcLt8bLEkmflvKubhbOZBzXynme8085xmftPMb1PNs+3y
87ls5rmpmMf1RHncWDOf69+0y8Nz2cyDUzFPZzMfauZDzXw41ZTbf8vHq5m3
dbmdP6+Zv7OZLzXz5VTD48Ga+TubeXOqKbfT89nMm1Mxr2czb2rmy6nmY2WD
WFrNfJ/N/KmZJzXz5FRzYNlgNPO//kc2nGTmz6k4D9BfKxuSZh7PZl6dasqP
521PJDOfTsW8rsvbe3A28+tUzO+axys183s28+5UU76dlzTzezbz7nTzaPvy
3v5kMvOpZp6cjvlfr2y//CGa84Bs5svpZl15nE8z72czb043v235sh78u5xh
M49Ox36qmf+zmVc18+l07L/ZzKuaeVQzj07H+YJm/9acL2j2c815g2Z/15w/
aPb3bOZhzTw8HecV2czH09EDmvMMTR9ozjeeTmae1szT09EP2czX03Eeks28
rZm3p6M/NOcnmv7QnKdo+iKb+X06zluymec187xmftfM79PRL9nM89NxnpPN
fD8dfZPNvD8d5z2avtGc/2Qz/2vm/+noIc350LJkzgemo4c050GaHtKc/2Rz
X89EL2VznqA5T9CcJ2jOEzTnBTNx3qTpMc15kabPNOc32Zw/aM4XZqLPNONe
NucPmvOGmeg1zXmOpseyOZ+YifOb5dX0meY8R9NTmvMYTU9lc/6hOf+YifMb
TX9pzms0PZbN+YnmvGQmznc0/aY5z9H0m+Y8RtNn2Zy/zMT5zIpq+k1zPqPp
Oc15jabvNOc3mp7TnJdo+k5zXqLpO804lc350Ez0XjbnRTNxHqLpPc15yDPV
9J/mfETTd9mcR83E+Ymm/7I5r5qJ8xVNH2rOWzR9qDl/0fRiNudhM3E+o+lJ
zXmMpic15zPPVtOTmvMZTV9mcx6nOY/TnMfNxPmOpkezOa+bifMfTa9mc543
E+dBmp7VnA9pelaT65q+1ZwfafpWc370XDU9qzlP0vSt5nxJ07vZnE/OxPmS
pn81502aHtacP2VzvjkTfaw5f9L0sua8SQ/+3dnA9LKmhzV9q+lbTd9q+lbT
t5q+1fRtNseZM9G7mp7V9KsmlzT9ms158Ez0rKZXn6+mTzX9qenPbM6XZ6JH
NT2q6dFszqO70aOantT0o6YXNX2o6UNNH2r6T9N/mt57oZrey+a8vBv9p+k/
Te9lc57ejV7T9Jqm1zS9ls35eDf6LZvz8m70mqbXND2Wzfl5N/pM02eaHsvm
/Fxz/t2NXltVTa9lc97djX7T9Jum3zR9pukzTZ9p+kzTX5r+0vRXNufx3eix
bM7bu9Fnmj7T9Jimx16spsc0PabpMU2PZXPerznf70avaXpN02uaXtP0mqbX
NL2m6TPN7Z3N5w3d6DNNn2n67KVkPj/oRq9pek3TZ5o+0/RYNp8/dKPPNH2m
6TNNn2n6TNNjmh7T9JimxzQ9pumx1dX0mKbHNH2l6StNT2l6StNP2Xz+0o2e
0vSUpqc0PZXN5zPd6CvN25fN5zXd6C1Nb2l66+VqekvTW5reyubzoG70l6a3
NL2VzedH3eivbD4v6kaPaXosm8+PutFjmh7T9Jimx7L5/KkbfaYH/45vYNYz
Ta9p1jdNv2nWO03PZfP51mA91PSeZv3T9J9mPczm8zLN52Pd6EXN+qnpx2w+
Dxusr5q+zOb4d7D+ZvP5WTf6U7M+a3pUs15r+lSzfmfzeVw3+lWzvmt6VrO+
a3pWs95r+laz/mfzeWAv+nekmv0gm88HNZ8Paj4f7EU/a/aTbD4v7EVfZ/N5
YS/2n2w+P+xFf2v2J02Pa/arbD5/1Hz+2It+1+xnmn7X7G+ans/m88xe7H+a
3tfsh5r+z+bz0F7sl5r5QLN/auYFzX6qmR80+2s2n7f2Yr7Q7L+aeUOzH2vm
D83+rJlH1lazX2vmEc3+nc3nuZrPb3sxv2TzeW4v9n/NfKPpAc18o+kDzbyj
6QXN/KPpB808pOkHzTyk6QnNPKTpC818pOkNzbyk6Q3NvKTpD838pOkPzTyl
6RHN/JTN5+296BXNfDVaTb9o5itNz2jmrWw+j+9F72Tz+Xwv5jNN/2jmNU0P
aeY3TR9l8/l+L+a7bD7f70U/aeY/TT9p5kFNT2nmQ01PaeZFTV9p5kVNb2nm
RU1/ZfN8Qi/mSU2PaeZLTZ9p5k09+HduA9Nr2TwP0Yt+0/Sbpt+yeT5C83yE
5vkIzfMOmucXetGDmv7L5nmGXvSgpgc1PajpQU3vaXovm+OBXvRfNs879KL/
NP2XzfMOmucbZqMHs3neQfP8wmz0oaYPNX2o6UNNH2r6UNODmh7U9KCmBzU9
qNmeNT2o6cFsnr/QPF8xG32o6cPxanpP03uavtP0XDbPZ2iez5iNvtP0nabv
NH2n6bdsnu+YjZ7T9Jym5zQ9p+k3Tb9p+k3Tb5pey+Z5k9noN02/afpN02+a
ftP0m6bXNL2m6bVsnn+ZjX7T9Jum37J5XmU2ek7TcxPV9Jym5zS9pukzTZ9p
+kzTZ9k8PzMbvabpNU2vaXpN02uaXtP0WjbP52ier9E8XzMbfafpO03fafpO
03eavtP0nabvNH2n6TtN32n6LpvngTTP/8xG/2kuV03/ZfO80Gz0n6b/NP03
WU3/afpP03+a3tP0nabvNH2n6TtN32n6TtNzmn7T9Jum37J53mk2ek7Tc5qe
0/Scpuc0PafpOU3PaXpO03PZPH81Gz2n6TlNz2l6TtNzmp7Tg3+3NDD9puk3
Tb9pekvTW5q+0vSVpq80faXpq2yeR5uN3tL0laanND2l6SVND2l6SNNDmh7S
9JCmhzQ9pOmhbJ6vG/SRpo80faTpI00fafpI0z+a/tH0T6ea/tH0j6Z/NH2j
6RtN32j6RtM3mp7R9IymZzQ9o+kZTc9k8zzjoG80faPpG03PaHpG0zOantH0
jKZnND2j6RlNz2j6RdMvmn7R9IqmVzS9MlVNr2h6JZvnPwf9oukXTb9k83zo
oGeyeT500DOantH0jKZnND2j6RlNz2j6RNMnmj7R9ImmTzR9oukTTZ9o+kTT
J5o+0fSJpj80/aHpD01vaHpD0xua3piupjc0vaHpDU1vaHpD0xua3tD0hqY3
NL2h6Q1Nb2h6Q9MXmr7Q9IWmLzR9oekLTV9o+kLTF5q+0PSEpic0PaHpCU1P
aHpC0xN68NzywPSEpic0PaHpCU1PaHpC0xOansjm+e9BX2h6Ipvnwwd9oekL
TV9o+kLTF5q+0PSFpi80faHpC01faPpC0xOantD0hKYnND2h6QnNdqPpCU1P
aHqiW01PaHpC0xOantD0hKYnND2h6QlNT2h6QtMTmp7Q9ISmHzT9oOkHTT9o
+iGbcV3z7wcGfaHpC01faPpC0xeavtD0haYvNH2h6QtNX2j6QtMXmr7oVdMX
mp7Q9ISmJzT9oOkFTS9oekHTC9msc7+KftD0g6YfNP2g6QdNP2j6QdMPmn7Q
9IOmHzT9oOkHTT9o+kHTD5p+0PSDph80l4umHzT9oOmH2Wr6QdMPmn7Q9IOm
HzT9oOkHTT9o+kHTD5p+0PSDph80/aDpB00/aPpB0w+aftD0g6YfNP2g6QdN
P2j6QdMPmn7Q9IOmHzT9oP/v/w7/8v//H31IbgI=
         "], {{{}, {}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1: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
sYhJDKITjahEITKRiEgEwhOOsIQhNP8F1njxJg==
               "]]}]}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwl2UMUGNgOANCpbdu2bdu2bdu2bdu2bduYqe32356/uCeLt07ykiRo2K5i
2wD//PPPhWD//PM3BiQQgQlCUDz9E5wQhCQUoQlDWMIRnghEJBKRiUJUohGd
GMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c
5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrU
pBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rRng50pBOd6UJXutGdHvSk
F73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGeCUxkEpOZwlSmMZ0ZzGQW
s5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nCVraxnR3sZBe7
2cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc5BKXucJVrnGdG9zkFre5
w13ucZ8HPOQRj3nCU57xnH/5jxe85BWvecNb3vGeD3zkE5/5wle+8Z0f/OQX
v/nD3+QPQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4
xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzk
JR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSl
HvVpQEMa0ZgmNKUZzWlBS1rRmjb8Ld7taE8HOtKJznShK93oTg960ove9KEv
/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84SnPeM6//McLXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84W/j
D0BAAhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJ
QEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlA
QQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBD
GtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH/0ZwEAG
MZghDGUYwxnBSEYxmjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zGUe81nAQhax
mCUsZRnLWcFKVrGaNaxlHevZwEY2sZktbGUb29nBTnaxmz3sZR/7OcBBDnGY
IxzlGMc5wUlOcZoznOUc57nARS5xmStc5RrXucFNbnGbO9zlHvd5wEMe8Zgn
POUZz/mX/3jBS17xmje85R3v+cBHPvGZL3zlG9/5wU9+8Zs//P30ByAggQhM
EIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwS
kpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGK
UozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rS
jOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM
4YxgJKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozl
rGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc
4CSnOM0ZznKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM5/zL
f7zgJa94zRve8o73fOAjn/jMF77yje/84Ce/+M0f/g78AQhIIAIThKAEIzgh
CEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlI
SSpSk4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJ
KUpThrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkr
WtOGtrSjPR3oSCc604WudKM7PehJL3rTh770oz8DGMggBjOEoQxjOCMYyShG
M4axjGM8E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlaz
hrWsYz0b2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOG
s5zjPBe4yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOf/yHy94ySte
84a3vOM9H/jIJz7zha984zs/+MkvfvOHv8u+AAQkEIEJQlCCEZwQhCQUoQlD
WMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa
0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nK
UZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rR
ng50pBOd6UJXutGdHvSkF73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGe
CUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4N
bGQTm9nCVraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc
5BKXucJVrnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnH/5jxe85BWvecNb3vGe
D3zkE5/5wle+8Z0f/OQXv/nD30V/AAISiMAEISjBCE4IQhKK0IQhLOEITwQi
EonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKS
icxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJ
ylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onO
dKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclM
YSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxh
K9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOEq
17jODW5yi9vc4S73uM8DHvKIxzzhKc94zr/8xwte8orXvOEt73jPBz7yic98
4Svf+M4PfvKL3/zh75EvAAEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd6URnutCVbnSn
Bz3pRW/60Jd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcG
M5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc7
2cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOcD/b/G/r/AAKd77A=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             AbsoluteThickness[1.6], 
             GrayLevel[0.5]], 
            LineBox[{2002, 2003}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        AxesOrigin -> {0, 0}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> 1, Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
           FormBox["\"Recall\"", TraditionalForm], None}, {
           FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.5], 
          AbsoluteThickness[1], 
          AbsoluteDashing[{1, 2}]], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
         "PointLegend", DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"PointLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.7091799470384054`*^9, 3.709179958198044*^9}, 
   3.7092235476361465`*^9, 3.7092236319449687`*^9, 3.7092246200734863`*^9, 
   3.7092247482058153`*^9, 
   3.7092581873054223`*^9},ExpressionUUID->"e22d8f30-c6df-4bce-94ba-\
d9012a6baa27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rocAreaNN", "=", 
  RowBox[{"cmNN", "[", "\"\<AreaUnderROCCurve\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709180064191106*^9, 
  3.709180095467895*^9}},ExpressionUUID->"f23c2527-d2d5-4426-b3b3-\
4e1c28931487"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"negative\"\>", "\[Rule]", "0.878251832469112`"}], ",", 
   RowBox[{"\<\"positive\"\>", "\[Rule]", "0.8782518324691121`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.709180101361232*^9, 3.7092235476911497`*^9, 
  3.709223632001972*^9, 3.7092246201274896`*^9, 3.7092247482818193`*^9, 
  3.709258187353425*^9},ExpressionUUID->"c7b4121b-6666-4b3b-81b2-\
262fbd0def37"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Random Forest (1.4)", "Subsection",
 CellChangeTimes->{{3.7091797407546062`*^9, 3.709179746743949*^9}, {
  3.7091805119137144`*^9, 3.709180514952888*^9}, {3.7092219003109255`*^9, 
  3.7092219020940275`*^9}},ExpressionUUID->"985c937b-eb60-46a1-b889-\
b21f5361b797"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cmRF", "=", 
   RowBox[{"ClassifierMeasurements", "[", 
    RowBox[{"rf", ",", "testset"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.70917059780766*^9, 3.7091706044110374`*^9}, {
  3.709180783372241*^9, 3.7091808095037355`*^9}, {3.709223518654489*^9, 
  3.7092235359334774`*^9}},ExpressionUUID->"bd8dfd69-8f10-4c35-80e0-\
a65af681d45d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"accRF", "=", 
  RowBox[{"cmRF", "[", "\"\<Accuracy\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709179807471422*^9, 3.709179838867218*^9}, {
  3.709180520213189*^9, 
  3.7091805280186357`*^9}},ExpressionUUID->"ad2fc110-37ff-489f-b9b4-\
85f037cc53bd"],

Cell[BoxData["0.797`"], "Output",
 CellChangeTimes->{3.709179841800386*^9, 3.709180579470578*^9, 
  3.709223547834158*^9, 3.709223633349049*^9, 3.709224621499568*^9, 
  3.709224749646898*^9, 
  3.7092581887125025`*^9},ExpressionUUID->"07a08c50-cc8c-46b5-90db-\
03ce6b32dd30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"precRF", "=", 
  RowBox[{"cmRF", "[", "\"\<Precision\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709179857903307*^9, 3.709179878183467*^9}, {
  3.7091805309508033`*^9, 
  3.709180535042037*^9}},ExpressionUUID->"4105a7c3-2f79-4edd-830f-\
8e7873c704fb"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"negative\"\>", "\[Rule]", "0.8203781512605042`"}], ",", 
   RowBox[{"\<\"positive\"\>", "\[Rule]", "0.7757633587786259`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.709179879252528*^9, 3.70918057950358*^9, 
  3.70922354787216*^9, 3.7092236333600497`*^9, 3.7092246215385704`*^9, 
  3.7092247496588984`*^9, 
  3.7092581887215033`*^9},ExpressionUUID->"61341958-6cd9-44ef-baf9-\
b6e8b763b271"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"recRF", "=", 
  RowBox[{"cmRF", "[", "\"\<Recall\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709179891439225*^9, 3.7091799112503586`*^9}, {
  3.7091805381772165`*^9, 
  3.7091805428804855`*^9}},ExpressionUUID->"96be080a-7cbe-49d5-b744-\
7e3768ada0a1"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"negative\"\>", "\[Rule]", "0.7687007874015748`"}], ",", 
   RowBox[{"\<\"positive\"\>", "\[Rule]", "0.8262195121951219`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.709179913870508*^9, 3.7091805795115805`*^9, 
  3.7092235479291635`*^9, 3.7092236333720503`*^9, 3.7092246215505714`*^9, 
  3.709224749668899*^9, 
  3.709258188729504*^9},ExpressionUUID->"e38815d2-6cf8-49ad-8ca0-\
5f48004a54fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"confMtxRF", "=", 
  RowBox[{"cmRF", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7091803277791824`*^9, 3.709180345289184*^9}, {
  3.70918054908584*^9, 
  3.709180553164074*^9}},ExpressionUUID->"b6052733-8424-4e7c-b517-\
514cca8ada4d"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{0.9269005551518442, 0.8422203795121674, 0.5969864071516655}, {
   1., 0.42, 0.}}, {{0.939339910526821, 0.48025816869030463`, 
   0.0030200961323169594`}, {0.9035207100817702, 0.7480898496784613, 
   0.3791476331718992}}}, {{0, 0}, {2, 2}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["781", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "781", "\" examples of \"", "\"negative\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.8203781512605042`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.7687007874015748`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.79369918699187`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{781, " examples of ", "negative", " correctly classified"}], 
         Row[{"Precision = ", 0.8203781512605042}], 
         Row[{"Recall = ", 0.7687007874015748}], 
         Row[{"FScore = ", 0.79369918699187}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["171", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "171", "\" examples of \"", "\"positive\"", 
             "\" misclassified as \"", "\"negative\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.1796218487394958`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.17378048780487804`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          171, " examples of ", "positive", " misclassified as ", 
           "negative"}], 
         Row[{"Column fraction = ", 0.1796218487394958}], 
         Row[{"Row fraction = ", 0.17378048780487804`}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["235", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "235", "\" examples of \"", "\"negative\"", 
             "\" misclassified as \"", "\"positive\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.22423664122137404`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.2312992125984252`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          235, " examples of ", "negative", " misclassified as ", 
           "positive"}], 
         Row[{"Column fraction = ", 0.22423664122137404`}], 
         Row[{"Row fraction = ", 0.2312992125984252}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["813", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "813", "\" examples of \"", "\"positive\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.7757633587786259`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.8262195121951219`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.8001968503937008`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{813, " examples of ", "positive", " correctly classified"}], 
         Row[{"Precision = ", 0.7757633587786259}], 
         Row[{"Recall = ", 0.8262195121951219}], 
         Row[{"FScore = ", 0.8001968503937008}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1016", "\" example\"", "\"s\"", "\" of class \"", "\"negative\""},
            "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.7687007874015748`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1016, " example", "s", " of class ", "negative"}], 
        Row[{"Recall = ", 0.7687007874015748}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          TemplateBox[{
           "984", "\" example\"", "\"s\"", "\" of class \"", "\"positive\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.8262195121951219`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{984, " example", "s", " of class ", "positive"}], 
        Row[{"Recall = ", 0.8262195121951219}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "952", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"negative\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.8203781512605042`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{952, " example", "s", " classified as ", "negative"}], 
        Row[{"Precision = ", 0.8203781512605042}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1048", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"positive\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.7757633587786259`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1048, " example", "s", " classified as ", "positive"}], 
        Row[{"Precision = ", 0.7757633587786259}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{1.5, 
       FormBox[
        RotationBox["\"negative\"", BoxRotation -> 0.], TraditionalForm]}, {
      0.5, 
       FormBox[
        RotationBox["\"positive\"", BoxRotation -> 0.], TraditionalForm]}}, {{
      1.5, 
       FormBox["1016", TraditionalForm]}, {0.5, 
       FormBox["984", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["952", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["1048", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"negative\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"positive\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.709180348514368*^9, 3.7091805795615835`*^9, 
  3.709223547992167*^9, 3.709223633432054*^9, 3.709224621603574*^9, 
  3.709224749724902*^9, 
  3.709258188782507*^9},ExpressionUUID->"59596843-d283-46aa-a5de-\
179998cae855"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rocRF", "=", 
  RowBox[{"cmRF", "[", "\"\<ROCCurve\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709179924320106*^9, 3.7091799561059237`*^9}, {
  3.7091805595594397`*^9, 
  3.709180563502665*^9}},ExpressionUUID->"6f4f87d5-84ec-4b8a-8c13-\
200af1d1ade6"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"negative\"\>", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{}, 
        GraphicsComplexBox[CompressedData["
1:eJxl23mwnWV9wHGGcSjjMJRSSimKiFuppRQdhmEYhlcRERdkU5GKgAg0pRRT
GjEiqIiIFpF9KSCy72siRgxLQ9iSsGTfE7Lf5dxzjxQREXF63uf7O893yC//
MB+Fm3vPfc/zfJ/f+57dTvzGkSdvucUWWyz8iy22aP+5+Z87tpvwznNvP7x5
u09I3vodW577sfce3rzdJ1Rvs9V5M07Ya8Jm///E6neef+BNh+8+abN/f3Lz
x52uv3jGGxOSt71g5tqJ+55dzdf7fvVPDnrfpYd84AfVfP0fxtefmHzh0yc+
9OU9flTN3/fj6osOvmXehL3/u5q//6fVFz+7/pXJ+/+smu/nkupPf2D79luq
5vu7rHr2SR/9n8996PLNvr8rmrk7bHnobnMnJX/2tiPv+sKHr6zm+7+q+vmN
Zzxy7J5XV/PzXFN96Icun9X/K6v5+a6tfvGUqctO2+e6an7e66sPu2PByKT9
fl7Nz39D9dyhV984+4BfVPN63Fi9+w7tT6R5fW6q/re9d+5/S5rX6+b4fU5O
bl+Mz9ymeT1vqR7tf7Ofv0Pzet5a3f7XR96leX1vq/73h//lvi/do3m9b6++
Z9Gp/X9D8/rfUT322lmPHfeA5vdxZ/UeO7Zf8c7m/bvsM/9r7z8nmd/XXdX/
sc91L5wyVfP7u7u6/832vyPN7/Oe6vEzp686fZrm93tv9Z5Xz+n/BJrf933V
35i2onvmdM3v//7qB5Z0+j+x5np4oPq3r7/51nef0FwfD1bvVF4gzfWi9313
+x1rrp+Hqo/hBazmetLf3v89/W9Zcz1NqW7fjLNO0lxfU+L9+f3k9s02Z+OU
Zvr2D//jEdN/kMz1OLV6+WnlF1jN9an/2H/zvDQ0Na7/HyZz/f6yeudyAWiu
Z91+9QUjmuv74eqvcMFUc73r7/Sv3iUdzfX/q+r2h1l2mub9oNurbUVX8/6Y
Vr2yWy7IZuOOh53+yoYfJfP+0X/qXz0v96bF++fHyby/ft385btGHrx02wuT
y+UzUXO56HJ5vKJ5/z1S/VXeINW8H/U57a/rVc378zdxPV2UXH49kzS/Dl1e
/tc07+fpzb67nvfqR/a9OHn16eUNWs37Xf+5fblenx7X7yXJrAePVpeXY7Lm
x3+0eejSbdufsJrr97LqZy7/yv6PPH15Nb/vK5LLy/WGZr15rPp4FpRmxZV3
fvUny69MZj3S32t/nDc169Pjcf1clVz++rM1X16XL/fW403v6te+e0zv6mTW
tyeq1/TKAlfNevdEXJ/XJFNT/1vNeqi3K/+DZn3U7y3/gma91HuV/0CzfuqP
ly8wo3nHtQfe+A/vuDaZ9VUfUf4CzXqrv8ZfWM36q/+zfAMz4v1xXTLr84zm
79pvb6frk/svTv8bfLKa9fvJeH/8PLmP/g+gWd91fzHt/0Ca9V33F7v+D6hZ
3/WTJ7Q/8Mxq1ns9f0L7AmjWf71uYnkBqtkP9P9Nbl8AzX4ws9nzhpXrZv3T
DclblhfoqWr2C11q9BDN/qHfV14wzX6iS63O0uwv+hPlBX26mv1GH1VeYM3+
o7/OC17NfqT/q/wCNPuTblf7nbZ5ppr9Spf6/Zxm/9Lt6rzzRZr9TJc6fkGz
vz0T6+svkp9a2/6Cn61m/9ML25r+vGb/0xteKRdANfuh/l1b2y9p9kNdlpPt
nqtmP9RluThcsz9qji+a/fK5ZreyQN+YXN7u8zT7qf5kucBmxX6SzX47q9nj
iHZHuSn5i+WC1OzH+mQu0Gr2Z/3NcsHOiv1Lt++uXfa5OZn9XJe30w6zq9nP
dXm7fEGzv8+O/VF//Kit9z7/Y7ckc7zT9IAub4dFmj6YHftt9jPt5b/jnGp6
QS9uL+8vafphTvPZhfcf1P3MrdXsx9mbynFT0xv69+3lukTTG7pcjjs9X01/
PN98sfy5rZr9XJ+w+M2THzv+9uRyOX5Z0y+a46+mR3S5XJZp+kR/qiwQL1TT
K/rosmBoeuWF6Al96tE3n/nBU++ophey/5UFp5re0d8qC46mf3R5ed79YjX9
82LzzaWHXHDRpDuTy8txrKaPNMd/TS/p8u2t0vSSfq79697zUjX9pJe2X+44
TU/p4TJe0PTUS9Ez2X9o+bKmt+ZWsz7Obb53TPsK3ZVMj2nWz7nRM3cn02ua
9VXTb5r1VtNzmvVX03dzm37b9t8Q2azHmhzTrM+aHtSs15oenFfNej0veu2e
ZHpxXnNFyf9s1nNNT2rWd01fzoveuzeZ9V/Tn5r9QNOjmv1hXsN2nk2favYH
TZ9q9gtNr86vZv/Q9KpmP9H0q2Z/0fSsZj/R9K1mf9H0rma/0eSYZv/R9PD8
6NP7qu9qT193ZrM/afp5QTX7laanF0Rv3Z/Mfragmbr6nztvTcmmvzX7nabH
F0TfPJDMfqfpdc3+p+l3zX6o6XnN/qjpec1+qen7hdXsn5re1+yPmv7X7Jea
84Bm/9ScDxY2jx3fbnCavnswmf1Wc57Q7L+afFvYnDTxgK2Gvp7N/qw5f2j2
a815ZFE1+/ei6M1sziua/X1R065u/SUumfOMZv/XnG80+7vmvKPZ7zXnH83+
rzkPaXpAcz7S9IHmvLS4ml7QnJ8WRz8/lEw/aM5Xmp7QnLc0faE5f2l6Q3Me
W9z0Y6pfVNn0iCafNH2yOPo/m/Obpl8057kl1fSM5ny3pPndR9p3TDa9ozn/
afpHcx5cEueJKcn0kea8qOklzflR00ua86Smn5Y03z7jwr+fNjmb86amr5bG
eSebvtL0laanND2l6SlNTy1t/jylLOjJ9JWmrzR9pekpTU9pekqTE5qeWhrn
s6nJ9JWmr5ZV01OaftL0k6afljXt6rzredn0lKafNP2k6SdNP2n6SdNLml7S
9JKmlzS9pOml5dX00vI4n2bTT8ub9tU4autfJtNTy+M8m01fafpK01fLm59N
ag8c2fSWprc0vaXpreVx3s2mvzT9pdkONH21vPnr9u2w/cPJ9Jamt1ZU01ua
vloR5+9s+mpFc00Zb2fTW5re0vSVpq80faXpK01fafpK01eavtL0laavNH21
spq+0vSVpq80faXpK01frYx5Rja9pekpTU+tbEpu7/KrZPpqZcwfsuktTV9p
3s6avlrZtNOKo2/Oprc0vbWqmr7S9JWmp1bFfCSbvtL0laavNH21qtl92uR2
R0qmt1bF/CWb/tL0l6a/NP2l6S9Nf2n6S9Nfq6vpL01vaXpL01ua3lrd3Pf6
nLOeuDeb/lod86BsekzTY5oeW918tBwIfp1Mj2l6TNNjq2N+k83Lu7rh15VN
n2n6TNNnL1fTZ5oe0/SYpsc0PabpL01/afpL01+a/tL0l6a/NL2l6S1NX62p
Zv3S9JZmPdP0l2Z90/SYZr1bE/OzbHpNsx5q+k2zPmr6TbM+rmnaaVB/x0+m
7zTrp6b3NOuppv/WxHwvm/VV04ea9VXTi5r1VtOPmvVX05Oa9VjTk5r1WNOX
a5on32hfwGzWa01/rq1m/db0qGY91/SpZn3X9OramF/+Jpn1fm3zqf1Ou3Xm
wZp5YzZ9q9kfNL2r2S80/avZPzQ9rNk/1jbP91fP1+do5p3Tk+lnzf6i6WnN
fqPpa83+o+nttc0RHICS2Z/Wxvw0mz7X7F+aXtfsZ5p+1+xvmp7X7Heavl9X
zf6n6XvNfqjpe83+qOl7zX6p6X3N/qnpf83+ua4pObQ4m/OAZj/VnA80+6vm
vKDZbzXnB81+uy7m148mc57Q7Mea84Vmf9acNzT7s+b8odmfNecPzX6tOY9o
9m/N+WR9Nfv5+ubYsmBnc37R7Pea88v6mFdn0wPrm7Vnb/Pis2s08+zHqk9h
4JnM+UfTE5rz0PqYZ+vOW+3AIJv+0JyfND2iOU9p+kRzvtL0yvqYnz+ezPlL
0zOa85imbzTnM03vaM5rmv5Z35Tx7MRsznOaPtKc7zS9pDnvafpJc/7T9NSG
anpK01OantL0lKanND2l6SdNP2n6SdNPmn7S9JOmlzS9pOmlDXE/JJt+0vST
ppc0vaTpJU0vbWh+3x6HX8umnzbE/YYnkukpTU9taL7Tbs9nZdNXmr7S9JVm
e9T0laanND2l6amN1fSUpqc0PbUx7qdk01eavtL0lKaXNL2k6SVNL2l6SdNL
ml7S9NLG+hzj5qaPNsb9Hf2J9mnAA7PpJ00/afpJ008b4/5ONj2l6SlNP2l6
SdNLml7S9JKmlzS9pOklTS9peknTS5uadpq59/nZ9JOmnzT9pOknTT9p+knT
T5p+0vSTpp80vbQp7qdl00+aftrUPLem3ZCz6SlNT2l6StNTmp7S9JOmnzT9
pOknTT9p+knTT5p+2hT313T/h++/AjOS6SvN5afpK01fafpK01dD1fTUUNxf
04eWN2w2vaXpLU1faXpJ00tDcT8um34aai6ZUQ6QyfSSppeG4v6bLrev5mfT
U0Nxfy2bvtL0laavhpq/acfvOzxZzf2ybPpL01ua3hpqyvju6Gz6S9NfQ3G/
TfN4dTZ9pumzobh/ple1Obwym34bivtbumy/u85Mpu+G4v5UNn2n6TtN32n6
TtN3mr7T9N1Qc2IJ+Gx6T7NPDcf9pmz6T9N/mv7T9N9wc+vMg9uJRjX3q7Lp
w+GmH2P9BV9z/+qp6g+XgUk2PTkc96v0aeUbyKY3Nb05HPen9AP9r7bwfs39
Jl3erq9o7h89nUy/Djflx9lbcz8pm77V9O1w8632dsGZ2fSupneH435LNv07
3DD+y6Z/Nf07HPdfsulhTQ8PN39qj+tvau7PPJNMLw83JccP0Nx/yaanh5uy
fJ+bTU8Px/2VbHpa09Oaftb083DzVLmcs+lpTU9reno47s/o8uNu9Wwyva3p
7eG4f5NNfw83n77gov4VnE2Pj1TT45oeH4n7J7pdXc+4MJs+H4n7KfrFZ8sG
X839kmx6fqT5qzZ3tnuumvsjuixnR2XT/yNxv0RfVT7upJnXZ3NeGGnKf740
m/OD5vwwEvP4bM4TmvPESFPGle+alcz5QnO+GIl5fDbnDc35QnN+0JwfRprj
ygA3m/OE5jwxEvPzbM4TmvPESFOOHzdmc74Yifm3Xt9up+uyOX9ozh8jMR+f
XV2Wtw9mcz7RnE9GYp6ezXllpCmX34Rszi+a84vm/KI5v2jOLyMxP9f33N3+
0czTsznfjFZzvtGcbzTnm9Gm3a0O6mrm5XOSOf9ozj+jzV5lQKaZp2dzPhpt
Sn6doZkXax6n0Mxv9R/mlB+gmnnn89Xl17VfNuex0Zhv6nPa8eXZ2ZzXRmPe
qRk/aOafuuTtli9UMw/VnywvuGbeqcvyeoFm/pnN+VFzftScFzXnRc35UHM+
1JwPNefD0WZ2ebtlc14cjXmp3oYFvpr5ZTbny9HmsHKgyea8ORrzt2zOn5rz
52hzWfm4rWaels35dLQpObhQM1/L5vyqOb9qzq+a8+lo87flB3qpmnlcNufX
0aYsn8dkc54djXmY5uOdmnmTfrn9cVfrwec6Njfn49HYb7M5L4/GfEqzH2vm
TdmcrzXn607s15p5jmb/zua8rTlvd2KeotnvNfMTzX6vmT9kc37vxH6fzXle
c57vxPxCs/9nc77vxLxhXjX7v2b+kM35vxP7u2aekM18QHP+78R+r5k3aPZ3
zXwhm3mBZl7Qif0/m/lBJ+YTmj7QzCc0PaCZP2j6YH4y84dOzCc0faCZP2j6
QDNvyGaeoZlndGL/z2aeoZlndGJ+kc38ohP9oJlfaHpCM8/IZv6hmW9o5hea
eYVmXqGZV3SiPzTzkmzmGZ3oE808JZt5h2be0YleWVDNvEXTL5p5iKZfspmf
dGIeoumbbOYpmnmKZt0dq2Z+opmfjMW8RNNPmvlJNvOWseirbOYrYzFf0fSX
Zt6i6bFs5i1jMY9ZWE2vZTNvGYv5jKbfNPMaTc9p5jOanstmnjMW8xtN72nm
OZr+02x/mh7UzHuymfdo5jlj0Y+LqpkHaXpSMx/KZh6kmf+MRX9q5kWaHtXM
hzR9qpkPaXpRMw/S9KJm/qPpR808KJv51Vj05eJq5kOavtTMizR9mc38ayzm
R5q+1MyPNL2pmQdpelMz79Fc3pr5j6Yns5nHjcX8Z0ky87mx6E/NPEjTn5p5
j6Y/s5nvaeZ7YzEf0vSqZj6UzbxPM8/TzO/Gonezmd9p5ndjMX/KZp6nmedp
5ndj0dPZzPM08zzNvG4s5l3ZjBM08zrNfE4zn+tWM5/TzN8087Ru9H828zLN
/Esz7+rGPE4PPqe0uZmHaeZfmvlXN84T2cy/NPOvbpw3NOcNzXlCc57QnCey
mZ914/ygOT9ozg+a84Pm/KA5L2i+vOY8oOl/Tf8vq6b/Nb2v6X1Nz2t6XtPz
mp7X9LqmzzV9rulzTS5r+lzT55oeX57MPLMbfa7pc02fZzP/7Eava3pc09ua
vtb0taavNX2t6V9N/2p6V9O7mp7V9OyKanpW07OantX0q6Zfs5kPd6M/Nf2p
6U9Nb2r6UtOXmu1V05eantT05Mpq+lHTj9nMs7vRk5qe1PSkpic1/ajpx2zm
5d3oSU1Panoym3l6N/pS05eaftT046pq+lHTj5o+zGZ+341ezGZ+341+1PSj
ph81/ZjNfL8bPanpSU1PZnM/QDPv70ZvanpT05uavtT05epq+lLTl5q+1PSk
piezuR/Rjb7M5n5EN3ozm/sR3ehPTX9q+lPTn5r+zOb+Rjd6VNOfmt58uZre
1PSmpjc1vanpSU1PanpS04ea/tP0nKbPNL2k6R9N/2Rzv6dbP1c0MOuVpmc0
65embzTrl6Z3NOuZpn8065umhzTrnaaHNOufpo8066GmlzTroaafNOujpqc0
66WmrzTrpaa3NOunpr8066mmxzTrazb38zT38wb9plmP11bTc5r1WdN3mvU6
m/t/g/7L5n7geKznmj7UrOeaXtSs75p+1Kz3mp7UrP+avtSs/5re1OwHmv7U
7A+aHs3mfuh47A+aXtXsF5p+zeZ+6njsJ5q+1ewvmt7V7DfZ3H8dj/5dV81+
pOlhzf6k6WPNfqXpY83+pellzX6m6WfNfqbpac1+pulrzX6Wzf3n8ehvzX6n
6XHN/qfpc81+qOl1zf6o6XfN/qjpec1+qel7zf6p6X3Nfrq+mv7X7K+a84Bm
v9WcDzT7bzb378fj/KDZnzXnCc1+rTlPZHN/XnP/fTz2d835Q7Pfa84jmv1f
cz7J5n76ePSB5vyi6QXNeUbTD5rzjaYnNOcdTV9ozj+avsjm/v94nI/04HM4
A9Mfmv7Q9IemPzT9oekPTX9o+kPTH5r+0PSHpj80/aHpD01/aPpD0x+a/tD0
RzbPU4xHj2h6RNMjmh7R9IimRzQ9oukRTY9k83zHePSHpj80/bExmedBxqNH
ND2i6RFNf2h6Q9Mbmt7Q9IamNzS9oekNTW9oekPTG5re0PSGpjc0vaHpDU1v
aPpC0xeavtD0haYnND2h6QlNT2h6QtMP2TzvM+iJTdX0hKYnND2h6QlNT2h6
QtMTmp7Q9ISmJzQ9oekJTU9oekLTD5p+0PSDph80/aDpB00/aPpB0w+aftD0
g6YfNP2g6Ydsnt/SPL816AtNX2j6Yqiavsjmea9Bb2h6Q9Mbmt7Q9IWmLzR9
oekLTV9o+kHTD5p+0PSDph80/aDpBU0vaHpB0wuaXtD0gqYXNL2g6QVNL2h+
fZo+0PSBHnxOY2D6QNMHmj7Q9IGmDzR9kM3zfoNe0PSCphc0vZDN84GDftD0
g6YfNP2g6QdNP2j6QdMP2TyPOOgHTT9o+kHTD5p+0PSDph80/aDpB00vaHpB
0wuaPhippg80faDpA00faPogm+c1B72QzfOZmucvBz2h6QlNT2h6QtMT2TzP
OegLTV9o+kLTF5q+0PSFpi80faHpC01faPpC0xeavtD0haYvNH2h6QtNX2h6
QtMTo9X0hKYnsnleVvO87KA3snk+dtAfmv7Q9IemPzT9oekPTX9o+kPTH5r+
0PSHpj80/ZHN872DHsnm+dxBn2j6RNMnmj7JZnw96BVNr2h6RdMrml7R9Iqm
RzQ9ks3zwYM+0fRJp5oe0fSIpkc0PaLpkWyeRx70iaZPNH2i6ZNsnk/uRa9o
eiWb55d70S+aftH0i6ZfNP2i6RdNv2j6RdMvmn7R9IumXzT9oumXbJ6n7kXP
ZPM8dS/6RtM3mr7Rg+coB6Zvsnk+uxe9o+kdTe9oekfTN5q+0fSNpm80PaPp
GU3PaHomm+fHe9E3mr7R9I2mbzQ9o+kZTc9oekbTM5qe0fSMpmeyeZ69F32j
6RtNfmj6RtM32Tz/3ove6SbzPLzmefZe9JCmhzQ9pOkhTf9k83x8L3pH0zua
3tH0jqZ3NH2j6RtN32j6RtM32Tyv34ve0fSOpnc0vaPpHU3vaHonm+f3e9E/
mv7R9I+mfzT9o9kONP2j6Z9snvfXPO/fiz4ar6aPNP2j6R1N72h6R9M7mt7R
9I6mdzS9k83nEXrRP5r+0fRPNp9f6EUPaXpI0z/ZfL5B8/mEXvRQNp9X0Hxe
oRe9pOklTS9p+iibzzv0opc0vaTpJU0vaXpJ00uat7emjzR9lM3nL3rRS71k
Po/Ri37K5vMXvegpTU9pekrTT5p+0vSTpp+y+TxHL/pJ00/ZfN5j0E+afsrm
8xuDnsrm8xqDvtL0laavNH2l6StNX2n6StNXmr7K5vMjg97S9JamrzQ9pekp
zcup6SlNT/02mc+v6Lf/c/M/m///fr3/By/dUrI=
         "], {{{}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwl2VMQGNgOANCtbdu2bdu2bdu2bdu2bdvYre32nc77OJPJ3O9McpMEDdtV
bBvwn3/+CcDFYP+Pf/NABCYIQfH0T3BCEJJQhCYMYQlHeCIQkUhEJgpRiUZ0
YhCTWMQmDnGJR3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZy
kJNc5CYPeclHfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQ
k1rUpg51qUd9GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc5nHfBawkEUsZglLWcZyVrCSVaxmDWtZx3o2sJFNbGYLW9nGdnawk13s
Zg972cd+DnCQQxzmCEc5xnFOcJJTnOYMZznHeS5wkUtc5gpXucZ1bnCTW9zm
Dne5x30e8JBHPOYJT3nGc/7lP17wkle85g1vecd7PvCRT3zmC1/5xnd+8JNf
/OYPf4s/AAEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURkohCVaEQnBjGJRWzi
EJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVsZCcHOclFbvKQ
l3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpUpwY1qUVt6lCX
etSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd6URnutCVbnSnBz3pRW/60Jd+
9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYwl3nM
ZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCXfezn
AAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5xW3ucJd73OcB
D3nEY57wlGc851/+4wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7wt/EH
ICCBCEwQghKM4IQgJKEITRjCEo7wRCAikYhMFKISjejEICaxiE0c4hKP+CQg
IYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nITR7yko/8FKAg
hShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahNHepSj/o0oCGN
aEwTmtKM5rSgJa1oTRv+DnDtaE8HOtKJznShK93oTg960ove9KEv/ejPAAYy
iMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKI
xSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vYzwEOcojD
HOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jPAx7yiMc8
4SnPeM6//McLXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84e/QH4CABCIw
QQhKMIITgpCEIjRhCEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJ
SEoykpOClKQiNWlISzrSk4GMZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUo
SjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhK
M5rTgpa0ojVtaEs72tOBjnSiM13oSje604Oe9KI3fehLP/ozgIEMYjBDGMow
hjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtYyjKW
s4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexiN3vYyz72c4CDHOIwRzjKMY5z
gpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc84jFPeMoznvMv
//GCl7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/+PvhD0BAAhGYIAQlGMEJ
QUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlB
SlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJ
SlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta
0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH/0ZwEAGMZghDGUYwxnBSEYx
mjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zGUe81nAQhaxmCUsZRnLWcFKVrGa
NaxlHevZwEY2sZktbGUb29nBTnaxmz3sZR/7OcBBDnGYIxzlGMc5wUlOcZoz
nOUc57nARS5xmStc5RrXucFNbnGbO9zlHvd5wEMe8ZgnPOUZz/mX/3jBS17x
mje85R3v+cBHPvGZL3zlG9/5wU9+8Zs//F32BSAggQhMEIISjOCEICShCE0Y
whKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwSkpKM5KQgJalITRrS
ko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGKUozilKAkpShNGcpS
jvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b2tKO
9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM4YxgJKMYzRjGMo7x
TGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVs
YCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSnOM0ZznKO81zg
Ipe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM5/zLf7zgJa94zRve8o73
fOAjn/jMF77yje/84Ce/+M0f/i76AxCQQAQmCEEJRnBCEJJQhCYMYQlHeCIQ
kUhEJgpRiUZ0YhCTWMQmDnGJR3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCR
TGQmC1nJRnZykJNc5CYPeclHfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFK
VKYKValGdWpQk1rUpg51qUd9GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50
pgtd6UZ3etCTXvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxm
ClOZxnRmMJNZzGYOc5nHfBawkEUsZglLWcZyVrCSVaxmDWtZx3o2sJFNbGYL
W9nGdnawk13sZg972cd+DnCQQxzmCEc5xnFOcJJTnOYMZznHeS5wkUtc5gpX
ucZ1bnCTW9zmDne5x30e8JBHPOYJT3nGc/7lP17wkle85g1vecd7PvCRT3zm
C1/5xnd+8JNf/OYPf498AQhIIAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4Wo
RCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxk
Izs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSj
OjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOGtrSjPR3oSCc604WudKM7
PehJL3rTh770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8E5jIJCYzhalMYzoz
mMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b2MgmNrOFrWxjOzvY
yS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjMpeC/f+O/j8p9vCS
               "]]}]}, {}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV2UMQIEYQAMCcbdu2bdu2bdu2bdu2bdu2mVz6Hl3z2PdwEzRsV7FtgH/+
+edisH/++RsDEojABCEonv4JTghCEorQhCEs4QhPBCISichEISrRiE4MYhKL
2MQhLvGITwISkojEJCEpyUhOClKSitSkIS3pSE8GMpKJzGQhK9nITg5ykovc
5CEv+chPAQpSiMIUoSjFKE4JSlKK0pShLOUoTwUqUonKVKEq1ahODWpSi9rU
oS71qE8DGtKIxjShKc1oTgta0orWtKEt7WhPBzrSic50oSvd6E4PetKL3vSh
L/3ozwAGMojBDGEowxjOCEYyitGMYSzjGM8EJjKJyUxhKtOYzgxmMovZzGEu
85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr29jODnayi93sYS/7
2M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrXuM4NbnKL29zhLve4
zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4zg9+8ovf/Mt//OFv
8gcgIIEITBCCEozghCAkoQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4
JCAhiUhMEpKSjOSkICWpSE0a0pKO9GQgI5nITBayko3s5CAnuchNHvKSj/wU
oCCFKEwRilKM4pSgJKUoTRnKUo7yVKAilahMFapSjerUoCa1qE0d6lKP+jSg
IY1oTBOa0ozmtKAlrWhNG/4W73a0pwMd6URnutCVbnSnBz3pRW/60Jd+9GcA
AxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYwl3nMZwEL
WcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCXfeznAAc5
xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5xW3ucJd73OcBD3nE
Y57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7lP/7wt/EHICCB
CEwQghKM4IQgJKEITRjCEo7wRCAikYhMFKISjejEICaxiE0c4hKP+CQgIYlI
TBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nITR7yko/8FKAghShM
EYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahNHepSj/o0oCGNaEwT
mtKM5rSgJa1oTRva0o72dKAjnehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCG
MozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpay
jOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwRjnKM
45zgJKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe8ozn
vOAlr3jNG97yjvd84COf+MwXvvKN7/zgJ7/4zb/8xx/+Dv0BCEggAhOEoAQj
OCEISShCE4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4SkJCM5
KUhJKlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIUozgl
KEkpSlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSjOS1o
SSta04a2tKM9HehIJzrTha50ozs96EkvetOHvvSjPwMYyCAGM4ShDGM4IxjJ
KEYzhrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkq
VrOGtaxjPRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlO
c4aznOM8F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17z
hre84z0f+MgnPvOFr3zjOz/4yS9+8y//8Ye/C38AAhKIwAQhKMEITghCEorQ
hCEs4QhPBCISichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSk
IS3pSE8GMpKJzGQhK9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK0pSh
LOUoTwUqUonKVKEq1ahODWpSi9rUoS71qE8DGtKIxjShKc1oTgta0orWtKEt
7WhPBzrSic50oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj
GM8EJjKJyUxhKtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetY
zwY2sonNbGEr29jODnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjP
BS5yictc4SrXuM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8H
PvKJz3zhK9/4zg9+8ovf/Mt//OHvsS8AAQlEYIIQlGAEJwQhCUVowhCWcIQn
AhGJRGSiEJVoRCcGMYlFbOIQl3jEJwEJSURikpCUZCQnBSlJRWrSkJZ0pCcD
GclEZrKQlWxkJwc5yUVu8pCXfOSnAAUpRGGKUJRiFKcEJSlFacpQlnKUpwIV
qURlqlCValSnBjWpRW3qUJd61KcBDWlEY5rQlGY0pwUtaUVr2tCWdrSnAx3p
RGe60JVudKcHPelFb/rQl370ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nE
ZKYwlWlMZwYzmcVs5jCXecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRm
trCVbWxnBzvZxW72sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWu
cJVrXOcGN7nFbe5wl3vc5wEPecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77w
lW985wc/+cVv/uU//vD30B+AgAQiMEEISjCCE4KQhCI0YQhLOMITgYhEIjJR
iEo0ohODmMQiNnGISzzik4CEJCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nI
Sjayk4Oc5CI3echLPvJTgIIUojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahK
NapTg5rUojZ1qEs96tOAhjSiMU1oSjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3
utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSm
M4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNraz
g53sYjd72Ms+9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnOD
m9ziNne4yz3u84CHPOIxT3jKM57zgpe84jVveMs73vOBj3ziM1/4yje+84Of
/OI3//Iff/j7yReAgAQiMEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohOD
mMQiNnGISzzik4CEJCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc
5CI3echLPvJTgIIUojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rU
ojZ1qEs96tOAhjSiMU1oSjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSi
N33oSz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2
c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd7
2Ms+9nOAgxziMEc4yjGOc4KTnOI0ZzjLOS5zngv8D+RX8Iw=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             AbsoluteThickness[1.6], 
             GrayLevel[0.5]], 
            LineBox[{2002, 2003}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        AxesOrigin -> {0, 0}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> 1, Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
           FormBox["\"Recall\"", TraditionalForm], None}, {
           FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.5], 
          AbsoluteThickness[1], 
          AbsoluteDashing[{1, 2}]], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
         "PointLegend", DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"PointLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"positive\"\>", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{}, 
        GraphicsComplexBox[CompressedData["
1:eJx123nQnVV9wHGGYSjjMJRSiimKiFvRUooOwzAMw1FExQXZVKQiIAJNKcWU
RowYVERES5F9KSD7HiDsW0QKhCWEAIEEQsj65s273FWKiIg4vc/5nnu+0/en
/MN8FMj73vvcc76/8zx3uyO+dcBRG26wwQZL/2KDDZq//7m/rt98+jtOvm6/
9P99ePXvp1165sNvTp/y/89Im2y04ckff+9+aaqf23LDfbZ7bmY1//6s6vdv
s8vz33j/SVP+/R9Wz9vi7r/ff96Ppvz3fly9fqt9j3t19CdT/vs/rf7Ld03e
dvZmp0/5886o3nXbU1776K5nTvnzz6q+/ezNmv/ClJ/nnOrHz/3a7vc/du6U
n++86lfOv+HrP1t+/pSf94Lq/oWvf//g/oVTfv6Lqje6eM8rPrzRxVN+n0uq
/7b5x6ddOuX3+0X1jpetGFnwD5cVHx7M73959Xb5F7iimtfjirTpxqc8fPhO
04N32L95Ra6s5vXSzU+zzS5XVfP66U8cuMnOp3786mpeT/35Jbfu1f3cNdW8
vvrL+a9rq3m99eEvvnXUg4ddV83rr4856KoTPnjM9dW8H/rby/Y+7YyZN1Tz
/ugfHNz8GzdW837dVF6/GcGDa2HwA2rezznV5+XLSfP+3lzN26d5v2+pvrG5
2m7QvN+3Vt+56h/bb9+hef/nVj94WPOCaa6H29I7Tt3zyv22nxl85Iw9Nh7/
pub60M1vN/gVq7lebq8evBmDd0Rz/dxeXs9Zwb/5aPMTa66vO6q/e/zpf3fv
rDvSZqc9unbGrrODuf70H+/IL0g11+Od1c2rs+0pmutTN//0gZvcVc31eld5
/X4Y/POZzQV1V/rZXu87e+8P/CiY61v/dfPjbnF3Nde7vigvH3eX1+/HwXwe
dL5ctrmnms/HPen0x464/as7/KSa1/Onwc2n5aCrNJ8nvf29s5pXvJrPl77l
jYUnPnSz5vOmP5YvyPuq+fxp/vOaz+N96YxPX714+s7/Gdx8mgbvWHl//iuY
z+/96cwn1r06a/efBz/yZvMf1HyeH6j+zG7HXvPopzWfb/304Ld9Y+ED5f0/
K5jP/7zq/blAq1kPdH47XtSsD7+sPiT/gpr1Qq+dvekzT6zRrB8PVh/NAlDN
eqIHn5XBB0azvvyqOi8HMzTrjf5tc3m+rll/Hkqf/cAWzSUd/L3m5TpR8+Np
KuR/qlmf9Ceb3XNPzXqlm0/vzqdq1i/95JrmBdOsZ3rwDw/+jYerWd/0PvkH
0qx3+qyH8wVWzXqn8/L2vGb903/TLBdbPlLNeqjzx+8gzXqoyQvN5adXNpfP
Cs16qfPbte2j1ayf+oh8gWnW00fL+nVO9VNHfuy/v/Chc4MHH67mE1bN+qsH
F9vgDdWsx/OrP5I/sJr1eH5Z/84LPjb/gfPT56894MYvfeT8YNZrPXfwby+5
VbN+6/x2v6pZzx+rzj/uzpr1XX+nWW5P0KzvmuVMs97rPzTLxVua9f/x6vxx
3UOz3ut8eZ/8eNkfLghmP9Dz89ul2R90/uM2fiI9vf74+w/Z8cJg9g/92cHq
v2xvzX6im6v5+NM1+8sTZX+4KHiw+DUf6Gr2H/1Xzcd/8yer2Y90vrwP1OxP
+oKc+5r9Sud/fJlmv9J5O3jXgmr2K31o3mA0+5XOy90Vmv1rQdrnQ+cuGHwE
gtc1H+8Rzf72VHW+/D6o2e90frmma/Y/Peem5i/N/qebT89eXc1+uLB6p7zh
aPZHnZez4zX7pSafNPun/t3C/ANVs58+XZ1/3d00+6s+qdlOZ2v226dLf1wc
zHam2Y91Xs43XFTN/qw/lV+wRemZo+98+dhdLqmmZy4NZj/X+eN0mmZ/10/l
y0Gz3+tN+QClfa9/YXLmbr8Ipgf0vnnD0/SBPieP15pe0Hl5XqLpB/3O/Ac8
W00/6PzxOFjTE8+WPrssmHFa0xt6dfPjrdL0x3PVrB+aHtGsJ5o+0awvml7R
rDeaftGsP5qe0axHmr7RrE+a3tGsV5r+WVzN+rU4PTf+2puz97g8mD7SrG+a
XtKsd5p+0qx/mp7SrIeavlpc+vOKYNZHTX9p1svFafstm2KIps806+nz1fSa
Zn3V9JtmvdX0nGb91fSdZj3W9J5mfdb0n2a91vSgZv3W9KFmPX+hml7UrO+a
ftSs95qe1Kz/mn7U7AeantTsD5q+1OwXL5R+vTKY/tTsJ5oeXVLN/qLpU81+
o+lTzf6j6VPNfqTpVc1+pOlXzf6kWb40+5WmbzX719Jqelezn2n6V7N/aXpY
s59p+lizv2l6WbPfafp5afqXnbcebLGa+eSqYPZHTW9r9ktNfy9NTUx/7tpo
9s8Xq+lzzX6q6XXN/qrpd81+q+l3zf6r6XnNfqzpe83lqel9zX6t6f2Xqtm/
Nf2v2c8184Bmf9fMB5r9XTMvaPZ7zbyg2f81uaPpAc08oemDZdX0gaYPNH2g
6YNlZX69Ophe0PSCphc0vbAstQYx9MXro+kHTT9o+kHTD5o/TtMPmn7Q9MPL
Zf6+Jph+0PSDph80/aDpB00/aPpB0w+aftD0gqYXNNu3pg80faDpg+XV9IGm
DzR9sDw1V8cBN0bTC8vL/H5t9b/e/U+3fGVOND2h6QlNT2h6QtMTy8t8f10w
faHpC01faPpC0xeavtD0xSvV9IWmLzR9oekLTV9o+kLTF5q+0PSFpi80faFZ
rjU9oekJTU+sSHOWHjN4BzTnH9cH0xsrUuf1Ex88dG40/aHpD01/aPpD0x+a
/tD0h6Y/NP2h6Q9Nf2j6Q9MfK8p5xw3B9MjKtMNWzSsYTZ9o+kTTJ5o+WVnm
/RuD6RVNr2h6RdMrml7R9IqmRzQ9sjL92y6XLDr6zmj6RNMnmh7R9MiqanpE
0yOaHllVziduCqZPNH2i6RNNn6xKg8VlcIVH0yuaXllVzkPmBNMvmn7R9Ium
XzT9oumX1dX0i6ZfNP2i6RdNv2j6RdMvmn5ZnXonzFt53L3R9Mzqcl5zczB9
o+kbTd9o+kbTN6vTjhcuHKww0fTOmmrWI03/aNYjTQ9p1idNH2nWK00fadYv
TS9p1rM15XzolmB6SrPeafpKs/5p+kqzHmp6S7M+avpLs15qekyzfq5J37r3
le4J86LpNc36quk3zXqr6bk15bzn1mDW3zVp7kvtwQqtOX+ZG0wPatbntdX0
oGa91vTh2vTrN956+/sPRbOea/pRs75relKzvmv6UrPea3pTs/5r+nNtOU+6
LZj9QdOnmv1C06ua/UPTr5r9ZG2aljfIaPpWs99oelez32j6V7P/aHpYsx+t
Lectetd3NytONP2s2b80PT1SzX6m6WvN/qbpbc1+p+ltzX6n6euRcr5wezD7
oaa/NfvjSDqY4AimzzX7p6bXR8p5hv7u7u8ZfESj2V9HynnFHdXNzdIFR0bT
/5r9WNP/mv14pMyz0cwHmv1aMy9o9m/N/KDZzzXzhGZ/18wXI6m5ebhwfTT7
/0iZn+8MZh4ZScuPzUEUTC+sq2Ze0fSDZn7R9IRmntH0xboyT0cz72j6Y136
/ew9Ln92PJp5SNMn68r8eVcw89K6tHUOuGh6RjNPafpGM19p+kYzb2n6RjN/
aXpnXZmPo5nPND2kmdc0faSZ3zS9pJnnNL20LjXvxguTmnn97mDmP01fjaav
EcDB9NZomc+j6S9Nf2n6S9Nfmv4aTd8bTF8vtTXz6T3B9JmmzzR9Npqai/nl
YzXzrW7q9pVuND03Wubde6tXdHMQB9N3o2V+1H8Y7M6r+5r58b5genA05eV+
hmb51Xl5fTWafhwt89v91V8nSKuZr/RJzcfxNc289EB1vpxmai6HaHp1NOW3
73XNfDGvetVxOfiC6VtN346W+UP/sXk539DMD78MpodHU355Zmlejmh6eTTl
l+PNaPpZ08+aftb0s6aXR0tPPxhMP2v6WdPPmn7W9LKmhzU9rOnh9dX0sKaH
Nf2r6V9N/2r6V9O/mv7V9K+mfzX9q+lfTe9qend9OoyBIZj+1fTv+jKPRNPD
mh7W9LCmfzX9q+nf9ekHzeX8VjQ9rOlhTQ9reljTw5re1fTu+jJf/ao6X66z
o+lhTQ+PVdPDmh4eK/Oazn/829H0sqaXNb2s6WVNL4+V+e2hYHp5LK3p54Ep
mH7W9LOml8fKvKWHz4lONT2t6WlNL4+V+Ulvnv+HaHpZ08uaXtb0sqaPx8p8
FE0vj6X35n9BMz9F09Oanh5LO+X/YDR9relrTV+PlXknmt7W9PZY+kT+gR+u
Zt6Jpr81va3pa01fj6f98y+omYei6e/x9A1+oWB6XNPjmh7X9LimvzX9PV7m
sWj6W9Pfmt7W9LWmr8fTv+cXXDPfRdPf42lwMQ/ekEeqmf+i6fPxNMDgBY+m
1zW9rul1Ta+Pl/lQD4aJwRuomc/0IBYHb6BmPtOPHN684I8GMw9o+n+8zG/R
zAOaeWA8PT+9ecE181c084JmXtDMC5p5QXO5jqeRGfkNDWY+0MwH42W+0/87
q3nDNfOc3jBfAPOrmeeiWQcnqpknNPPERMpPd+8dzXwxUeaxaOYNzbyhmScm
0vvyBaSZp3R+unuBZr6KZh7RzCMT6ZP5AnwsmHljosxf0cwXE+nAfMFGMz9o
5oGJMq/pb3KBB9PvE2X+iqbPNX0+kf4jf0A081o0Pa7p7YnUTDvTNn28mnkt
mv6eSPnp1y9E0+MTZb7TzfSy9RmaeU/np1sXaea9aPpe0/eavp9I89c2H5gn
qpkX9ZLm6dAvaubFaOYBzTwwkUZfzR+4aubLaOYFzbwwkX7TPJ34bDTzg2Z+
0MwPmvlBMz9MVjM/aOaHyTL/RjNPaOaJyZRzaPMng5kvNPOFZr7QzBea+UIz
X2jmC818oZkvJsu8rnP+7KeZ3zVfT9HM8zpvt4s187z+VF6gFgQzz0yWeT+a
+UYzz2jmmcn05bzgRTPfTJbzg2jmncl0FAtkNecL0cxDmnloMn07L5jRzEOa
eUgzD02W84to5iPNfKSZjyZT3m62fCqYeUkzD2nmoclyXhLNfNRKeTv5kuY8
JZr5qZX4eozmfCWa+amV8vK8VHP+Es181UqPN8vrVgurOZ/RLzbL5Vc05zHR
zGetNJa/HqM5r4lmfmul3zbL00ua85xo5rtWyh+3aU9Xc74TzbzXSvnj9dVo
5r1WOQ+KZv5rJb5uoTkf0vnyfVlzvhPN/NhKn8kb0qJqzif0QXmDimae1MyT
rXJeof+ZDS2YeVMzT7bK+UM082UrfSdvcJrzgmjmz1bKL/+7n6nmPCGa+VQz
n7ZSfnkPiWY+bZXzBM3XLaKZT1vlvEHnX29lNPOrZl7VzKuaebVVzhuimVc1
82orPdn8uu95Npj5VDOftsp5RTTzqmZe1cyj7bSs+fUPjWYe1cyj7XK+oSfy
1xmimVfb5fxD/67h6mjm2Xb9HsvQ7Kea8w/N/qo5v9Dst9HMy+1ynqHZjzXn
G5r9OZp5WzNft8t5RzTzdrvs75pxXbPfRzOfa+bzdjnv0PSB5vxjcTDzfLv0
guZ8I5p5XjOvt0svaM5DopnfNfN7u/RENPO8Zp5vl/OUaObvdukPzXlINPO5
Zh5vl17RnHdo+kRz/qHpj2jm+3Y5D4lmnm+X/tCclzxfTV9ozks0faE5/4jm
vKBd+kNzPhLNeUK79Ijm/ETTJ5rzFE2faMbNaM4r2qVfNOcv0ZxntEvPaM5f
XqimbzTnLZre0Zy/aPpHc36i6R/NeYmmhzTnJ5oe0pynaPpIc74SzflNu/SS
5vxlSTX9pDlf0fST5nxF00+a8xNNP2nOU6I5X2qXvtKct2h6SzNeaPpLc94S
zXmTZh/qlD7TnMcsrabXNOcxmn7TnL9Ec57VKf2mOZ/R9JzmfCaa869O6TnN
+Yym5zTnNZq+05zPaPpOc17zYjW9pzmvieY8rlN6T3N+o+k9zXmOpv805zua
/tOc92h6UJPDmr7TnO9oek5z3vNSNf2mOf+J5jyyU3pNcz6k6TPNeZCm1zTn
Q5pe05wHafpNc16j6TfN+Ywefu9oqjlf7ZS+0/Sdpu80fafpOU3PaXpO03Oa
XtP0mabPNH2myQFNf2n6S9NbL1fTW5qe0vSUppc0PaTpH03/aPpG0zfRnFd3
Su9Ec37dKf2j6R9N72j6Jprz7k7pHU3vLK+mdzS9o+kdTd9o+kbTM5qe0fSM
pmc0PaPpGU2/RHN+3yk9o+mXaM7zO6Vnojnf75S+eaWavtH0jaZvNH2j6RtN
32j6Jpr7B53SO5re0fSOpneiud/QKf2j6R9N70Rzf6JT+kfTPyuq6Z9o7ldo
7ldo7kdo7j90Sj9p+knTT9HcX+iUntL0lKanorkf0Sk9pekpTU9Fc/+iU/pK
01eaj3809ys6pac0PaXpqZXV9JSmpzQ9peknTT9p+ima+yfDntL0k6afNP2k
6SdNP0Vz/2XYU9Hcjxn2laavork/M+ytVdX0lqavNH2l6StNX2n6StNXmr7S
9JWmrzR9pekrzcsZzf2nYW9pekvTW6ur6S1NX2n6StNXmr7S9JWmrzR9pekr
TV9p+krTV5q+0vSVHn7PaWjWM01fadYnTW9p1itNf0VzO264nmn6TLOeaXpN
s75p+k2z3ml6TrPeafpOs/5pek+zHmr6L5r7m8P1UdOHmvUymvuhw36M5v5o
t6yvmr7UrK+a3tSst9Hcb9XcX+2WPtWsz5peXVvNeq3p12ju12ruz3bL+q7p
Xc16r+nfaO7vdst+oOljzf6g6eVo7g9r7g93y36i6WvNfqLpbc3+ounvaO4/
a+4/a+4/d8v+pOl1zX6l6XXN/qXpd81+pul5zX6m6fto7o9r7o9r7k93y/6n
mQc0+6FmPtDsh5p5YSSY+93dsl9q5gnN/qmZLzT7qWbe0OyvmvlDs99q5hHN
/quZT6K5X98t+7NmftHs19Hc3++W+Uazn0dzv79b5h/Nfq+ZhzT7v2Y+0vSA
Zj6K5nmCbukFzfyk6QXN/KTpB838pOmJaJ5P6Jb5al0wzyt0S39o5i9Nj2jm
sWieb+iWXtHMa5p+0cxvmp6J5nmJbpnvNL2jmfc0/aOZ9zQ9pJn/NH2kmQc1
vaSZDzX9pJkPNT2lmRc1faWZHzW9pZkfo3m+RPM8Sbf0mWbe1MPvSQ1Nr0Xz
PEq39Fs0z6d0S89pek7Tc9E8v9ItPafpOU3PaXpO03OantP0nKbnND2n6TlN
z2l6TtNzmp7T9Jum3zT9pum1aG73ap7v6ZZ+0/Sbpt80/RbN80DDntP0mqbX
NL2m6bX1wTw/1Cv9pumzaJ4f6pVe0/Saptc0fabpM02fafpM01+a/tL0l6a/
NP2l6S9NT2l6KprnoXqlrzR9pekrTV9p+krTV5q+0vRVNM9T9Uo/afpJ00/R
PF/VKz2l6SlNT2n6aayaformeaxe6SlNT2l6StNT0Tyv1St9pekrTV9p+krT
V5q+0vRUNM+D9UpfafoqmufDeqWvNH2l6SlNT2l6StNT0Tw/1it9pekrTV9p
ekrTU5qe0vSU5nKM5nm0XukrTV9pekrTT+PV9JOmn6J53q1XekrTT5p+0vST
pp80/aTpJU0vaXpJ00uaXtL0kqaXonk+r1f6KZrn9Xqlp6J5Xq9X+krTV5q+
iub5vV7pLU1vaXpL01vRPN/XK/2l6S9Nf2n6KprnA3ultzS9pYffGxmavorm
ecJe6atonh/sld7S9JamrzR9pekrTV9p+krTV5q+0vSVpq80faXpK01fafpK
01eavtL0laavonmesld6S9NTmp6K5vnLXumraJ7H7JXe0vSVpq80fRXN85y9
0lua3tL01WQ1faXpqWieBx32laavNH2l6atonicd9lY0z5MO+0vTX5r+0vSX
pr80/aXpL01/afpL01ua3tL0lqa3onk+dthf0RyvDXtM02OaHovmedphj2l6
TNNj0Tx/O+yxaJ6/7Zc+0/SZps80fdaqpsc0PabpMU2PafpL01+a/tL0l6a/
NP2l6S9Nb2l6S9NXmr7S9JWmrzR9pekrTU9peiqa56H7pa80faXpK01fafpK
01fRPE/dL32l6StNX2n6StNX7WCev+6X3tL0laavNH2l6StNX2n6StNXmr7S
9JWmrzR9Fc3z3f3SW5re0vSVpqc0/aTpJ00/aXopmufD+6WfonleXPN8eL/0
laavND2l6SlNT2l6StNPmn6K5nlzzfPm/dJXevgc49D0lKafNP2k6SdNP0Xz
vHq/9FQ0z6f3S19p+krTV5q+0vSVpq80faXpK01fafpK01eavtL0laavND2l
6SlNT2n6SdNLml6K5vn+fuknTT9ptj9NL2l6SdNL3Wp6SdNH0Xx/oF96SdNL
ml7S9JGmhzQ9pOkhTQ9pekjTQ5oe0vSQpoc0PRTN9yP6pY80faTpo2i+P9Ev
fRTN9yk035/QfD+iX/pJ00+aform+xSa7z/0S09pekrTU5p+0vSSppc0vRTN
9yuG/aTpp141/aTpJ00/afpJ00+aform+xfDntL0lKanND2l6SlNT2l6StNT
mp7S9JSmpzQ9pekpTU9p+knTT5p+0vSTpp80/aTpJU0vaS6faL7PMuwnTT9p
eqlfTS9peknTS9F8n2XYT9F8f2XYU5qeiub7HcO+0vSVpq80faXpK01PaXpK
01OantL0lKanovm+x7CvNH2l6SlNL2l6SdNLml7S9JKmlzS9pOmlaPJj2EfR
fJ9E00m/Lv2k//Tfp/7l/z/8Of7c3/8PJy7rLA==
         "], {{{}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroupBox[{
              
              PolygonBox[{{2004, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 
               2003, 2005}}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwl2UOwIAqWBNBXtm3btm3btm3btm3btm39X7bZNaenFyduxN3nJjNR4w6V
2wcOCAgIxKkQAQGXucZVTof43+8kJzjOMY5yhMMc4iAH2M8+9rKH3exiJzvY
zja2soXNbGIjG1jPOtayhtWsYiUrWM4ylrKExSxiIQuYzzzmMofZzGImM5jO
NKYyhclMYiITGM84xjKG0YxiJCMYzjCGMoTBDGIgA+hPP/rSh970oic96E43
utKFznSiIx1oTzva0obWtKIlLWhOM5rShMY0oiENqE896lKH2tSiJjWoTjWq
UoXKVKIiFShPOcpShtKUoiQlKE4xilKEwhSiIAXITz7ykofc5CInOchONrKS
hcxkIiMZSE860pKG1KQiJSlITjKSkoTEJCIhCYhPPOISh9jEIiYxiE40ohKF
yEQiIhEITzjCEobQhCIkIQhOMIIShMAEIoC/wQMC/sMffvOLn/zgO9/4yhc+
84mPfOA973jLG17zipe84DnPeMq//MMTHvOIhzzgPve4yx1uc4ub3OA617jK
FS5ziYtc4DznOMsZTnOKk5zgOMc4yhEOc4iDHGA/+9jLHnazi53sYDvb2MoW
NrOJjWxgPetYyxpWs4qVrGA5y1jKEhaziIUsYD7zmMscZjOLmcxgOtOYyhQm
M4mJTGA84xjLGEYzipGMYDjDGMoQBjOIgQygP/3oSx9604ue9KA73ehKFzrT
iY50oD3taEsbWtOKlrSgOc1oShMa04iGNKA+9ahLHWpTi5rUoDrVqEoVKlOJ
ilSgPOUoSxlKU4qSlKA4xShKEQpTiIIUID/5yEsecpOLnOQgO9nIShYyk4mM
ZCA96UhLGlKTipSkIDnJSEoSEpOIhCQgPvGISxxiE4uYxCA60YhKFCITiYhE
IDzhCEsYQhOKkIQgOMEIShACE4gA/gaTf/7wm1/85Aff+cZXvvCZT3zkA+95
x1ve8JpXvOQFz3nGU/7lH57wmEc85AH3ucdd7nCbW9zkBte5xlWucJlLXOQC
5znHWc5wmlOc5ATHOcZRjnCYQxzkAPvZx172sJtd7GQH29nGVrawmU1sZAPr
Wcda1rCaVaxkBctZxlKWsJhFLGQB85nHXOYwm1nMZAbTmcZUpjCZSUxkAuMZ
x1jGMJpRjGQEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdKQD7WlH
W9rQmla0pAXNaUZTmtCYRjSkAfWpR13qUJta1KQG1alGVapQmUpUpALlKUdZ
ylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQkA+lJR1rS
kJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC4QlHWMIQ
mlCEJATBCUZQghCYQATwN6j884ff/OInP/jON77yhc984iMfeM873vKG17zi
JS94zjOe8i//8ITHPOIhD7jPPe5yh9vc4iY3uM41rnKFy1ziIhc4zznOcobT
nOIkJzjOMY5yhMMc4iAH2M8+9rKH3exiJzvYzja2soXNbGIjG1jPOtayhtWs
YiUrWM4ylrKExSxiIQuYzzzmMofZzGImM5jONKYyhclMYiITGM84xjKG0Yxi
JCMYzjCGMoTBDGIgA+hPP/rSh970oic96E43utKFznSiIx1oTzva0obWtKIl
LWhOM5rShMY0oiENqE896lKH2tSiJjWoTjWqUoXKVKIiFShPOcpShtKUoiQl
KE4xilKEwhSiIAXITz7ykofc5CInOchONrKShcxkIiMZSE860pKG1KQiJSlI
TjKSkoTEJCIhCYhPPOISh9jEIiYxiE40ohKFyEQiIhEITzjCEobQhCIkIQhO
MIIShMAEIoC/QeSfP/zmFz/5wXe+8ZUvfOYTH/nAe97xlje85hUvecFznvGU
f/mHJzzmEQ95wH3ucZc73OYWN7nBda5xlStc5hIXucB5znGWM5zmFCc5wXGO
cZQjHOYQBznAfvaxlz3sZhc72cF2trGVLWxmExvZwHrWsZY1rGYVK1nBcpax
lCUsZhELWcB85jGXOcxmFjOZwXSmMZUpTGYSE5nAeMYxljGMZhQjGcFwhjGU
IQxmEAMZQH/60Zc+9KYXPelBd7rRlS50phMd6UB72tGWNrSmFS1pQXOa0ZQm
NKYRDWlAfepRlzrUphY1qUF1qlGVKlSmEhWpQHnKUZYylKYUJSlBcYpRlCIU
phAFKUB+8pGXPOQmFznJQXaykZUsZCYTGclAetKRljSkJhUpSUFykpGUJCQm
EQlJQHziEZc4xCYWMYlBdKIRlShEJhIRiUB4whGWMIQmFCEJQXCCEZQgBCYQ
AfwNLP/84Te/+MkPvvONr3zhM5/4yAfe8463vOE1r3jJC57zjKf8yz884TGP
eMgD7nOPu9zhNre4yQ2uc42rXOEyl7jIBc5zjrOc4TSnOMkJjnOMoxzhMIc4
yAH2s4+97GE3u9jJDrazja1sYTOb2MgG1rOOtaxhNatYyQqWs4ylLGExi1jI
AuYzj7nMYTazmMkMpjONqUxhMpOYyATGM46xjGE0oxjJCIYzjKEMYTCDGMgA
+tOPvvShN73oSQ+6042udKEznehIB/5bxLajLW1oTSta0oLmNKMpTWhMIxrS
gPrUoy51qE0talKD6lSjKlWoTCUqUoHylKMsZShNKUpSguIUoyhFKEwhClKA
/OQjL3nITS5ykoPsZCMrWchMJjKSgfSkIy1pSE0qUpKC5CQjKUlITCISkoD4
xCMucYhNLGISg+hEIypRiEwkIhKB8IQjLGEITShCEoLgBCMoQQhMIAL4G0j+
+cNvfvGTH3znG1/5wmc+8ZEPvOcdb3nDa17xkhc85xlP+Zd/eMJjHvGQB9zn
Hne5w21ucZMbXOcaV7nCZS5xkQuc5xxnOcNpTnGSExznGEc5wmEOcZAD7Gcf
e9nDbnaxkx1sZxtb2cJmNrGRDaxnHWtZw2pWsZIVLGcZS1nCYhaxkAXMZx5z
mcNsZjGTGUxnGlOZwmQmMZEJjGccYxnDaEYxkhEMZxhDGcJgBjGQAfSnH33p
Q2960ZMedKcbXelCZzrRkQ60px1taUNrWtGSFjSnGU1pQmMa0ZAG1KcedalD
bWpRkxpUpxpVqUJlKlGRCpSnHGUpQ2lKUZISFKcYRSlCYQpRkALkJx95yUNu
cpGTHGQnG1nJQmYykZEMpCcdaUlDalKRkhQkJxlJSUJiEpGQBMQnHnGJQ2xi
EZMYRCcaUYlCZCIRkQiEJxxhCUNoQhGSEAQnGEEJQmACBfrfePbX+Q9/+M0v
fvKD73zjK1/4zCc+8oH3vOMtb3jNK17yguc84yn/8g9PeMwjHvKA+9zjLne4
zS1ucoPrXOMqV7jMJS5ygfOc4yxnOP3fTZCTnOA4xzjKEQ5ziIMcYD/72Mse
drOLnexgO9vYyhY2s4mNbGA961jLGlazipWsYDnLWMoSFrOIhSxgPvOYyxxm
M4uZzGA605jKFCYziYlMYDzjGMsYRjOKkYxgOMMYyhAGM4iBDKA//ehLH3rT
i570oDvd6EoXOtOJjnSgPe1oSxta04qWtKA5zWhKExrTiIY0oD71qEsdalOL
mtSgOtWoShUqU4mKVKA85ShLGUpTipKUoDjFKEoRClOIghQgP/nISx5yk4uc
5CA72chKFjKTiYxkID3pSEsaUpOKlKQgOclIShISk4iEJCA+8YhLHGITi5jE
IDrRiEoUIhOJiEQgPOEISxhCE4qQAf8/8f235v9v1Rfwf2ym7F0=
               "]]}]}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV2UMQIEYQAMCcbdu2bdu2bdu2bdu2bdu2mVz6Hl3z2PdwEzRsV7FtgH/+
+edisH/++RsDEojABCEonv4JTghCEorQhCEs4QhPBCISichEISrRiE4MYhKL
2MQhLvGITwISkojEJCEpyUhOClKSitSkIS3pSE8GMpKJzGQhK9nITg5ykovc
5CEv+chPAQpSiMIUoSjFKE4JSlKK0pShLOUoTwUqUonKVKEq1ahODWpSi9rU
oS71qE8DGtKIxjShKc1oTgta0orWtKEt7WhPBzrSic50oSvd6E4PetKL3vSh
L/3ozwAGMojBDGEowxjOCEYyitGMYSzjGM8EJjKJyUxhKtOYzgxmMovZzGEu
85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr29jODnayi93sYS/7
2M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrXuM4NbnKL29zhLve4
zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4zg9+8ovf/Mt//OFv
8gcgIIEITBCCEozghCAkoQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4
JCAhiUhMEpKSjOSkICWpSE0a0pKO9GQgI5nITBayko3s5CAnuchNHvKSj/wU
oCCFKEwRilKM4pSgJKUoTRnKUo7yVKAilahMFapSjerUoCa1qE0d6lKP+jSg
IY1oTBOa0ozmtKAlrWhNG/4W73a0pwMd6URnutCVbnSnBz3pRW/60Jd+9GcA
AxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYwl3nMZwEL
WcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCXfeznAAc5
xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5xW3ucJd73OcBD3nE
Y57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7lP/7wt/EHICCB
CEwQghKM4IQgJKEITRjCEo7wRCAikYhMFKISjejEICaxiE0c4hKP+CQgIYlI
TBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nITR7yko/8FKAghShM
EYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahNHepSj/o0oCGNaEwT
mtKM5rSgJa1oTRva0o72dKAjnehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCG
MozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpay
jOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwRjnKM
45zgJKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe8ozn
vOAlr3jNG97yjvd84COf+MwXvvKN7/zgJ7/4zb/8xx/+Dv0BCEggAhOEoAQj
OCEISShCE4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4SkJCM5
KUhJKlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIUozgl
KEkpSlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSjOS1o
SSta04a2tKM9HehIJzrTha50ozs96EkvetOHvvSjPwMYyCAGM4ShDGM4IxjJ
KEYzhrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkq
VrOGtaxjPRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlO
c4aznOM8F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17z
hre84z0f+MgnPvOFr3zjOz/4yS9+8y//8Ye/C38AAhKIwAQhKMEITghCEorQ
hCEs4QhPBCISichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSk
IS3pSE8GMpKJzGQhK9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK0pSh
LOUoTwUqUonKVKEq1ahODWpSi9rUoS71qE8DGtKIxjShKc1oTgta0orWtKEt
7WhPBzrSic50oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj
GM8EJjKJyUxhKtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetY
zwY2sonNbGEr29jODnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjP
BS5yictc4SrXuM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8H
PvKJz3zhK9/4zg9+8ovf/Mt//OHvsS8AAQlEYIIQlGAEJwQhCUVowhCWcIQn
AhGJRGSiEJVoRCcGMYlFbOIQl3jEJwEJSURikpCUZCQnBSlJRWrSkJZ0pCcD
GclEZrKQlWxkJwc5yUVu8pCXfOSnAAUpRGGKUJRiFKcEJSlFacpQlnKUpwIV
qURlqlCValSnBjWpRW3qUJd61KcBDWlEY5rQlGY0pwUtaUVr2tCWdrSnAx3p
RGe60JVudKcHPelFb/rQl370ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nE
ZKYwlWlMZwYzmcVs5jCXecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRm
trCVbWxnBzvZxW72sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWu
cJVrXOcGN7nFbe5wl3vc5wEPecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77w
lW985wc/+cVv/uU//vD30B+AgAQiMEEISjCCE4KQhCI0YQhLOMITgYhEIjJR
iEo0ohODmMQiNnGISzzik4CEJCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nI
Sjayk4Oc5CI3echLPvJTgIIUojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahK
NapTg5rUojZ1qEs96tOAhjSiMU1oSjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3
utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSm
M4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNraz
g53sYjd72Ms+9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnOD
m9ziNne4yz3u84CHPOIxT3jKM57zgpe84jVveMs73vOBj3ziM1/4yje+84Of
/OI3//Iff/j7yReAgAQiMEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohOD
mMQiNnGISzzik4CEJCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc
5CI3echLPvJTgIIUojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rU
ojZ1qEs96tOAhjSiMU1oSjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSi
N33oSz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2
c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd7
2Ms+9nOAgxziMEc4yjGOc4KTXOYUpznDWc5xngv8D+Tj8Iw=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             AbsoluteThickness[1.6], 
             GrayLevel[0.5]], 
            LineBox[{2002, 2005, 2003}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        AxesOrigin -> {0, 0}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> 1, Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
           FormBox["\"Recall\"", TraditionalForm], None}, {
           FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.5], 
          AbsoluteThickness[1], 
          AbsoluteDashing[{1, 2}]], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
         "PointLegend", DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"PointLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.7091799470384054`*^9, 3.709179958198044*^9}, 
   3.709180579777596*^9, 3.70922354804817*^9, 3.709223633657067*^9, 
   3.709224621789585*^9, 3.709224749909913*^9, 
   3.7092581889665174`*^9},ExpressionUUID->"5d160a04-1841-404d-8420-\
8e88aea45f0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rocAreaRF", "=", 
  RowBox[{"cmRF", "[", "\"\<AreaUnderROCCurve\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709180064191106*^9, 3.709180095467895*^9}, {
  3.709180566129815*^9, 
  3.709180570296054*^9}},ExpressionUUID->"b16aeda4-a1a8-416c-b6b7-\
cac17678f262"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"negative\"\>", "\[Rule]", "0.8431518468727993`"}], ",", 
   RowBox[{"\<\"positive\"\>", "\[Rule]", "0.852211166058511`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.709180101361232*^9, 3.7091805798095975`*^9, 
  3.7092235481901784`*^9, 3.709223633694069*^9, 3.7092246218515882`*^9, 
  3.7092247499589157`*^9, 
  3.7092581890135202`*^9},ExpressionUUID->"e4597f0f-f838-4564-9140-\
b8d986a9fda8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Support Vector Machines (1.4)", "Subsection",
 CellChangeTimes->{{3.7091797407546062`*^9, 3.709179746743949*^9}, {
  3.709180608957265*^9, 3.7091806153806324`*^9}, {3.7092219048031816`*^9, 
  3.709221906658288*^9}},ExpressionUUID->"47f5c06a-9113-4a63-b82e-\
a4f176433f2f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cmSVM", "=", 
   RowBox[{"ClassifierMeasurements", "[", 
    RowBox[{"svm", ",", "testset"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709170739517765*^9, 
  3.709170749619343*^9}},ExpressionUUID->"bed49d82-d82a-41f0-a11e-\
c57492e7deb2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"accSVM", "=", 
  RowBox[{"cmSVM", "[", "\"\<Accuracy\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709179807471422*^9, 3.709179838867218*^9}, {
  3.7091806205939302`*^9, 
  3.709180629012412*^9}},ExpressionUUID->"8c31406c-d363-47ed-9c92-\
eae3e2d8642c"],

Cell[BoxData["0.8035`"], "Output",
 CellChangeTimes->{3.709179841800386*^9, 3.7091806940261307`*^9, 
  3.7092235495632567`*^9, 3.7092236350281453`*^9, 3.7092246231716638`*^9, 
  3.7092247513389945`*^9, 
  3.709258190309594*^9},ExpressionUUID->"92036d3a-2c1e-4188-8cc6-\
632dc0a19165"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"precSVM", "=", 
  RowBox[{"cmSVM", "[", "\"\<Precision\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709179857903307*^9, 3.709179878183467*^9}, {
  3.7091806529077787`*^9, 
  3.709180658713111*^9}},ExpressionUUID->"d23f55ac-5afb-40e1-b21b-\
e56be325f7c2"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"negative\"\>", "\[Rule]", "0.7980861244019138`"}], ",", 
   RowBox[{"\<\"positive\"\>", "\[Rule]", "0.8094240837696335`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.709179879252528*^9, 3.709180694062133*^9, 
  3.7092235495762577`*^9, 3.7092236350411463`*^9, 3.7092246231826644`*^9, 
  3.709224751352995*^9, 
  3.709258190321595*^9},ExpressionUUID->"e34a4c5a-fc46-43e0-a211-\
dc1f14dccd0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"recSVM", "=", 
  RowBox[{"cmSVM", "[", "\"\<Recall\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709179891439225*^9, 3.7091799112503586`*^9}, {
  3.709180660696224*^9, 
  3.709180665729512*^9}},ExpressionUUID->"b22f3431-86ba-44c2-9b0d-\
cb7c8b8ab420"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"negative\"\>", "\[Rule]", "0.8208661417322834`"}], ",", 
   RowBox[{"\<\"positive\"\>", "\[Rule]", "0.7855691056910569`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.709179913870508*^9, 3.709180694071133*^9, 
  3.7092235495882587`*^9, 3.709223635052147*^9, 3.7092246231956654`*^9, 
  3.709224751365996*^9, 
  3.7092581903315954`*^9},ExpressionUUID->"39b1a69b-9e64-4e79-bdd7-\
66f42e87804e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"confMtxSVM", "=", 
  RowBox[{"cmSVM", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7091803277791824`*^9, 3.709180345289184*^9}, {
  3.7091806681806526`*^9, 
  3.7091806726799097`*^9}},ExpressionUUID->"1fb5f392-8993-4469-a022-\
40898cf7209a"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{0.906387603740271, 0.7606271349214462, 0.40380299921889934`}, {
   0.9322582083253099, 0.4872929490471954, 0.0033726742708385087`}}, {{1., 
   0.42, 0.}, {0.9263784338672031, 0.8402474174670368, 
   0.5918545627903663}}}, {{0, 0}, {2, 2}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["834", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "834", "\" examples of \"", "\"negative\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.7980861244019138`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.8208661417322834`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.8093158660844251`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{834, " examples of ", "negative", " correctly classified"}], 
         Row[{"Precision = ", 0.7980861244019138}], 
         Row[{"Recall = ", 0.8208661417322834}], 
         Row[{"FScore = ", 0.8093158660844251}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["211", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "211", "\" examples of \"", "\"positive\"", 
             "\" misclassified as \"", "\"negative\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.20191387559808613`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.21443089430894308`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          211, " examples of ", "positive", " misclassified as ", 
           "negative"}], 
         Row[{"Column fraction = ", 0.20191387559808613`}], 
         Row[{"Row fraction = ", 0.21443089430894308`}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["182", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "182", "\" examples of \"", "\"negative\"", 
             "\" misclassified as \"", "\"positive\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.1905759162303665`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.17913385826771652`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          182, " examples of ", "negative", " misclassified as ", 
           "positive"}], 
         Row[{"Column fraction = ", 0.1905759162303665}], 
         Row[{"Row fraction = ", 0.17913385826771652`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["773", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "773", "\" examples of \"", "\"positive\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.8094240837696335`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.7855691056910569`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.7973182052604435`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{773, " examples of ", "positive", " correctly classified"}], 
         Row[{"Precision = ", 0.8094240837696335}], 
         Row[{"Recall = ", 0.7855691056910569}], 
         Row[{"FScore = ", 0.7973182052604435}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1016", "\" example\"", "\"s\"", "\" of class \"", "\"negative\""},
            "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.8208661417322834`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1016, " example", "s", " of class ", "negative"}], 
        Row[{"Recall = ", 0.8208661417322834}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          TemplateBox[{
           "984", "\" example\"", "\"s\"", "\" of class \"", "\"positive\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.7855691056910569`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{984, " example", "s", " of class ", "positive"}], 
        Row[{"Recall = ", 0.7855691056910569}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1045", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"negative\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.7980861244019138`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1045, " example", "s", " classified as ", "negative"}], 
        Row[{"Precision = ", 0.7980861244019138}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "955", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"positive\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.8094240837696335`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{955, " example", "s", " classified as ", "positive"}], 
        Row[{"Precision = ", 0.8094240837696335}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{1.5, 
       FormBox[
        RotationBox["\"negative\"", BoxRotation -> 0.], TraditionalForm]}, {
      0.5, 
       FormBox[
        RotationBox["\"positive\"", BoxRotation -> 0.], TraditionalForm]}}, {{
      1.5, 
       FormBox["1016", TraditionalForm]}, {0.5, 
       FormBox["984", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["1045", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["955", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"negative\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"positive\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.709180348514368*^9, 3.709180694122136*^9, 
  3.7092235496572623`*^9, 3.7092236351021495`*^9, 3.7092246232506685`*^9, 
  3.7092247514410005`*^9, 
  3.7092581903915987`*^9},ExpressionUUID->"b1379d34-d09b-4af9-a2e2-\
e436ed21662f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rocSVM", "=", 
  RowBox[{"cmSVM", "[", "\"\<ROCCurve\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709179924320106*^9, 3.7091799561059237`*^9}, {
  3.709180675942096*^9, 
  3.709180680976384*^9}},ExpressionUUID->"98be40cb-e6fd-4800-8655-\
e92363f97fbf"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"negative\"\>", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{}, 
        GraphicsComplexBox[CompressedData["
1:eJx123mQ5GV5wHGKoghlUYQQQgiKiFeIIQQtiqIoip8iKh7IpSIRARHIhhDc
kBVXBBUR0RDkPgKI3Mt9iojrSrhZlmPZA1j2mp3dObunR4KIiFrp3/t9+v1W
5kn4x/qozPb0dL/v93mmd8ejv3LwsRtvtNFGS/9ko43a//z//tlsk41P/+A7
Dmz+t4+q3nzTMx46atdZM/732dVvOXOfaw7cac6M///c6i3OemTd7D1OnfHv
f7v6B/u+8/z93v2dGV/vu9VnP3b03Z/f+Xszvv73q8/56HXPz9rt32f8ef9R
fe4T61+Zu9cPZ/z551V//N1btQ9hxuO5oPqpYz7wn59674XNvC1nveX0Gw9s
ZprHe1H1J284+ObPvO/iah7/JdVPj5z0wOG7XFrN93NZ9f7vvXBh/4+o5vu7
vPrZ4+5dccLuV1Tz/V5ZfcC8pRNz9vxRNd//VdWLx15949S9f1zN83F19U5b
t9+R5vm5pvqfdtuu/5A0z9e11e03/4kbrp3xfF1XPdl/cJ+ed92M5+/66vbf
Pvjm62c8nzdU//N9/3D75269Ycbze2P1rcuP7/8/bpzxfM+r7r52yoIj7pw3
4/m/KXxU8s7btH+C5udzc/W/7H7FM8fdq/l53VLdf7D9R6T5+d1a3Tt5/uoT
79f8PG+r3uXSRf3vQPPzvb36K/evnDp5vubnfUf1nS92+t+x5ud/Z/WvXn/z
D998UPN6uKt62/KEaF4feo+3tY9Y83q5u/ownsBqXj/663u9vf+QNa+ne6rb
N9vCYzSvL92+mRaNaF5v91a/fEL5AVXz+tO/678ZnhvTvB5/Ur1d+YFqXp+6
/WpLJzSv1/uqv8ALoJrXr/5G/9X4Ykfzev5pdfvgV5ygeX3r9tWzckrzer+/
etVUeYFV8/rXv+//9NdOa17/P6suP97Zmh+nLj++VzTvjweqv8gLeMb7RZ/W
Pv2vat4/P68uT+8czdOpy9P3mub9Nb/53bZXnvvQG7OS15xY3jDVvP/0H9un
43XN+/EX1eXbnav59nT5dt7QvF8XVB/JG7Ka9++CePyzk7/VPpw3Ne/vX1aX
P+5UzZfX5V//g+b9/2D10HQ5AJrFW2+8/46L5yRzPmhuxf+q5rzQW5b/QnN+
6HeU/4PmPNG7ln9Bc77oD5Uv8FA1540+qHxBzfmjv8QfEM//3GTOJ/2v5QFo
zivd/+b7D+jhas4v3Uf/AWrOM90/bPoPWHO+6f5h0P8GNOedfvio9ht4pJrz
Ty+Z1X5DmvNQD88u32A156P+77ntN6w5L/XG5Ql4tJrzU5e62k9znup3lidI
c77qUlsLNeet/nB5Ah+r5vzVh5QnVHMe6y/zBFdzPut/K0+45rzW7Wm57eaP
V3N+61Jzn9Kc57o97bY7R3O+61J7z2jOe/3ouvYH+EQ1579e1tbgpzX3gd7w
SvkBV3M/6F+3tfic5r7Q5e2/5ZPV3B+6vL0P1NwnmvzW3C+6vB2f19w3+iPl
BbSwmvtHf7a8oDT3kT6WF1g195P+annBae4rXV7uWz9Vzf2ly8v5M5r7TDMu
aO43XV6OyzX3nX68fblts6ia+06/0L6cPqe5//RoGUc096H+TftyeFFzP+ry
49726eZd2+++5EvvOi2Z+1OXH+/nNfepZvzR3K+6/HhWPB3317er5291398e
NP87ydzH+mPlDfdMNfezPrS8ATX39TNxf3w3+R95g1Zzf+uvlTes5j7X5el5
27PV3O+6fPuHa+57zbinuf91eTirNT2gn2z/uLc/V00f6JfaL3eEpg/0eBkn
Nb2gf9tyraYfFldzfmh6QnOeLG5GtjngxFc2fC+Z3tCcN5r+0Jw/mh7RnEea
PtGcT5p80JxXmn7RnF+L4/3z/WT65vlqzjdN72jOO03/aM4/TQ9pzkNND2nO
R00fac5LTS9pzk9NP2nOU01PLanmfF3S/OlbJ+46f4uzk+ktzfmr6S/Nebwk
zpNzkumzJc0eO5zx6vv3ODeZ81vTb5rzfEmcT+dV333+Fu0jSKb3NOe/Jk+W
xHl0QTL3g6YPNfeFpheXVnN/LG0ev/ALez3w2IXJ9KTmftH05dJ4v15UvfLi
m774g5cvTuY+Whrvh0uS6VPNfaXpVc39pelXzX2m6VnN/abpW819p+ndZdXc
d5r+1dx/mh7W3IfLmulLX/vmYdOXJtPLmvtS08+a+1PT05r7VJM/mvtT09ua
+1TT38uruV81Pa65bzV9rrl/Nb2uuX81/a65j5fH+XFZMn2vua81vb+82eTy
fa7+m00uT+Y+Xx7nyRXJzAea+35581ftl9/2ymTmhxeq6QHNPKHpA818oekF
zbyh6QfN/KHpCc08oukLTf5oekMzr2j6QzO/vFhNj2jmGU2faOYbTa9o5h1N
v2jmH03PaOYhTd9o5iNN72jmJU3/vFRN/2j6R9M7mt7R9I6mdzS9o+kdTe9o
ekfTO5re0eSApnc0faPpmxVx3/4omd7R9I6mdzS9o+kdTe9oekfTOyuaXa5a
Nbzw765Kpn9WxP3+42R6SNNDmh7S9JCmhzQ9tKLZsVyoVyfTRy9X00OaHtL0
kKaHNP2j6R1N72h6R9Mzmp7R9IymXzTHsaZfNP2i6ZeV1fSKplc0vaLpEU1/
aPpD0x+a/tD0h6Y/NP2h6Q9Nf2j6Q9MfK6Mns+mRVc3OB7VFd00yfaLpE02f
aPpE0yOaHtH0iKZHVkW/6vbdtv3u11bTn/pDh2y225kfvC6ZntH0jKZnND2j
eTuuil7Vn1x2x75Tn7i+mn7Npn80/aPpn9XNZ8s/NyTTQ5oeWh09nE0fafpI
00eaPtL0kaaPVjdHvfDmsQuOvDGZPtL0kaaPND2k6Z/V0bPZ9JCmfzT9s6aa
/tH0j6Z/1jTHH3rtye85fl4yPaTpIU0PaXpoTfRjNn2k6SNNH2n6SNNHa5qv
vrTfWefMuSmZp3dN9Gc2/aTpJ00/ra2mnzT9pOmntc23Dmsf4c3J9JSmpzQ9
pekpTU9pekrTU2ujp2+p7s+G/RdsNr2l6S1Nb2l6a230963J9NdQNeelpsc0
5+dQc1EZd7PptaHom9uSOW81Pac5fzV9N9SQH5peub365naavimb81vTh5rz
fCj65o7qe9f8fecP92TTk5rzX9OXQ9EvdyZzPww1C45sDwzN/XZX9TGz9950
7MvZ9KrmftD0q+a+0PSs5v7Q9K3mPtH0ruZ+GYr7V7evlv5LJpk+1twvml7W
3Deafh6K+/Xu6v5h2D8Rs7mfhuL+zaa31zW/fn/7E9Lcz/ckc59p+lxzv61r
vn7S2X99/9xs+l1z32l6fl30gP7jPeUFlsz9qOl/zX2pmQc096dmPtDcp5p5
QXO/auYFzf2qmRfWRY/cm8z9q5kn1jXtu2eHM7K5nzXzxrrom2zub808ornP
NfOJ5j7XzCua+10zr2jue838MlzN/T/ctN/9IZv9JJn5RtMHmnlH0wua+UfT
C8PRf9nMR5qeGG5+OKe9sDX9p/+8ffludV8y85WmRzTzlqZPhqMXs5nHNL2i
mc80/TLcXFbWY9nMb5q+GY5+zGa+0/SPZt4bbsp1tf1Pk+mj4ejHbOZDTS9p
5kVNL2nmR00/aeZJTU9p5sv11fSVZt7U9JZm/tT0l2Ye1fSXZj7V9JhmXtX0
mWZ+Xd+0dXvotdn0m2a+1fScZt7V9J1m/tX03vro9Wzm4/XNTvfPbW+AZPpv
ffR5NvP0+ub21xed8uBtmt7Oph8187emJzXz+PrmAyVgfpZMb2rmdU1vauZ1
TX9uiP7Ppkc1Pbqh4enJpkc1/anpT01/avpT05OantT0pKYXNb24IeaNbPpR
04ua/tvQtHXdvyGqmR+y6UNNH25oHn6j/YLZ9KKmFzW9qOlFTS9qelHTixti
vvl59cf2POH6Rz6aTS9qelHTi5rrW9OLmh7U9N+GmI+y6b2RanpP03uavtP0
nabvRpqn++/O1xdl03MjMV/Nrz6IAEym9zS9p+m9kZjHsuk/Tf9p+m+kKcfn
C9n04EjMZ79Ipg81fajpQ00fanpQ04Oa/htpDi9vCM18qNeduvmzTwxp5sUF
1ccxgCXTk5p+1PSjph81/TgS82U2PanpSU1PanpS05OantT05Gg1/ajpx9Gm
3+L9INfMv79Mpi81fTnalPFvdja9ORrzcDb9qelNTW9q+lHTj5p+1PTjaPOb
Nt9ey6YfR2MefzCZnhxtvtG+PU/Jpi81fanpSU1PavpR04+aftT0oqYPNX2o
6cPR2C9k04uaXtS8XEfr55oHZj+hP9z+9ncfzT4gm97U9OZo004fu52ZTX+O
xj5BPznUvqGz6dOxavpU06eaPtX0qaZPx2LfkE2vanp1rOk/2P4jfiiZftX0
61jsL/T+5QnOpm81fTsW+w193kPlwk2mdzW9Oxb7D13WF0uy6WFND2t6eCz2
J9n0saaPNT081vxFOz5u/XAyPTwW+5VseljTu5reHWtKLh+aTf+Oxf5F8/EG
zfWaTS9r+ljTx2PN6vZ6WpVNL2t6WdPLmvfleOxTsunl8aYcZzs8Us0+RR9d
LkTN/iSbvh5v+vHUFlQyva3pbU1vj8d+I5v+Hm/6l0f/gNDsJx6tfl8JyGx6
fTz2E/qE8gA0+4ps+l7T95q+1/T9eHNn/09bdodm/6HL2/OVbPpf0/+a/tf0
vabvx2M/8lgyfa/pe03fa/p+vClP926afUk2/a/p//Hma+24e3I284Cm9zW9
Px77lmz6f7xh/MlmHtDMA5p5QDMPaPp/PPY12cwDE9XMAxPN79scflOzz3k8
mXlhoil5tHc284NmfpiI/UU284NmPphoyvVyumb/oB8tb8ds5gnNPKGZHzTz
g2Z+mIh9Rjbzw0RTvr1Nn6hmv6E/3p/uX9pPs9/IZt6YaNrT+qSzNfuPbOYR
zTyimUc084hmHplo+sNEGwjV7Ef0n7W5suWT1ew3dDl+D9HsM7KZdzTziWY+
mWguKR8f1ewbsplfNPPLRFO+3EvZzDMTsX/IZp6ZaMq4+taF1ewn9BFlANbs
I3TJx6uzmY8mYn+g17fX33A289NE7BeeSmaemmjKcfMezT4gm3lLM29NNOXH
Oyub+Wsi5v1s5rHJauYxzbw12dx6S/tPNvOXZt6ajP2Bbm+jfaeymb8mY7+w
KJl5bLLZtQyEmn1CNvOaZl6bbEo+naTZJ2Qzz002rPc1+wX920XlG6xm/n86
mXlQMw9q5j/NvKeZ7yab8uPeU7Nf0Ke164RTNfuGbOZDzXw42TCeafYT2cyP
mvlxsik5vPEzycyTk7Hf0B8pLwDNfkKX4/YszX4gm/lUM59ONk+Vt1828+pk
7BeymV8186tmXp1sNufATWZ+nYx9hD6gDESafYS+oPz1gWzm38nYH2Qzz042
JS+XafYJ2cy7mvlWM79q5tdONfNrp/nL8g09V81+Qpfj9LBs5t1O7AOymX87
DR8/1cz/2czHnWZt+3Ss0YO/tzQw918287NmftbMy5p5uRP7Bs19qtk/ZDM/
d+K+zWae1szLmnm5E/uKbOZjzXysmY87cV9r9hua+1uz78hmntbM0524zzX7
C819ns38rZm3O7HP0Nz32czfndhnPF9ND2Qzn2vmc8083ol9iKYnNPsPTV9k
M593Yj+i6Q/NPkTTH5r9iKZHNPsPTY9o9huaHlmSzP6gE/sOTa9o9hmaPslm
/6DZN2j2DZ3Yf2h6RrMP0fRKNvuKTuxLstlfdKJfNPsRTc9kc850q9lPdGMf
oumdbPYV3diPaPpnaTL7jG7sT7LZb2j2Gd3oJ82+RdNLmv2Lpp80+xdNP2n2
K5qe0uxXstmfdKO3stmPdGMfo+kxzX5mWTU9pdnPZLNv6UZvafY32exjutFj
2exnurHv0fSaZn+j6TPNPkfTa5rrKJv9Tjd6LZt9j2bf0419jqbnllezn8lm
P9SN3stmX9SNfY6mB7PZH2n2R93Y72j6UbO/0fRkNvsnzf6pG/sdTV9q9jOa
vsxmP9WN/YymJ7PZX2n2VZp9lWZf1Y19j6ZHX0hmf9WN/Y+mVzX7nmz2W93o
Wc2+J5v9l2b/pRmXNfuvbvSxZn+UzT6sG72s2S9pejmb/dlU7Iuy2Zdp9mOa
/ZhmH6bZh2n2W1PR69nsuzT7Ls2+S7Pv0uy3pmK/lc2+aip6Ppv91FTsw16s
pvc1+zFN/2v2ZZr+1+zLNP2fzX5sKvZpmvlAsw/TzAea8SybfdtUzA+a/Zke
/D3AgZkHNPOAZh7Q9L+m57PZ901Fr2t6PZt94FT0u6bfNX2u6XNNn2u+vKa/
Nb2dzb5Qsy/U7Aunos9XJLMf1OwHNfvAqehzTZ9r+lzT59nsD6eiz7PZ/2n2
e1PR75p+1/R7Nvs/zX5vKvo+m32fZr83Ff2v6X9Njmv6X9P/2ewHp6L/X66m
/zX9r+n/bPaLveh7Td9r+l7T95qe1/S7pt81/Z7NfrMXva7pdU2fa/pc0+Mr
q+ltTW9rejubfWov+jub/WovelzT45oez2bf2os+z2bf2otez2a/2ot+1/S6
5vrOZh+r2bf2ot+z2Z/2ouc1Pb+qmp7X9Lum3zW9ns1+the9rul1Ta9rel3T
65pe1/S6ps81/a3pb01/r66mtzV9nc2+uRe9relpTU9rejqbfXUv+lrTz5p+
zma/3Yue1vS0pp+z2Wf3oqc1Pazp4Wz2373o4TXJ7Lt70ceaPtb0cDb78V70
saZvNX2r6VlNz2p6VtOvmr7U9KCm/zS9l83+vhf9t7aa/stmH9+LHtT0oKYH
NT2YzT5fs7/X7Ot70Y+aXtT0oqYXNb2o6UVNH2r6MJvfF/SiF/Xg7y0OzPml
6UfNeabpSc35pulLzXmn6U3NeafpzWx+3zE4DzU9qjkfNT2qOS81fao5PzW9
qjlPNf2qOV81Pas5b7P5fY3m9y2a36/0ooc157WmjzXnt6aXs/l9zOB81/Sx
5rxfV03/as5/TQ9rzn9NH2vuA00va+6HbPK1F/2cze+TBveJpp8194mmpzX3
i6avNfeNpqc1942mnzX3j6anNfeRpq8195GmtzX3k6a/NfeVpr8195Wmx4er
ua80fa65vzS9rrnPNL2uuc80/a653zQ9r7nvNH2vuf+y+f3joP8196NmHsjm
95XTcX9q5gXNfaqZHzT3q2Z+0Ny3mnkim99/Tsd9rJk3NPezZv7Q3M+aeURz
X6+vZj7R3NeaeUVzf2fz+9npmGc097tmntHc95p5RnOfa+Ybzf2umXc0971m
3tHc/5p5R9MDmnlH0wea+UfTC5p5SNMPmvlH0w+a+UfTE5p5SA/+HtrA9IWm
LzR9oemLbH6/Ph29oekNTW9oekPTG5q+0PSFpi80faHpC01faPoim9/3T0dv
aHojm88DTEd/aPpD0x+a/tD0hKYnND2h6QlNT2j6QdMPmn7I5vMM09ETI9X0
hKYnND2h6QlNT2TzeYnp6ItsPg+h+fzDdPSHpjc0faHpC01faPpC0xeavtD0
haYvsvl8hubzGdPRH5r+yObzGtPRI5oe0fSIpkey+bzHdPSJpk80faLpE02f
aPpE0yeaPtH0yWg1faLpk2w+nzIdvaLplWw+fzId/aLpF02/aPpF0y+aftH0
Szafd5mOntH0i6ZfNP2i6RVNr2h6RdMrml7R9IqmVzS9oukTTZ9o+kTTJ5o+
0fSJpk80fTJWTZ9o+kTTJ5oe0fSIpkc0PaLpkWw+fzToE02faPpE0yeaPtH0
iaZPNH2i6RNNn2j6RNMnmj7J5vNUg17R9IqmVzS9oukVzY9T0yuaXtGDvwc0
ML2i6RVNr2j6RNMnmj7R9Ek2nxcb9IqmVzS9oukVTa9oekXTK5pe0fSJpk80
PaLpEU2PaHpE0yOaHtH0iKZHND2i6RFNj2h6RNMfmv6YSObzeIMe0fSIpkc0
PaLpD01faPpC0xeavsjm84GD3tD0hqY3NL2h6Q1Nb2h6QtMTmn7Q9IOmHzT9
oOkFTS9oekHTC5pe0PSCphc0vaDpBU0vTFbTC9l8HnPQC5peyObzloNeyObz
jYN+0PSDph80/aDpB00/aHpB0wuaXtD0gqYXNL2g6YVsPm856AdNP2j6QdMP
mn7Q9IOmHzT9oOkHTT9o+kHTD5p+0PRDp5p+0PSDph80/aDpB00/aPpB0wua
XtD0gqYXNL2g6YVsPh876AdNP2j6QdMPmn7Q9IOmHzS9oOkFTS9oekHTC5pe
0PSCphc0vaAHn6sdmF7Q9IKmFzS9oOkFTS9o+kDTB5o+0PSBpg80faDpA00f
aPpA0weaPtD0gaYPNH2g6QNNH2j6QNMHmj7I5vPbg17Q9ILm+tb0gqYXNH0w
VU0faPpA0weaPtD0QTafFx/0gqYXNL2g6QNNH2j6QNMHmj7Q9IGmDzR9oOmD
bD7fPuiFbD6/PugHTT9o+kHTD5p+0PSDph80/aDpB81xrOkHTT9o+qFXTS9o
ekHTB5oe0PSApgc0PaDpAU0PaHpA0wOaHtD0gKYHND2g6QHN/a+5/zX3v+b+
19z/mvtfc/9r7n/N/a+5/zX3v+btpLn/Nfe/5v6frub+19z/mvtfc/9r7n/N
/a+5/zX3v+b+19z/mvtfc/9r7nvNfa+57zX3vea+19z3mvs+m3v1V3H/a+5/
zf2vuf8197/m/tfc/5r7X/N0ae5//X//58x//N//BxSsask=
         "], {{{}, {}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwl2TMUIAAOQMG1bdu2bdu2bdu2bdu2bdu29/bm3hXz0qX7TZKwUftK7QIF
CBAgIAeCBwhwictc5ALnOcdZznCaU5zkBMc5xlGOcJhDHAz+/3372cde9rCb
XexkB9vZxla2sJlNbGQD61nHWtawmlWsZAXLWcZSlrCYRSxkAfOZx1zmMJtZ
zGQG05nGVKYwmUlMZALjGcdYxjCaUYxkBMMZxlCGMJhBDGQA/elHX/rQm170
pAfd6UZXutCZTnSkA+1pR1va0JpWtKQFzWlGU5rQmEY0pAH1qUdd6lCbWtSk
BtWpRlWqUJlKVKQC5SlHWcpQmlKUpATFKUZRilCYQhSkAPnJR17ykJtc5CQH
2clGVrKQmUxkJAPpSUda0pCaVKQkBclJRlKSkJhEJCQB8YlHXOIQm1jEJAbR
iUZUohCZSEQkAuEJR1jCEJpQhCQEwQlGUIIQmEAEJAD/ggUI8B/+8off/OIn
P/jON77yhc984iMfeM873vKG17ziJS94zjOe8oTHPOIhD7jPPe5yh9vc4iY3
uM41rnKFy1ziIhc4zznOcobTnOIkJzjOMY5yhMMc4iAH2M8+9rKH3exiJzvY
zja2soXNbGIjG1jPOtayhtWsYiUrWM4ylrKExSxiIQuYzzzmMofZzGImM5jO
NKYyhclMYiITGM84xjKG0YxiJCMYzjCGMoTBDGIgA+hPP/rSh970oic96E43
utKFznSiIx1oTzva0obWtKIlLWhOM5rShMY0oiENqE896lKH2tSiJjWoTjWq
UoXKVKIiFShPOcpShtKUoiQlKE4xilKEwhSiIAXITz7ykofc5CInOchONrKS
hcxkIiMZSE860pKG1KQiJSlITjKSkoTEJCIhCYhPPOISh9jEIiYxiE40ohKF
yEQiIhEITzjCEobQhCIkIQhOMIIShMAEIiAB+BdU//zlD7/5xU9+8J1vfOUL
n/nERz7wnne85Q2vecVLXvCcZzzlCY95xEMecJ973OUOt7nFTW5wnWtc5QqX
ucRFLnCec5zlDKc5xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbWxlC5vZ
xEY2sJ51rGUNq1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nE
RCYwnnGMZQyjGcVIRjCcYQxlCIMZxEAG0J9+9KUPvelFT3rQnW50pQud6URH
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
YhGTGEQnGlGJwn8B22/wlg==
               "]]}]}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwl2UMUGNgOANCpbdu2bdu2bdu2bdu2bduYqe32356/uCeLt07ykiRo2K5i
2wD//PPPhWD//PM3BiQQgQlCUDz9E5wQhCQUoQlDWMIRnghEJBKRiUJUohGd
GMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c
5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrU
pBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rRng50pBOd6UJXutGdHvSk
F73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGeCUxkEpOZwlSmMZ0ZzGQW
s5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nCVraxnR3sZBe7
2cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc5BKXucJVrnGdG9zkFre5
w13ucZ8HPOQRj3nCU57xnH/5jxe85BWvecNb3vGeD3zkE5/5wle+8Z0f/OQX
v/nD3+QPQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4
xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzk
JR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSl
HvVpQEMa0ZgmNKUZzWlBS1rRmjb8Ld7taE8HOtKJznShK93oTg960ove9KEv
/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84SnPeM6//McLXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84W/j
D0BAAhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJ
QEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlA
QQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBD
GtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH/0ZwEAG
MZghDGUYwxnBSEYxmjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zGUe81nAQhax
mCUsZRnLWcFKVrGaNaxlHevZwEY2sZktbGUb29nBTnaxmz3sZR/7OcBBDnGY
IxzlGMc5wUlOcZoznOUc57nARS5xmStc5RrXucFNbnGbO9zlHvd5wEMe8Zgn
POUZz/mX/3jBS17xmje85R3v+cBHPvGZL3zlG9/5wU9+8Zs//P30ByAggQhM
EIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwS
kpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGK
UozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rS
jOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM
4YxgJKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozl
rGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc
4CSnOM0ZznKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM5/zL
f7zgJa94zRve8o73fOAjn/jMF77yje/84Ce/+M0f/g78AQhIIAIThKAEIzgh
CEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlI
SSpSk4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJ
KUpThrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkr
WtOGtrSjPR3oSCc604WudKM7PehJL3rTh770oz8DGMggBjOEoQxjOCMYyShG
M4axjGM8E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlaz
hrWsYz0b2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOG
s5zjPBe4yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOf/yHy94ySte
84a3vOM9H/jIJz7zha984zs/+MkvfvOHv8u+AAQkEIEJQlCCEZwQhCQUoQlD
WMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa
0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nK
UZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rR
ng50pBOd6UJXutGdHvSkF73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGe
CUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4N
bGQTm9nCVraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc
5BKXucJVrnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnH/5jxe85BWvecNb3vGe
D3zkE5/5wle+8Z0f/OQXv/nD30V/AAISiMAEISjBCE4IQhKK0IQhLOEITwQi
EonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKS
icxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJ
ylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onO
dKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclM
YSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxh
K9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOEq
17jODW5yi9vc4S73uM8DHvKIxzzhKc94zr/8xwte8orXvOEt73jPBz7yic98
4Svf+M4PfvKL3/zh75EvAAEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd6URnutCVbnSn
Bz3pRW/60Jd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcG
M5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc7
2cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOcD/b/G/r/AAKd77A=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             AbsoluteThickness[1.6], 
             GrayLevel[0.5]], 
            LineBox[{2002, 2003}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        AxesOrigin -> {0, 0}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> 1, Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
           FormBox["\"Recall\"", TraditionalForm], None}, {
           FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.5], 
          AbsoluteThickness[1], 
          AbsoluteDashing[{1, 2}]], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
         "PointLegend", DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"PointLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"positive\"\>", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{}, 
        GraphicsComplexBox[CompressedData["
1:eJx123mwnWV9wHGGYSjjMJRSSimKiFuppRQdhmEYhlcRFRdkU5GKgAg0pRRT
GjEiqIiIliL7UkBk38IeATEiZQ0h7NlIQra7b+dcKSIi4vS8z/d3n+/0/Nr8
w3w0ubn3nPd9nu/veU92PPprBx+78UYbbbTkTzbaqP3v//frpi1nve30Gw9s
/rePqv79tlee+/Abs/r+/9nVz2+98f47Pj+n7/fPrX7P9ru/+JX3nNb3579b
vWCre//2oAXf6/t6368e3uaAE18Z+kHf1/9h9Z++ffyu87c4u+/vO6d6jx3O
ePWDe5zb9/efV333+Vu0X6Hv+7mg+okLv7TXA49f2Pf9XVS9+uKbv/yjVRf3
fb+XVE9f+tq3D5u+tO/7v6x6k8v3ufpvNrm87+e5ovqv2t++7ZV9P99Pqne5
6uWBRX93Vd/P+9PqHcs3fHXfz693Pqj9ia/pez10+7dtv/u1fa+P/sghm+12
5oev63u99KeX3rFv51PX971++vPl1w19r6c+avmbxz545I19r68+/tBrT37f
8Tf1vd766y/td9Y5c27ue/31dw5r/8Qtfe/HrdW997b3Dd3a9/7Mq76oXB7z
+t6v26p5e25rNttk49M//K4Dm37zft5efUt7Nd2seX/vqJ6/9u8n37pH837f
Wf3gke0Lpnn/76o+Zvbem45+VXM96Pan6/2I1Vwfd1f3XvzeO6C5XvRvPth+
R5rr557qb5509l/fP1dzPek/3lN+wGqur/nho5Lbn36HM+Y3m296xsNH7Tor
metRt3/6kM1+Vs31qX88p71gNNer/vP2293q3mquX31Zud0117Mub/f291Vz
fev2aj702vvi55udzPWvd7p/bvuKVnM/6NtfX3zKQ7dp7g/9oXIB/bya+0Xz
5TX3j26v/t4rXM399EDztjP3uebAneYkP/JG+wU099svqj+x5wnXP/pxzf2n
n+79NK8v1tyPC6oP4oKq5v7U5eVerrlff1l9ePmBNPer3nDq5s8uXK+5fx+s
Po4bsJr7Wfeu7d4Frrm/f1Vdbs/Zmvtd/7a9vF7T3P8PVX+rfXlO0Xw7mlXp
v6pZH/RH291oH816odu7Z7czNeuHfnJ9+wJp1hPd+829P/FwNeuL3r98Q5r1
Rp/3cLmAqll/dFluXtSsR/ov2tt560eqWZ8eiftvbnK5nQ7VrF+a7Vtz+ek1
7eXzsmZ90+Xt2+HRatY3fXS5wDTrm+7dLO0dU816p3sXU+8N1Kx/j1V/oNyA
mvVQn1D+As36qO/s/e6ld2jWS13evlc06+fj1eXb2U2znupvtMvfyZr1VbP8
PN5scdajG2bvcWoy66/+Q3v7v6lZj5+oLrff3pr1WZfL93TN+qwfK2+HZr3W
5ctvurCa9Vt/srf6vrSfZj1fGOvrd5Pbq/Gksxc2P9r33efv997vJbP+697i
1d6gcf1/P5n9Qf9Ze3tv+WQ1+4Uul+shmv1DX1LyWLOf6PLbX9LsL7os729f
VM1+o48oG4Rmv9FlObtas//owfb2HNDsR09Vl8vvfZr9SZeXZ5Zmv9Lzbm1/
afavp5qzHz/67i/u/IPk9m7at6PZ3xZX71o2EM1+p8vydJJm/9Pki2Y/1L9b
XL6huL9+mMx++XR1eTn21Oyf+rR2uzxVs59qtivN/qrLcr3xM9Xst/pj5QXT
7L+63E5nafZj/VR5+zX7s96cG6Sa/VofUDYozf6tLyjjpWY/12W5XarZ3/Vf
lr/gueacj1/3wqzd/j2Z/V+Xy/8wTQ9oxklNH+h17be3VsfUVs16oOkHzfqg
6QnNeqHpC836oekNzXryfKyP/5FMj2jWG02faNYfTa9o1iNNv7xQzfqk6RnN
eqXpG836pemdF5pzFw6+MnevHyezvml6SLPeafpIs/5pekmzHmr6SbM+vlhN
T2nWS01PadZPTV9p1lNNb2nWV01/adZbTY9p1ltNn2nWX02vadbjJdX0m2Z9
1vTcktivz0tm/db0nmY91/SfZn3X9KBmvV/SfPK9W7UJkEwvavaDJdELFyTT
k5r9QdOXS6vZLzS9qdk/NP2p2U80ParZXzR9urR56pgP/edn3n9hMvuPpl81
+5FmeVsa+/dFyexXmt5d2nz6hoNv+dwHLq5mf70kmf1tWTV9rNnvNL2s2f80
/azZDzU9rdkfNX29rHl6+KQHDt/l0mr2o8uS2U+XNfu//8JFvZcsmR7X7Lea
Ptfsv5pe1+zHy2M/uDyZntfs15q+1+zfmt7X7Oea/tfs75p5QLPfa+YDzeW+
vHn2uPkrT9j9imTmB00fLI/94spk5osV1fSCZt7Q9INm/tD0hGb+0PSFZv7Q
9IZmHtH0x4rmgJuWjM/Z8yfJ5JemTzTziqZXXqqmVzS9oukVTa9oekXTK5pe
0fSKpk80faLpE02faL68pk80faLpk5XV9ImmTzR9oukTTZ9oekTTI5oe0fSI
pkdWxv54VTJ9oskHTZ9o+kTTJ6uq6RNNn2j6RNMnmj7R9Mmq5vnRV984de+f
JtMrml7R9IqmVzS9oukVTa9oemVV7PdXJ9Mvmn5ZXU2/rG522rrdwbLpGU2/
aPpF0y+aftH0i6ZfNP2i6RVNr2iWa02faPpE0ycvV9Mnmj7R9ImmTzR9oukT
TZ9oekTTI5oe0fSIpj80/aHpC01frKmmLzR9oekLTV9o+kLTF2uiH69JpjfW
NP+023a9LS+b/tD0haYnND2h6QlNT2h6QtMTmn5YW00/aPphbfTltcn0hKYn
ND2h6QlNT6xt2lj81A2a/ryueqK3eH72pmz6Q9Mfmv7Q9IemNzS9oekLTV+s
q6YvNH2h6QtNX2j6Yl308/XJ9IamNzS9oekNTW9o+kLTF5q+0PSFpi/WV7Oe
aHpjfdO+mwffks16o+kRzfqj6RPNeqTpFc36pOmX9TGP3FD9z/f+w+1fmKfp
/xuTWd80/aNZ7zQ9tL6Zt+z43t+QzXqo6aX1MW/clMx6qekpzfqp6SvNeqrp
Lc36qukvzXqr6THN+ru+mXrtlAePuDObXtOsz5p+Wx/z1M3JrN8bmp23aV/h
bHpPs75r+m9DzE+3JLP+a/pQsx9saP5l9yueOW5+Nv2o2S80Pbkh5p1bk9lP
NL2p2U80/bmh6V28vSsom/1F06ea/UbTq5r9R9Ovmv1I06+a/UnTs5r9StO3
mv1rQ8x785LpX83+pulhzX6n6eOBava/gaZ78oI1J96fTT8PxLx2W/Uuly7u
3QHZ7J+a3tbsnwMxD9yeTI8PNF+7f3Xn5AXZ7LcD0eN3JNPvmv1Y0/MDzZ0r
Jnt3YDb79UD09Z3J9L5mP9f0v2a/1swDmv1bMx9o9vOB5tevv/nWtx/KZn7Q
7PeaeUKz/2vmC00PaOYNTR8MxPxwVzLzh6YfNPOIpicGm23LgpfNvKLpDc28
oukPzfwyGL2q93hHe0Vn0yuD0a93Vx/GgprMPKTpG818NBg9qb+51zt7l2Q2
/TMYfXhPMvOVpo8085amlwab9jBz0TGa3tTtYd/i4WzmtcHo0fnVq04oC3w1
PZdNn2nmPU2vaeY/Tb9p5kFNz2nmw8Hm973h+LnRbHpPMz8ORr/9LJke1MyX
mj7UzJuaXhyqphc1fajpw6Fmu7LhZdOLml7U9KKmFzW9OBR9mE0/anpQ04Oa
HtT0oKb/NP2n6b2hpn33loxn039D0a/3JtODQ82X2ECr6Vv9rV5trZjU9Op9
1e3FvPKEbPpyKHpVt7vj6o6mB++vfrlTNtBqek//obearpvOpl+Hov9+nkzP
anpW07NDTVnOZmfTt5q+HYpe1GU5ekXTgw9Uf5kNPZk+1vTwUPRgNn2s6WNN
Dw81p7W366vZ9PBwNT08HL34i+pyOc3RXC66XB6vZdPTmn4ejn5akExPa3pa
08+afh5u1p5YAqea/sqmrzU9relpTU8PN39sL6/XNT33y2R6W9PXw025HOZm
09vD0XfZ9LemvzX9PdyUt+8NTQ8+mEyfDzdHEmzJ9Lqm1zW9rul1Ta9rel3T
68PRo9n0+nDznfblfjObftf0+3D06a+S6XlNz2t6fqSaftf0+UhTXt5Ts+n1
kejfbPpd0+uaPtf0uKbHNT2u6W9Nb2t6W9PbI015+d7S9PJDyfT4SLN+ugRs
Mn2u6fOR6N1sel3T6yP1c7Uzpm+z6XdNv2v6faTZsvwP2fT8SPRtNn2v6XtN
32v6fqR5V/kLNL2sdy1/IJv+1/S/pv81/T8SvZ1N/49W0/+a/tf0v6b/NX2v
6XdNv2v6XdPno81Hygv0cDJ9rulzTZ9r+nw05gt9UHnBNfNDNn2u6e3R5iu8
wMn0t6a/R2Me0f9afuBs+lzT55o+H435Rfcu5t4P/Egy/a7pd02va3p9NOYZ
3UPvBdTMN9n0/GjTi+veC6yZf3QvBnsvaDb9PxrzUDaXq2Ye0MwDo80jR7Vv
wKPVzFP6xVntG6KZr7JZZ8aqmSc088RYMzC7vEHJzBOaeWIs5qds5oux5r/n
tm9wNvOGZt7QzBdjMW/pjcsb/Fg1848un0baTzO/ZDOvaOaVsebd5QLJZn4Z
i/kjm3lGM89o5hnNPDPWlE8LLcpmnhmLeUZ/tFyQj1czz2Qz74w1h5QLNpt5
ZSzmH/1VLuBk5g3NfKGZLzTzhWaeGIv5Kpv5Yqz5t3IDaOavbOYHzfww1rTT
zLabP1HNvJbNPKGZJzTzhGZ+GGvKp4k+o5n3dDs9bHeOZv7T5dM4z2Qzj4xX
M09o5gnN/DAe82Q284RmnhhvHtvQ3sALq5k/s5k3NPPEeLO0/TTGZ7OZL8Zj
fs1m3tDMG+PN0Cvlhq9m3s1m3hhvftN+euE5zfyrSw5t+WQy88l4zLvZzCfj
TcmXAzXzbjbzimZeGW/4OGQ288t4zMvZzCua+WS8KdvtC9nMK5p5RTOvaOYV
zbwyHvN6NvPLePOxsgAuSmZ+GY/5Xn++LHDZzDOaeWY85n19LAtgNfN8NvOO
Zt7RzDuaeWeimnlHM99MNF8vC67mfECX7Wbrp6o5L9Blef9cNvORZj6aiPOF
bOYlzbykmZc089JEw8dHs5mfJuL8Qpfld5nmvEI/0S5/2yyu5vwhm3lMM49p
5rGJZnm7HH5Bc36RzTw20YyUj5Nqzieymc8mmt+2y8WKbOY1zXw2EecbuiwH
2z6dzPw2EecbutyuX9Scb2g+fqo5v8hm3ptoyuW4Mpv5byLOO/QnyobzTDXn
HdnMixPNoWVD0pxPZDM/aubFieYf2YCqOb/Q3ygbjua8Ipt5c6IpL+c7nq3m
/EGXl+dwzfmD5uOB2cyvmvlVM49OxPmALj/OGs15gX6y/fbe+Vwy86xmntXM
sxNxvpDNPKuZZyermWcnm5fab/eIbObbyTiP0GPl436a84ds5uHJ5nct12Uz
H2vmY818rJmPJ+u/A+o38/Jk7M+a8wzN/qw5z8hmvp6M/VtzXqHZr7OZxzXz
uGYen4zzjmzm7cnY7zXnIZr9PZv5fDLOO7KZzydj/9acN2j272zm+ck4T3ih
mv1cc76QzXyvme8nY//XnEdkM/9r5vvJ6AHN+UQ2879m/p+MftCcV2RzPjAZ
faE5z8jmPGAy+kBzfqHpBc15hqYfNOcTLyZzfqA5L5iM3sjm/GAyzjc0PZLN
+YLmfEBzX05Vcz4wFeclmn7RnJdkc34wFX2iOU/R9InmfEXTK5pxUtMvmvMT
Tc9ozlOWVNM32Zx3TMV5SzbnHVPRN9mcd0zF+YymfzTnL5r+0Zy3aHpIc96S
zfnKVPRRNuctU3HeoumjbM5PNOcnU3E+o+kpzXnN0mp6SnN+o+krzXmOprc0
5zfZnN9MRY9pznM0faY5n9H0WTbnP5rzH835j+b8R3PeMxXnPZre05z/aPpP
cx60rJoe1JwHZXNeNBV9mM150VScF2n6UXN+lM350VT0o+Y8SNOT2Zw3ac6b
puK8KJvzp6noUc15kqZPNedHmj7VnCctT+Z8ayr6VXNepOlZzfmRpm8150ma
3s3m/ExzPjYV50+a3tWcR2n6V5P3mh7WnCdlcx43Fb2sOW9akcx5nOY8bip6
WXP+pOnhbI6/puI8StPHmvMnTS9rzqM0/aw5j9L0s+Z8StPD2ZwvTsX5lZ75
d2j95rxwKnpZ08uaXtb0saaPszl/7EQva/pX07ua3s3m/FJzftmJHs7m/LIT
PZzNeWYnejib88tO9LGmjzU9rOnhldX0sKZ3Nb2bzXlpJ/pW07eaftX0q6ZX
Nb2q6VNNn2r6VNOnmj7V9KmmP1dV05ua3tT0oqYXNb2o6UNNH2r6MJvz5k70
YjbnzZ3oR00/avoxm/PpTvSkpiezOZ/uRF9q+nJ1NT2p6cdszqs70Y+aftT0
o6Yfsznf1pxfa86vO9Gbmt7M5jy7E/2p6U1NX2r6UtOPmn7M5ny8Ez2p6cmX
q+lJTU9qelLTk5qe1PSjph81/ajpx2zO8zvRk5r+y+Z8vxM9qLm9szn/70Qf
avpQ04drqulDTQ9q+k/Tf5r+0/Sepvc0vafpuWyeX2ieX3Si7zR9p+m7bJ53
dKL3NL2n6b1snodonn90ov/WJvO8oxM9mM3zD83zjE70oqYXNb2o6UVNL2Zz
PKd5PtKJXtT0oqYXNb2o6UVNL2reHk0favpQ03/rknl+o3l+063m+U03ejGb
5y/d6EdNL2p6MZvnNZrnM93oSU1Panoym+c5muc5muc53ehPTX9q+lPTn9k8
/+lGj2bz/KYbParpUT3z7xZnzPqbzfOfbvSpZn3W9Kpmvc7m+ZHm+VA3+laz
vmt6V7Pea3pXs/5r+jeb503d2B80fazZLzS9rNk/NH2czfOrbuwn2TzP6kY/
a/YbTT9r9htNP2fz/Ksb+5GmrzX7kaa3s3ne1Y39StPjmv1L0+cbqtnPNL2e
zfOzbux3mp7X7H+antfsh9k8X+tG72v2S03/a/ZPzTyg2U+zeT7XjXlBs99m
8/yuG/OEZj/WzBfZPK/TPF/TPF/rxn6tmU80+7dmXtHs59k8r9M8b9M8b9Pk
fDfmH00PaOYhTR9o5iNNL2jmJU0fZPN8rxvz1EAyz/u60Q+aeUvTC5r5S9MP
mnlM0xOa+UzTF5p5TdMbmvlN0xeaeU7TG5p5TtMfmnlO0yOa+U7TJ5p5T9Mr
mnlP0y+a+U/TM5r5T9M3mnlQ0zua+XAwmee909E3mvlR0zea+VHTO5p5Mpvn
x9PRQ9k8H56O+VPTQ5p5VNNHmnlT00ua+VPTQ9k8j56OeVTTS5r5VNNPmnlV
01Oa+VXTU5p5VtNTmvlW01ea+VbTW5p5V8/8O8AZ01ua3tL0lqa3ND2l6SlN
T2l6StNTmp7S9JSmnzT9pOknTT9p+knTT5pe0vSRpo80faTpI00faXpI00Oa
HtL0kGY70vSPpn80/aPpn+FkPo8xHT2k6Z9sPq8xHT2Uzec3pqOPNH2k6aNs
Pt8xHX2k6SNNH2n6SNNHmj7S9JCmhzT9o+kfTf9oekbTM5qe0fSMpmc0PaLp
EU2PaHokm8+3TEefaPpE0yeaPtH0iKY/RqrpD01/aPpD0x+a/tD0h6Y/NP2h
6Q9Nf2TzeZ3p6JFsPr+j+fzOdPSKplc0vZLN53umo180/aLpF02/aPolm8//
TEfPaHpG0zPZfD5I83mf6egdTe9oeiebz/tMR/9k8/mf6eghzeWs6SFND2Xz
+aDp6CNND41W00OaHtL0kKaHND2k6R9N72h6R9M7mt7R9I6mdzS9o+kdTd9o
+iabz0/N9I6mdzS9o+kdTe9oekfTO5re0fSOpnc0vaPpnWw+3zXTP5r+0TP/
bmnG9I+mfzT9o+kfTf9o+kfTP5r+0fSPpn80/aPpH03/aPpH0z+a/tH0j6Z/
NP2j6Z9sPk8300OaHtL0kKaHND2UzefvNJ+vm+klTS9peknTS5pe0vRSNp+v
m+ml8Wp6SdNHmh7S9JCmhzT9o+kfTf9o+kfTP5r+0fSPpn80/aPpH03/aPpH
0z+a/tH0j6Z/NP2j6R9N/2j6R9M7mt7R9I6mdzS9o+kdTe9MVNM7mt7R9I6m
dzS9o+kdTe9oekfTO5q+0fSLpl80/aLpFU2vaHpF0yuaXtH0iaZPNH2i6Q9N
f2j6Q9Mbmr7Q9IWmLzR9oekJTU9oemKymp7Q9ISmJzQ9oekJTU9oekLTE5qe
0PSEpic0PaHpCU1PaHpC0w+aftD0g6Yfsvl88kxPaHpC0xOantD0hKYnND2h
6QlNP2j6QdMPeuZzzTOmHzT9kM3nrWd6QtMTmp7Q9ISmJzQ9oekJTU9k83nu
mb7Q9IWmLzR9oekLTV9o+kLTF5q+yGb8mukLTV9o+kLTF5q+0PSDph80/aDp
B832oukHTS9oeqFTTS9oekHTC5pe0PSCphc0vaDpBU0vaHpB0wuaXtD0gqYX
NL2g6QVNL2h6QdMLml7Q9IKmFzS9oOkFTS9oekHTC5pe0PSCphc0vaDphW41
vaDpBU0vaHpB0wuaXtD0gqYXNL2g6QVNL2Tz7ztm+kHTD5p+0PSDph80/aDp
B00/aPpB0w+aftD0g6YfNP2g6QdNP2j6QXO5aPpB0w+afpiuph80/aDpB00/
aPpB0w+aftD0Qzb72q+jJzQ9oekJTU9oekLTE5qe0PSEpic0PaHpB00/aPpB
0w+aftD0g6YfNP2g6QdNP2j6QdMP+v/+b/8v////AdzA4nU=
         "], {{{}, {}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwl2TMUIAAOQMG1bdu2bdu2bdu2bdu2bdu29/bm3hXzUqf4TZKwUftK7QIF
CBAgIHOCBwhwictc5ALnOcdZznCaU5zkBMc5xlGOcJhDHOQA+9nHXvawm13s
ZAfb2cZWtrCZTWxkA+tZx1rWsJpVrGQFy1nGUpawmEUsZAHzmcfc4P/fbzaz
mMkMpjONqUxhMpOYyATGM46xjGE0oxjJCIYzjKEMYTCDGMgA+tOPvvShN73o
SQ+6042udKEznehIB9rTjra0oTWtaEkLmtOMpjShMY1oSAPqU4+61KE2tahJ
DapTjapUoTKVqEgFylOOspShNKUoSQmKU4yiFKEwhShIAfKTj7zkITe5yEkO
spONrGQhM5nISAbSk460pCE1qUhJCpKTjKQkITGJSEgC4hOPuMQhNrGISQyi
E42oRCEykYhIBMITjrCEITShCEkIghOMoAQhMIEISAD+BQsQ4D/85Q+/+cVP
fvCdb3zlC5/5xEc+8J53vOUNr3nFS17wnGc85QmPecRDHnCfe9zlDre5xU1u
cJ1rXOUKl7nERS5wnnOc5QynOcVJTnCcYxzlCIc5xEEOsJ997GUPu9nFTnaw
nW1sZQub2cRGNrCedaxlDatZxUpWsJxlLGUJi1nEQhYwn3nMZQ6zmcVMZjCd
aUxlCpOZxEQmMJ5xjGUMoxnFSEYwnGEMZQiDGcRABtCffvSlD73pRU960J1u
dKULnelERzrQnna0pQ2taUVLWtCcZjSlCY1pREMaUJ961KUOtalFTWpQnWpU
pQqVqURFKlCecpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQl
C5nJREYykJ50pCUNqUlFSlKQnGQkJQmJSURCEhCfeMQlDrGJRUxiEJ1oRCUK
kYlERCIQnnCEJQyhCUVIQhCcYAQlCIEJREAC8C+o/vnLH37zi5/84Dvf+MoX
PvOJj3zgPe94yxte84qXvOA5z3jKEx7ziIc84D73uMsdbnOLm9zgOte4yhUu
c4mLXOA85zjLGU5zipOc4DjHOMoRDnOIgxxgP/vYyx52s4ud7GA729jKFjaz
iY1sYD3rWMsaVrOKlaxgOctYyhIWs4iFLGA+85jLHGYzi5nMYDrTmMoUJjOJ
iUxgPOMYyxhGM4qRjGA4wxjKEAYziIEMoD/96EsfetOLnvSgO93oShc604mO
dKA97WhLG1rTipa0oDnNaEoTGtOIhjSgPvWoSx1qU4ua1KA61ahKFSpTiYpU
oDzlKEsZSlOKkpSgOMUoShEKU4iCFCA/+chLHnKTi5zkIDvZyEoWMpOJjGQg
PelISxpSk4qUpCA5yUhKEhKTiIQkID7xiEscYhOLmMQgOtGIShQiE4mIRCA8
4QhLGEITipCEIDjBCEoQAhOIgATgXxD985c//OYXP/nBd77xlS985hMf+cB7
3vGWN7zmFS95wXOe8ZQnPOYRD3nAfe5xlzvc5hY3ucF1rnGVK1zmEhe5wHnO
cZYznOYUJznBcY5xlCMc5hAHOcB+9rGXPexmFzvZwXa2sZUtbGYTG9nAetax
ljWsZhUrWcFylrGUJSxmEQtZwHzmMZc5zGYWM5nBdKYxlSlMZhITmcB4xjGW
MYxmFCMZwXCGMZQhDGYQAxlAf/rRlz70phc96UF3utGVLnSmEx3pQHva0ZY2
tKYVLWlBc5rRlCY0phENaUB96lGXOtSmFjWpQXWqUZUqVKYSFalAecpRljKU
phQlKUFxilGUIhSmEAUpQH7ykZc85CYXOclBdrKRlSxkJhMZyUB60pGWNKQm
FSlJQXKSkZQkJCYRCUlAfOIRlzjEJhYxiUF0ohGVKEQmEhGJQHjCEZYwhCYU
IQlBcIIRlCAEJhABCcC/wPrnL3/4zS9+8oPvfOMrX/jMJz7ygfe84y1veM0r
XvKC5zzjKU94zCMe8oD73OMud7jNLW5yg+tc4ypXuMwlLnKB85zjLGc4zSlO
coLjHOMoRzjMIQ5ygP3sYy972M0udrKD7WxjK1vYzCY2soH1rGMta1jNKlay
guUsYylLWMwiFrKA+cxjLnOYzSxmMoPpTGMqU5jMJCYygfGMYyxjGM0oRjKC
4QxjKEMYzCAGMoD+9KMvfehNL3rSg+50oytd6EwnOtKB9rSjLW1oTSta0oLm
NKMpTWhMIxrSgPrUoy51qE0talKD6lSjKlWoTCUqUoHylKMsZShNKUpSguIU
oyhFKEwhClKA/OQjL3nITS5ykoPsZCMrWchMJjKSgfSkIy1pSE0qUpKC5CQj
KUlITCISkoD4xCMucYhNLGISg+hEIypRiEwkIhKB8IQjLGEITShCEoLgBCMo
QQhMIAISgH+B9M9f/vCbX/zkB9/5xle+8JlPfOQD73nHW97wmle85AXPecZT
nvCYRzzkAfe5x13ucJtb3OQG17nGVa5wmUtc5ALnOcdZznCaU5zkBMc5xlGO
cJhDHOQA+9nHXvawm13sZAfb2cZWtrCZTWxkA+tZx1rWsJpVrGQFy1nGUpaw
mEUsZAHzmcdc5jCbWcxkBtOZxlSmMJlJTGQC4xnHWMYwmlGMZATDGcZQhjCY
QQxkAP3pR1/60Jte9KQH3elGV7rQmU50pAPt+d+Bti1taE0rWtKC5jSjKU1o
TCMa0oD61KMudahNLWpSg+pUoypVqEwlKlKB8pSjLGUoTSlKUoLiFKMoRShM
IQpSgPzkIy95yE0ucpKD7GQjK1nITCYykoH0pCMtaUhNKlKSguQkIylJSEwi
EpKA+MQjLnGITSxiEoPoRCMqUYhMJCISgfCEIyxhCE0oQhKC4AQjKEEITCAC
EoB/AfXPX/7wm1/85Aff+cZXvvCZT3zkA+95x1ve8JpXvOQFz3nGU57wmEc8
5AH3ucdd7nCbW9zkBte5xlWucJlLXOQC5znHWc5wmlOc5ATHOcZRjnCYQxzk
APvZx172sJtd7GQH29nGVrawmU1sZAPrWcda1rCaVaxkBctZxlKWsJhFLGQB
85nHXOYwm1nMZAbTmcZUpjCZSUxkAuMZx1jGMJpRjGQEwxnGUIYwmEEMZAD9
6Udf+tCbXvSkB93pRle60JlOdKQD7WlHW9rQmla0pAXNaUZTmtCYRjSkAfWp
R13qUJta1KQG1alGVapQmUpUpALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clH
XvKQm1zkJAfZyUZWspCZTGQkA+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc
4hCbWMQkBtGJRlSiEJlIRCQC4QlHWMIQmlCEJATBCUZQghCYQAQM+P+n2j/j
P/zlD7/5xU9+8J1vfOULn/nERz7wnne85Q2vecVLXvCcZzzlCY95xEMecJ97
3OUOt7nFTW5wnWtc5QqXucRFLnCec5zlDKc5xUlOcJxjHOUIhznEQQ6wn33s
ZQ+72cVOdrCdbWxlC5vZxEY2sJ51rGUNq1nFSlawnGUsZQmLWcRCFjCfecz9
33+T2cxiJjOYzjSmMoXJTGIiExjPOMYyhtGMYiQjGM4whjKEwQxiIAPoTz/6
0ofe9KInPehON7rShc50oiMdaE872tKG1rSiJS1oTjOa0oTGNKIhDahPPepS
h9rUoiY1qE41qlKFylSiIhUoTznKUobSlKIkJShOMYpShMIUoiAFyE8+8pKH
3OQiJzn4L2sZ6yw=
               "]]}]}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwl2UMUGNgOANCpbdu2bdu2bdu2bdu2bduYqe32356/uCeLt07ykiRo2K5i
2wD//PPPhWD//PM3BiQQgQlCUDz9E5wQhCQUoQlDWMIRnghEJBKRiUJUohGd
GMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c
5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrU
pBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rRng50pBOd6UJXutGdHvSk
F73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGeCUxkEpOZwlSmMZ0ZzGQW
s5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nCVraxnR3sZBe7
2cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc5BKXucJVrnGdG9zkFre5
w13ucZ8HPOQRj3nCU57xnH/5jxe85BWvecNb3vGeD3zkE5/5wle+8Z0f/OQX
v/nD3+QPQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4
xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzk
JR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSl
HvVpQEMa0ZgmNKUZzWlBS1rRmjb8Ld7taE8HOtKJznShK93oTg960ove9KEv
/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84SnPeM6//McLXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84W/j
D0BAAhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJ
QEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlA
QQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBD
GtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH/0ZwEAG
MZghDGUYwxnBSEYxmjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zGUe81nAQhax
mCUsZRnLWcFKVrGaNaxlHevZwEY2sZktbGUb29nBTnaxmz3sZR/7OcBBDnGY
IxzlGMc5wUlOcZoznOUc57nARS5xmStc5RrXucFNbnGbO9zlHvd5wEMe8Zgn
POUZz/mX/3jBS17xmje85R3v+cBHPvGZL3zlG9/5wU9+8Zs//P30ByAggQhM
EIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwS
kpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGK
UozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rS
jOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM
4YxgJKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozl
rGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc
4CSnOM0ZznKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM5/zL
f7zgJa94zRve8o73fOAjn/jMF77yje/84Ce/+M0f/g78AQhIIAIThKAEIzgh
CEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlI
SSpSk4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJ
KUpThrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkr
WtOGtrSjPR3oSCc604WudKM7PehJL3rTh770oz8DGMggBjOEoQxjOCMYyShG
M4axjGM8E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlaz
hrWsYz0b2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOG
s5zjPBe4yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOf/yHy94ySte
84a3vOM9H/jIJz7zha984zs/+MkvfvOHv8u+AAQkEIEJQlCCEZwQhCQUoQlD
WMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa
0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nK
UZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rR
ng50pBOd6UJXutGdHvSkF73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGe
CUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4N
bGQTm9nCVraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc
5BKXucJVrnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnH/5jxe85BWvecNb3vGe
D3zkE5/5wle+8Z0f/OQXv/nD30V/AAISiMAEISjBCE4IQhKK0IQhLOEITwQi
EonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKS
icxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJ
ylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onO
dKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclM
YSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxh
K9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOEq
17jODW5yi9vc4S73uM8DHvKIxzzhKc94zr/8xwte8orXvOEt73jPBz7yic98
4Svf+M4PfvKL3/zh75EvAAEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd6URnutCVbnSn
Bz3pRW/60Jd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcG
M5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc7
2cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOcD/b/G/r/AAKd77A=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             AbsoluteThickness[1.6], 
             GrayLevel[0.5]], 
            LineBox[{2002, 2003}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        AxesOrigin -> {0, 0}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> 1, Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
           FormBox["\"Recall\"", TraditionalForm], None}, {
           FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.5], 
          AbsoluteThickness[1], 
          AbsoluteDashing[{1, 2}]], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
         "PointLegend", DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"PointLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.7091799470384054`*^9, 3.709179958198044*^9}, 
   3.7091806943401484`*^9, 3.7092235499442787`*^9, 3.7092236353361626`*^9, 
   3.7092246234496794`*^9, 3.709224751731017*^9, 
   3.709258190608611*^9},ExpressionUUID->"564e69c6-0ee8-4009-be40-\
f0c3ef0fbac7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rocAreaSVM", "=", 
  RowBox[{"cmSVM", "[", "\"\<AreaUnderROCCurve\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709180064191106*^9, 3.709180095467895*^9}, {
  3.7091806833325186`*^9, 
  3.709180688669824*^9}},ExpressionUUID->"f3171f86-39c8-4cfc-8501-\
af4157158878"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"negative\"\>", "\[Rule]", "0.8811835829972473`"}], ",", 
   RowBox[{"\<\"positive\"\>", "\[Rule]", "0.8812345960565906`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.709180101361232*^9, 3.709180694378151*^9, 
  3.7092235499792805`*^9, 3.7092236353691645`*^9, 3.7092246235186834`*^9, 
  3.709224751766019*^9, 
  3.709258190641613*^9},ExpressionUUID->"88cccfc9-907b-4cdc-91e2-\
7e23a7641433"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Markov (2.1)", "Subsection",
 CellChangeTimes->{{3.709221933426819*^9, 3.7092219418333*^9}, {
  3.7092223740770226`*^9, 
  3.7092223781722574`*^9}},ExpressionUUID->"c56c246b-dde7-458d-a61e-\
80ec46be86fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cmMarkov", "=", 
   RowBox[{"ClassifierMeasurements", "[", 
    RowBox[{"markov", ",", "testset"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7092221688142824`*^9, 3.709222207721508*^9}, {
  3.709222343933299*^9, 3.709222345890411*^9}, {3.7092223828145227`*^9, 
  3.709222431979335*^9}},ExpressionUUID->"5b4e5e8d-7cd7-4ad8-8d58-\
f9f956053df3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"accMarkov", "=", 
  RowBox[{"cmMarkov", "[", "\"\<Accuracy\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7092224345424814`*^9, 
  3.7092224437920103`*^9}},ExpressionUUID->"23676352-0bc4-4c80-b1fd-\
4ca86923c81a"],

Cell[BoxData["0.837`"], "Output",
 CellChangeTimes->{3.7092235519233923`*^9, 3.709223637291275*^9, 
  3.7092246254677954`*^9, 3.7092247537541327`*^9, 
  3.7092581925677233`*^9},ExpressionUUID->"31e198e1-baf5-4069-b3cb-\
a6a060c08731"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"precMarkov", "=", 
  RowBox[{"cmMarkov", "[", "\"\<Precision\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709222213326829*^9, 3.7092222237424245`*^9}, {
  3.7092224470321956`*^9, 
  3.709222475793841*^9}},ExpressionUUID->"e728e34c-12c7-45bf-81c6-\
7e29dba422db"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"negative\"\>", "\[Rule]", "0.8176795580110497`"}], ",", 
   RowBox[{"\<\"positive\"\>", "\[Rule]", "0.8599562363238512`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7092235519373927`*^9, 3.709223637305276*^9, 
  3.7092246254827957`*^9, 3.7092247537681336`*^9, 
  3.7092581926057253`*^9},ExpressionUUID->"f6834e34-f4ef-4766-8af6-\
439537c45737"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"recMarkov", "=", 
  RowBox[{"cmMarkov", "[", "\"\<Recall\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709222254420179*^9, 3.7092222589294367`*^9}, {
  3.7092224492383223`*^9, 
  3.709222473086686*^9}},ExpressionUUID->"83186b88-70ba-4aa0-90ee-\
44106671bdfb"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"negative\"\>", "\[Rule]", "0.8740157480314961`"}], ",", 
   RowBox[{"\<\"positive\"\>", "\[Rule]", "0.7987804878048781`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7092235519513936`*^9, 3.7092236373202763`*^9, 
  3.709224625497797*^9, 3.709224753782134*^9, 
  3.7092581926397276`*^9},ExpressionUUID->"4670453b-ab4b-4c05-bfaf-\
a77809678c84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"confMtxMarkov", "=", 
  RowBox[{"cmMarkov", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709222260836546*^9, 3.709222262239626*^9}, {
  3.709222311659453*^9, 3.709222316743744*^9}, {3.709222455343671*^9, 
  3.7092224696394887`*^9}},ExpressionUUID->"b253882b-f87c-411d-97f4-\
cfcc7f71060f"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{0.90877497662342, 0.7710674157210683, 0.42433447311929423`}, {
   0.9235115245985724, 0.49598167911772284`, 0.0038081471810029357`}}, {{1., 
   0.42, 0.}, {0.9312787076001277, 0.858764291553977, 
   0.6400185485631673}}}, {{0, 0}, {2, 2}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["888", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "888", "\" examples of \"", "\"negative\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.8176795580110497`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.8740157480314961`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.8449096098953378`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{888, " examples of ", "negative", " correctly classified"}], 
         Row[{"Precision = ", 0.8176795580110497}], 
         Row[{"Recall = ", 0.8740157480314961}], 
         Row[{"FScore = ", 0.8449096098953378}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["198", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "198", "\" examples of \"", "\"positive\"", 
             "\" misclassified as \"", "\"negative\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.18232044198895028`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.20121951219512196`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          198, " examples of ", "positive", " misclassified as ", 
           "negative"}], 
         Row[{"Column fraction = ", 0.18232044198895028`}], 
         Row[{"Row fraction = ", 0.20121951219512196`}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["128", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "128", "\" examples of \"", "\"negative\"", 
             "\" misclassified as \"", "\"positive\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.1400437636761488`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.12598425196850394`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          128, " examples of ", "negative", " misclassified as ", 
           "positive"}], 
         Row[{"Column fraction = ", 0.1400437636761488}], 
         Row[{"Row fraction = ", 0.12598425196850394`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["786", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "786", "\" examples of \"", "\"positive\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.8599562363238512`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.7987804878048781`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.8282402528977874`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{786, " examples of ", "positive", " correctly classified"}], 
         Row[{"Precision = ", 0.8599562363238512}], 
         Row[{"Recall = ", 0.7987804878048781}], 
         Row[{"FScore = ", 0.8282402528977874}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1016", "\" example\"", "\"s\"", "\" of class \"", "\"negative\""},
            "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.8740157480314961`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1016, " example", "s", " of class ", "negative"}], 
        Row[{"Recall = ", 0.8740157480314961}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          TemplateBox[{
           "984", "\" example\"", "\"s\"", "\" of class \"", "\"positive\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.7987804878048781`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{984, " example", "s", " of class ", "positive"}], 
        Row[{"Recall = ", 0.7987804878048781}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1086", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"negative\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.8176795580110497`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1086, " example", "s", " classified as ", "negative"}], 
        Row[{"Precision = ", 0.8176795580110497}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "914", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"positive\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.8599562363238512`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{914, " example", "s", " classified as ", "positive"}], 
        Row[{"Precision = ", 0.8599562363238512}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{1.5, 
       FormBox[
        RotationBox["\"negative\"", BoxRotation -> 0.], TraditionalForm]}, {
      0.5, 
       FormBox[
        RotationBox["\"positive\"", BoxRotation -> 0.], TraditionalForm]}}, {{
      1.5, 
       FormBox["1016", TraditionalForm]}, {0.5, 
       FormBox["984", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["1086", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["914", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"negative\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"positive\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.709223552031398*^9, 3.7092236373902807`*^9, 
  3.709224625572801*^9, 3.7092247538591385`*^9, 
  3.7092581926957307`*^9},ExpressionUUID->"852c1e6d-205d-4f9d-8b9d-\
878dcd3f541a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rocMarkov", "=", 
  RowBox[{"cmMarkov", "[", "\"\<ROCCurve\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7092223182768316`*^9, 3.709222322882095*^9}, {
  3.7092224580498257`*^9, 
  3.709222467169348*^9}},ExpressionUUID->"e7f836ed-3595-4bbe-a325-\
10d54992ca11"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"negative\"\>", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{}, 
        GraphicsComplexBox[CompressedData["
1:eJx123mw3WV5wPFMhqGMw1BKKaYoIm5FSyk6GYZhGH6KqLggm4pUhIhAU5pi
SiNGDCoioqXIvhQQQyCEECBAwIgh0hC2EELIvi/33tzc3HuWa4qIiDg9v/f7
nvc7PU/LP8xHyc1Z3+f7/M65h5zzjVPPGztmzJhVfzZmTP3v/++fvfYYe9lH
331y9b89oXjvPS9fNOGIiT3//+Tit11x3F0nHzql57+fWrzPlYv7Jh81refP
f7/4J8e/57oT3veDnp/3w+Krnj3nkS8f9qOen//j4qs/efeKieP/vefv+4/i
a54f2D31mJ/2/P3XFn/6ffvVN6Hn9lxf/OK5H/nPz33ghp7bd2PxZ2eeOvsL
H7qp5/beXPzS4EVPnHn4LT23/9biEz9ww5LOX9Fzf24rfvn8eRsmHXl7z/27
o/ikWauGpxz9s577e2fxK0OvvjHt2J/33P/pxYfuX9+j6T2Px13F/zT+wM5N
uqvn8ZlRXN/5z8yc0fN43V080rlxn591d8/jd09x/adPnX1Pz+M5s/ifH/+H
B780Z2Y1a9+Jb7vs3pOrXvN431s8Z80Fnf9C8/jPKm6+dsnCs+Zqno/7ig87
oP6JmudndvG/HHn7svPnaZ6v+4s7N65zCzTP35zi9sULtlw4X/N8PlB8+C1L
O7dY8/w+WPyN+ZtaFy/QPN8PFc9d1+jcQ83zP7f4N6+/+dZ3n9K8Hh4uHpce
EM3rQx/1zvoWa14vjxSfwQNYzOtHf/uYd3Vusub19Ghx/WZbcq7m9aXrN9PS
Qc3rbV72hOCNk9ITVszrUf+h8+ZYPqR5fT5WfGB6gjWvV13/tFXDj1V/GHfH
NYvemBjM6/nx4q/wAinm9ay/03l1rmtoXt+/KK7vzIZJmte7rl9dm1qa1//8
4s2t9AIs5v2g/9h5dWwb1bw/fpnv7+Tg9HKYrHn6dXq6d2veT09Ur+w/9sRD
XpkS/FXeAMW8357It2dq8KX10/eq5v34q+L0dEzRPPw6Pdyvad6vC4q3Xpje
cMW8f/Wf6ofrdc37+cnidPenau7ek9V7Dzpy5dfee2lwujtvaN7/C/Pj9/3g
s3nDF3M+6O/VN+9NzXnx6+L0103T/Did/vhbmvPkqWrBfo//7SkLfhC8fTQd
MMWcN5pT/b+KOX/0vul/0JxH+t3pP9CcT/qI9Ac055X+WPoBi4o5v/Qp6Qdq
zjP9Nf6CYs43/a/pL9Scd7pzZzs34Olizj/dQecGac5D3TmcOjdQcz7qzmHR
ucGa81I/PaG+A4uLOS/1yon1HdKcn7p/crqDxZyn+r+n1nd4cX7//jCY81aP
TQ/IM8WcvzrV2Qma81i/Jz1gmvNZp3pbojmf9cfTA/psMee1Pi09wJrzW3+d
B7yY81z/W3oCNOe7rk/TcXs/V8x5r1Mdfk5z/uv6tDvwas080Kkel2nmg36m
r35Cny9mXujVdV1+XjM/9I7d6QkuZp7o39b1uVwzX3R6++/7QjHzRae398ma
eaPJd8380entuUIzj/Qn0gtoSTHzSH8xvaA080mfxwusmPmkv5lecEuqwQNO
unD3jh8FM790evnv/2Ix80ynl/cXNPNNs45o5p1OL881mvmnn6tffgcsLWYe
6rX1y+tLmvmod6Z1RzMv9e/ql8c6zfzU6ekf91Ix81Snp/fLmvmqWac081Wn
p2eDZt7qT6U31LJi5q0+Pb3BNPN3WZ7vPw7+R96Axcxn/a30htTMa53u/jtf
LmZ+63T3ztTMc816qJnvOt2cLZp5r1+o/7p3LS9m3uv19Y87a3n15+8Yfvi6
fa4qpl+uDqYP9K60nmp6Qf++5jadt9pizg9NT2jOE01faM4XTW9ozhtNf2jO
H02PaM4jTT5ozidNr2jOK02/rCjm/FpRHXXw5a9++Khrgukbzfmm6R3Neafp
nxW5/64N5jzU9JHmfNT0kua81PST5rzU9JTm/NT01cpizlNNb2nOV01/ac5b
TY9pzl9Nn2nOY02vac5nTU5ozmtNz2nOb03frSrmPNf0nuZ81/Sf5rzX9KDm
/Nf0oWYeaHpRMx80vaiZF5p+1MwPTU+uLmaeaPpSM180vbm6euS6feoTLZj5
o+lRzTzS9KlmPml6VTOvNHmhmV+antXMM03frilmvq3JvX59MP2rmX+aHtbM
Q00fa+ahppc181HTz5p5uaZ67oavHPPEszcE09eaearpbc181fT32mLmrabH
1+aeuzGYeazpdc181vS7Zl6vrTbddN9Xf7LxpmD6XjPPNb2vme+a/NDMe80+
oJn/mv1gXTE9oNkXNH2g2R80PaDZJzR9oNkvNL2g2Tc0/aDZPzQ9odlHNH2x
vpi+0PTF+tx/NwfTG5re0PSGpjc0vaHpDU1vrK9Gb3ntu2eM3hJMf2j6Q9Mf
mnGs6Q9Nf2j6Y0MxvaHpDU1vaHpD0xuavtD0haYvNH2h6QtNX2j6QtMXmr7Q
9IWmLzYW0xeavtD0haYvNH2h6QtNX2j6QtMXG3OP3xpMb2h6Q9MbmuNX0xsb
qz1uO276B/e4LZj+0PTHpmL6Q9Mfmv7Q9MemvE/cXvzX9c0Zd0cwfaLpE02f
aPpE0yeaPtH0iaZPNH2i6RNNn2j6ZHMxfaLpE02faHpkc+7/nwXTJ5o+0fTJ
5urwOzf3L/m7O4PpFU2vaHpF0yuaXtG8/TS9oumVzXnf+Hkw/bKlmF7R9Iqm
VzS9oukVTa9oekXTK5pe2VIdkgb49GD6ZUvuyWj6RdMvmn7R9IumXzT9srWY
ftH0iqZXNL2i6RVNr2j6RNMnmj7R9ImmTzR9srU67JS6+O4K5uHS9IqmV7bm
vo2mX7YV0y+aftH0i6ZfNP2i6ZdtVf3uOujIGcH0jKZnND2j6RlNz2h6Zlvu
42j6RtM3mr7ZXsx5pOkdzfmk6R3NeaXpH835pekhzfm1vfrYaXuNv+KjdxfT
39H0k+a80/SU5vzT9JXm/NP0luY81PSW5nzU9JfmvNT0mOb81PSZ5jzV9Jrm
fN1efXb1Q8e3PnNPMftFNH2nOY81vac5jzX911fM+dxXfTH9MzOYPtSc35pe
1Jznfbm3o+lJzXmv6UvN+a/pTc080PSnZj5oelQzLzR92ldNWPvmeQvPvjeY
eaLp177c99HMF03fauaLpnc180bTv5r5o+lhzTzS9LFmPml6ua+64PQZF7//
glnBzK++3K/R9HV/MfNN09uaeafpb83866++uf6EK6+ecl8wfa6Zj5pe18xL
Tb9r5qem5zXztD/3dTS9319974z6HswOZv5q9oH+3M/3BzOfNftBf9XZZTsv
2Gjmt2Z/0MxzzT7Rn3t9TjDzvr+6MV1OiWb/0Mx/zT6i6QHNPqLpA81+oukD
zb4yUEwvaPYXTT9o9hlNT2j2m4Hc7w8Uk7/R9Idm39H0iGb/0fSJZh/S9Ilm
P9L0ykDeFx4snl1f/bhP0+8PBbNfaXpHs28NVPO2/n3jrUej6SHNPqbpI81+
NpD7fG4w/aTZ3waqhWfXB3A0PaXZ7zR9pdn3NL01kPeBh4PZBzU9tqOYHtP0
mKbHdlTnTj52z6GvR9Nnmj7T9NmO3N/R9Jqm13ZU9bu585YOps80fabpM02f
afpsR+75R4o7w6QzUaLpN02/afpN02+aftP0m6bfNP2m6TdNv2n6TdNvmn7T
9NmOvE9EM653VL/9cP0KjqbfNP2m6TdNvw0W02uaXhvM+8ajwfTbYPXti676
m/lTo+m5wdz30fScpuc0PafpucHqT4+mN3wwfafpO03fDeb9Yl4wvTdY1afD
wZdH03+Dubej6UFNDw5W9U8/ba/HgulBTQ9q+k/Tf5r+0/TfYO7/aHpQ04Oa
HhysfjqlDpRo+lDTh5o+1PThYN4PounFweov66d3v8eD6cXBvA9E04uaXtxZ
3Zouh0bTj5p+1PSjph81vbgz971O4/GgXwTTkztz30fTl5q+1PSlpi81fanp
S01PavpR04+aXtxZ1XV++oxo+lHTi5pe1PSiphc1fajpQU0PanpQ04OaHtyZ
949oXr47q0PnT61PqGL2kWj6UdOPmn7U9ONQ9eDrSy956oFoelLTk5qe1PTk
UN5foulLTT8OVR9JgfPLYvaNaPpS05eavtT0paYvhyoeTs3+Ek1/DlV1DXdO
yGB6VNOjQ3m/0U+/Uf9AzT7zq2B6VNOjmh7V9OdQ9amjJ92z+JPR9KimRzU9
qulPTX8O5X0pmv7U9KemP4eqlzqvjteXavarBcWnMDCD6VVNrw7l/SSaXtX0
qqZXdxXTq7uqdJys1ew7TwbTs5p+1fSrpl81varpVU2favpU06eaPt1VnZle
gNH0qqZHd+V9KZo+1fTprqpv2t4vP79ds18tLD6fBSKYntX0rKZnNT2r6VlN
z+7K+1w0favpW03favpW07eantX0q6Zfd1WdVusEWzQ9uyvvj78Opm93VWm9
mRxN7w7nfVH/rh7vr0XTw5r+1fTucN4nnwqmdzW9q+ldTe8OV9+p396XaJ6u
aPp3uPweRdfsh/rj9aepx2n2v2j6WdPPw1Vdl+OviKafh/N+qF/YXr/ANfud
7vzHnT+xKJje1vT1cN4H9YnpDkbT38N5n4qmv4eraxelAVLMfhVNnw9Xad1Z
GU2va3pd0+uaXtf0+XDet6LpdU2va/p8uPqrOqf3f7qY/UynPDk9mp7X9Lym
5zX9Ppz3u2j6fbji43vNuNFb6uNws2Y/i6b3h6v09jh4cTD9r+n9kWJ6fyTv
d/qcdOBGsw9o9gHNPqDpfU3fj+R9UXeGf10AwfT/SN4Xdeew6rwBNfvdM8Hs
C5p9QbMvaPYFzb6g2Rc0+4JmX9DsByPVh1JARbMvjOT9Mpr9YaSalB6QaPaJ
kbxPRrNfjFRzOz9t9UPR7Bsjed+MZv/Q7B8jVToudkezj2j2Ec0+otk/RvI+
+2ww+8ZIlR7O8Zp9Npp9RLOPjFTfqtefi6PZTzT7SCPvs5rc1uy3+o91zr2p
2W+fC2a/0ew3jSqN32Oj2Xcaef/U6fi/LJr9R7P/aPYbzX7TyPuhfia9/aLZ
fxp5X4xmH9LsQ40q3Z09nw9m/2nkfVN/urM9rT8hmn1Isw818n4Zzb7TqOrT
96KrNPtjNPuQZh/S7EONqhOn9QAPZh9q5H1T/0U9/vd9oZj9U6fj97Ro9inN
PtXI+2U0+5Vmv9LsU43q5vT1zGj2K81+pdmXGnmfjWZ/alTpr1uv2W+j2aca
VVrP3rEkmP1Ks1818v6rz0oLoGYf1invpmv2Yz1Qj9v+aLqxWcx+ptnPmnk/
frE4HSfvj2Z/a+Z9N5p9TrPPNav08pmo2Xf1nPvrf6LZ/5p5H45mH9Tsg82q
ng7HtzT789Jg9sVmdURaQDT7s075c5FmH9Zczoxm/9Tsm828P0ezf2r2Tc2+
2ax+vzTd4WD2yWbed18qTk/H0Zr9Vl9ar6vTNPusZl2JZl/V7KvNvP/qlK9j
lxWzD+tPpCcsmn1Xs+82836r03F6pWbfjGY/blYvppe/Zv/Ue3MgBrM/N/M+
qk9KC4hmH9XXp1/H0Oyn0ezjzSrl02rNPqrfnv7C5cXslzodH2do9k3N10uj
2f+bef/U2+qbt1V3fy+va+aDZj/VzAvNvqqZD9Fcf2jmfVUzDzT7qua81+yv
0VzPaObzP5rrG5rrG828/0ZzvaOZ50c061cz78uaeaLZj1cUMz80+7Jmnmj2
Zc18ieb6SjPvz5r5o9mnNfMomusxzbxfa+aVZj/WzKNorte08j6smVcri9mP
o7m+o7m+o7meo7me08rzTrNvR3O9R3O9p5Xnn2a/1szDaK7/tPK+rZmXmv1b
My+juf6juf7Tyvu6Zn5q9nfNPNXs75p5uqqY/VwzXzX7umbeRnM9qpX3b808
1uzjmvms2cejuT7VyvNZs69r5q9mf9fMX83+vDqY61+tPJ81+7RmXkdzPayV
92vNPNfs15r5rtmvNfNes19r5rvmeNfM+2iuz7XyvqzpgTXF7MuaPtDsz5oe
0OzL0Vzva+Ve0OzLmn7Q7M+aftDs05qe0OzXmr6I5nqj5npjK+/j0Vx/bOUe
WVvMPq7pE80+rumVaK5ntvK+Hs31zVbuG80+rukdzX6u6R3Nfh7N9dJW7iHN
fq7pI81+vq6YXtLs65p+0uznmp6K5vptK+/rmt7S7O+a3tLs55r+0uRnNNeL
W7nPNPt7NNeHNdeHW+X3ILum5zQ9F831ZM31ZM3141buP03/aXpP03ua3tP0
nqb3NH0XzfVnzfVmzfXmVu49Td9pbo6m5zQ9p+m5DcX0XDTXt9u57zR9p+k7
Tc9pek7Tc5qe0/Sbpt80/abJnWiut7dzv2n6TdNvG4vpL01/afpK01eavtL0
lKanovk8oJ37StNXmn7S9JOmnzT9pOknTT9p+mlTMf0UzecVms8r2rmvNH2l
6SlNT2l6StNTmp6K5vORdu4pTU9peiqaz0vaua80faXpK01PbS6mpzQ9pekn
TT9p+knTT5p+0vSTpp80/RTN5zvt3FOantL0k6afNP20pZh+0vSTpp+i+Xyp
nXtK00+aftL0k6afovm8SvN5VTv3laavNH2l6StNX2n6KZrPwzSfh2k+D2vn
vtL01dZi+krTV5q+iubztXbuK01PaXoqms/jNJ+/tXNvaXpL01ua3tL0laav
NH2l6StNX20L5vO/du4tTW9F83lgO/eXpr80vaXpLU1vRfN5oubzw3busWg+
P2znPtP0mabPovm8sZ37TNNnmv7S3d/T7JrzTdNjmvNO01ua80/TX5rzMJrP
QzWfh7Zzr2nOT02/ac5TTc9pztdoPm9t597TnL/RfB6r+fxV8/lqO/ei5vzW
9KPmPNf0oeY81/Si5nzX9KPmvNf0pOb81/SlZh5oelMzH/qK6U/NvND0p2Z+
aHpUMz80faqZJ9GsB91+1cwbTc9q5o+mbzXzSNO7mvmj6V/NPNL0sGY+afpY
M680vayZX5pe1syzaD7v7/a0Zn5p+jqa7wd055umv/uLmXeaHtfMP02fa+ah
ptc181DT75r5qOl5zbzU9L1mPmr6XjMvNb2vmZ+a/o/m+xCjeb5q9gPNvNXs
C5r5q9kfNPNYs09o5rNmv9DMa82+oZnXA8XsH5r5rdk3NPNbs39o5rlmH9HM
d81+opn3mn1FM/+j+X6K5vsoo3m/0fSAZt/R9IBm39H0gWb/0fRCNN930Xzf
ZTTvS5qe0OxLmr7Q7E+a3tDsU5r+0OxXuvt7ir3m+zijuU80faLpE02faPpE
0yea/tD0h6Y/NP2h6Q9Nf2h6Q9Mbmn7Q9IOmHzT9oOkHTT9o+kHTD5p+0PSD
ph80/RDN96VGc09oekLTE5qe0PTEYDE9oemJaL5/NZr7QtMXmr7Q9IWmLzQ9
oekJTU9oekLTE5qe0PSEpic0PaHpCU1PaHpC0xOantD0hKYnND0RzffZRnNf
aHpC0xOantD0g6Yfovm+3GjuiZ3F9ISmJzQ9oekJTU9oekLTE9F8P28094Wm
LzR9Ec339UZzb2h6I5rv843m/tD0h6Y/NP2h6Q9Nb0Tz/cBuf2j6Q9Mfmv7Q
9Ec03yfs9oimRzQ9oukRTY9oekTTI5oeGSqmRzQ9oukRTY9oekTTI5oe0fSI
pkc0PaLpEU1vRPN9zG5/aPpD0x+a/tD0h6Y/NP2h6QtNX2j6QtMXmr6I5vuk
3d7Q9Ibm6dT0hqY3dPf3zLqmLzR9oekLTV9o+kLTF5q+0PSFpi80faHpC01f
aPoimu/bdnsjmu/Par4/2+0RTY9oekTTI5oe0fSIpkc0PaLpEU2PaHpE0x+a
/tD0h6Y/NP2h6Y/hYvojmu8Td/tD0x+a/tD0h6Y/NP2h6Q9Nf2j6I5rvN3d7
RNMjmh7R9IimRzQ9oukRTY9oekTTI5oe0fSIpkc0/aHpD01/aPpD0x+a/tD0
hqY3RorpDU1vaHpD0xua3tD0hqYvNH0RzffVu72h6QtNX0TzffZuX2j6QtMX
mr7Q9IWmLzQ9oemJaL5P3+0LTV9o+kLTE9F8H7/bF5q+0PSFpi80faHpC01f
RPN9/25vNIrpDU1vaHpD0xua3tD0hqY3NL2h6Q1Nb2h6Q9MXmr7Q9IWmLzR9
oekLTV9o+iKa34fo9oamNzS9oekNTV9o+kLTF5q+0PSFpi909/cges3va3R7
Q9Mbmt7Q9IamNzS9oekNTW9oekPTG5re0PSGpi80/aDpB00/aPpB0w+aftD0
g6YfNP2g6QdNP2j6QdMPmn7QjHNNP2j6QdMPrWJ6QdMLml7Q9IKmFzS9oOkF
TS9oekHTB5o+0PSBpg80faDpA00faPpA0weaPtD0gaYPNH2g6QNNH2j6QNMH
mj7QHK+aPtD0gaYP2sX0gaYPNH2g6QNNH2j6IJrf9+r2QjS/n9XtBU0vaHpB
0weaPtD0gaYPNH2g6QNNH2j6QNMDmh7Q9ICmBzTzXzP/NfNfM/8181/zdtLM
f82818z70WLmvWbea+a9Zt5r5r1m3mvmvWbea+a9Zt5r5r1m3mvmfTRz7Td5
/mvmv2b+a+a/Zv5r5r1m3mvmvWbea+a9Zt5r5r1m3mvmvebh0sx7/X//u/cf
////AV/wnhg=
         "], {{{}, {}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwl2TMUIAAOQMG1bdu2bdu2bdu2bdu2bdu29/bm3hXz0qb5TZKwUftK7QIF
CBAgICuCBwhwictc5ALnOcdZznCaU5zkBMc5xlGOcJhDHOQA+9nHXvawm13s
ZAfb2cZWtrCZTWxkA+tZx1rWsJpVrAz+/32Xs4ylLGExi1jIAuYzj7nMYTaz
mMkMpjONqUxhMpOYyATGM46xjGE0oxjJCIYzjKEMYTCDGMgA+tOPvvShN73o
SQ+6042udKEznehIB9rTjra0oTWtaEkLmtOMpjShMY1oSAPqU4+61KE2tahJ
DapTjapUoTKVqEgFylOOspShNKUoSQmKU4yiFKEwhShIAfKTj7zkITe5yEkO
spONrGQhM5nISAbSk460pCE1qUhJCpKTjKQkITGJSEgC4hOPuMQhNrGISQyi
E42oRCEykYhIBMITjrCEITShCEkIghOMoAQhMIEISAD+BQsQ4D/85Q+/+cVP
fvCdb3zlC5/5xEc+8J53vOUNr3nFS17wnGc85QmPecRDHnCfe9zlDre5xU1u
cJ1rXOUKl7nERS5wnnOc5QynOcVJTnCcYxzlCIc5xEEOsJ997GUPu9nFTnaw
nW1sZQub2cRGNrCedaxlDatZxUpWsJxlLGUJi1nEQhYwn3nMZQ6zmcVMZjCd
aUxlCpOZxEQmMJ5xjGUMoxnFSEYwnGEMZQiDGcRABtCffvSlD73pRU960J1u
dKULnelERzrQnna0pQ2taUVLWtCcZjSlCY1pREMaUJ961KUOtalFTWpQnWpU
pQqVqURFKlCecpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQl
C5nJREYykJ50pCUNqUlFSlKQnGQkJQmJSURCEhCfeMQlDrGJRUxiEJ1oRCUK
kYlERCIQnnCEJQyhCUVIQhCcYAQlCIEJREAC8C+o/vnLH37zi5/84Dvf+MoX
PvOJj3zgPe94yxte84qXvOA5z3jKEx7ziIc84D73uMsdbnOLm9zgOte4yhUu
c4mLXOA85zjLGU5zipOc4DjHOMoRDnOIgxxgP/vYyx52s4ud7GA729jKFjaz
iY1sYD3rWMsaVrOKlaxgOctYyhIWs4iFLGA+85jLHGYzi5nMYDrTmMoUJjOJ
iUxgPOMYyxhGM4qRjGA4wxjKEAYziIEMoD/96EsfetOLnvSgO93oShc604mO
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
3OQiJznITjaykoXMZCIjGUhPOtKShv8CNEvtig==
               "]]}]}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwl2UMUGNgOANCpbdu2bdu2bdu2bdu2bduYqe32356/uCeLt07ykiRo2K5i
2wD//PPPhWD//PM3BiQQgQlCUDz9E5wQhCQUoQlDWMIRnghEJBKRiUJUohGd
GMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c
5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrU
pBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rRng50pBOd6UJXutGdHvSk
F73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGeCUxkEpOZwlSmMZ0ZzGQW
s5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nCVraxnR3sZBe7
2cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc5BKXucJVrnGdG9zkFre5
w13ucZ8HPOQRj3nCU57xnH/5jxe85BWvecNb3vGeD3zkE5/5wle+8Z0f/OQX
v/nD3+QPQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4
xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzk
JR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSl
HvVpQEMa0ZgmNKUZzWlBS1rRmjb8Ld7taE8HOtKJznShK93oTg960ove9KEv
/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84SnPeM6//McLXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84W/j
D0BAAhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJ
QEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlA
QQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBD
GtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH/0ZwEAG
MZghDGUYwxnBSEYxmjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zGUe81nAQhax
mCUsZRnLWcFKVrGaNaxlHevZwEY2sZktbGUb29nBTnaxmz3sZR/7OcBBDnGY
IxzlGMc5wUlOcZoznOUc57nARS5xmStc5RrXucFNbnGbO9zlHvd5wEMe8Zgn
POUZz/mX/3jBS17xmje85R3v+cBHPvGZL3zlG9/5wU9+8Zs//P30ByAggQhM
EIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwS
kpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGK
UozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rS
jOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM
4YxgJKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozl
rGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc
4CSnOM0ZznKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM5/zL
f7zgJa94zRve8o73fOAjn/jMF77yje/84Ce/+M0f/g78AQhIIAIThKAEIzgh
CEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlI
SSpSk4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJ
KUpThrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkr
WtOGtrSjPR3oSCc604WudKM7PehJL3rTh770oz8DGMggBjOEoQxjOCMYyShG
M4axjGM8E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlaz
hrWsYz0b2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOG
s5zjPBe4yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOf/yHy94ySte
84a3vOM9H/jIJz7zha984zs/+MkvfvOHv8u+AAQkEIEJQlCCEZwQhCQUoQlD
WMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa
0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nK
UZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rR
ng50pBOd6UJXutGdHvSkF73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGe
CUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4N
bGQTm9nCVraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc
5BKXucJVrnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnH/5jxe85BWvecNb3vGe
D3zkE5/5wle+8Z0f/OQXv/nD30V/AAISiMAEISjBCE4IQhKK0IQhLOEITwQi
EonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKS
icxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJ
ylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onO
dKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclM
YSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxh
K9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOEq
17jODW5yi9vc4S73uM8DHvKIxzzhKc94zr/8xwte8orXvOEt73jPBz7yic98
4Svf+M4PfvKL3/zh75EvAAEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd6URnutCVbnSn
Bz3pRW/60Jd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcG
M5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc7
2cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOcD/b/G/r/AAKd77A=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             AbsoluteThickness[1.6], 
             GrayLevel[0.5]], 
            LineBox[{2002, 2003}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        AxesOrigin -> {0, 0}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> 1, Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
           FormBox["\"Recall\"", TraditionalForm], None}, {
           FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.5], 
          AbsoluteThickness[1], 
          AbsoluteDashing[{1, 2}]], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
         "PointLegend", DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"PointLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"positive\"\>", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{}, 
        GraphicsComplexBox[CompressedData["
1:eJx123uwnGV9wPFMhqGMw1BKKU1RRLyVWkrRyTAMw/AqouIFualIRYgINKUp
pjRixKAiIlqK3C8F5A4hBAgQMWKMNJAEkkAg93tyTpKTk92zu8cUERFxuu/z
ffb5TvfX5h/moyc5e3bf93m+v2f3HHLO1049b+yYMWNW/smYMfV//78/0/ed
+LbLHjy5+t+eUPz7cXdcM/+NiX3//+TiV/Yfe+Ihr0zp+/qpxe856MgVX3nP
pX1//7vFc/d76m9Pmfu9vn/v+8VDB5x04e4dP+j7939Y/Kdvbzx+3T5X9X2/
q4uPOvjyVz941DV93//a4ieu26f+F6q99hh72YffdXLVbx7f9cWLbvjSMU8v
vKGYx3tj8cabHvryjzbcVMzjv7l49JbXvn3G6C3F/Dy3Fu9x23F3/80etxXz
891e/Ff1l4+7o5if9yfFh9+5adviv7uzmJ//ruJD0gO+u5jnQx92Sv0T39P3
fOj6ux105L19z4/+yGl7jb/iw/f1PV/606seO779qfv7nj/9+fTngb7nU09Y
8+Z5885+sO/51Recfu/F77tget/zrb++7oQrr57yUN/zr79zRv03ZvS9Hg8X
d1/b7gN6uO/1mVl8Y7o8Zva9Xo9kTwjm5Xqk2nvPy+dPOGJiMK/vo8Uz6qvr
Ic3r/Vjx7C1/P/LWk5rXf1bxvLPrJ1BzPTxefO7kY/cc/qrm+tD1T9v9kYu5
Xp4o7r4Y3VdEc/3o33ywfkSa6+nJ4m9edNVfz5mqub70H59MP2Ax19vs4vqn
PfhyzfWn668+ba+fFnM96h9PqS8QzfWp/7x+OPs9Vcz1qm9Nt7fm+tXp5Tzo
Z8Vcz7q+ek+/V3N960PnTK2foWKud/3o60sveeYRzfWvP5QuiJ8Xcz9o/nnN
/aHrq7v7jBZzv+hn36j/gub++UXxJ46edP9zH9fcT/rF7qN/fanm/ppbfAoX
RDH3m05P5xrN/fbL4jPTD6C53/TgtL2XPT+guf/mFZ/PDdR3P+rutdm9QDX3
56+K0+01WXO/6t/Wl89rmvv3meJv1U/PJZqHo9nV/iuvL5ODud/1R+vd5jjN
/a/ru2X8FZr1QL8wUD9hmvVBd7+4+zfmF7Ne6BPTA9KsH/Ort11x3D0nHzol
+Nr56QIrZn3RaTlZoVlv9F/Ut/P+zxaz/uh0O52uWY8027PmctSb68tpk2a9
0unlPPi5YtYvfU664DTrme7ePPUdVMz6prsXV/cF1Kx3C/L1MTX4A+kG1ayH
elL6hpr1Uc/qfvWqxzTrpU4v3+4F1T5XPjc4+ahpwaynC4vTwxuvWV/1N+rl
8eKF+Xr5bjDrr2a50qzH+g/1cvGmZn1eVJxu12M167VOl/dli6ofHf/u6054
7/eCWc/1gvTyadb3Rfn1+n5w+vZ7Pl/M+q8/2V29152g2Q90ffVedJVmf9Dd
xa6+gYvZL/Sf1bf7vi8Us3/odPmeptlP9M0phzX7i05fvk6z3+i0/L99cTH7
jz4rbSCa/Uin5e1uzf6kt9e36zbNfrWkOF1e79PsXzo9PRM1+5me+XD9Z0l1
1cJznvjiYT8IZr/T9d10fFuz/y0tPiJtMJr9UKfl6iLN/qjJF81+uTTfrz8M
/t3S9ACL2U9fLE5Px9Ga/VVfWm+n0zT7rWY70+y/Oi3XY18qZj/WH0tPmGZ/
1un2uFKzX+sl6eXX7N96b26QYvbzZdXVH79v+cTx/17M+vQfwSelDWxZdc3z
23dPPebHwfSAvj6Nn5o+0Gl5XqXpBf2X6Ru8XEw/6HR7nKHpCc14qekLvbV+
OFt0ntqLWS80vaFZPzT9oVlPND3ySl5vrw1mvdH0imb90fSLZj3S9IxmfdL0
jWa90vTO8mLWL03/LK8++d796i0gmPVN00ea9U7TR5r1T9NLmvVQ00+a9VHT
U5r1UtNXmvVzRTG9pVlPNf2lWV81PaZZbzV9tiLvp9cHsx5r+k2zHmt6TrM+
r6iWnPuh//zM+28Ipvc067em/zTr+cpielCzvq/M+8eNwfSiZv1fWX36gVNn
fO4DNwXTk5r9QdOXK/N+cHMw+4emPzX7iaZHNfuJpk81+4umT1dVLw5d9PSZ
h98SzP6j6VfNfqTpWc3+pOnbVXl9vzWY/UvTv5r9TNPDmv1Nsxxq9jtNH2v2
v9XF9LJmP9T0s2Z/1PS0Zr/U9LRm/9T0tWY/1fS2Zn/V9Pfq6sT337C4e8kH
s/9q+lyzH68pptc1+6+m3zX775q8f98WTN9r9mdN32v2a03va/ZvTf9rLk9N
/2v2d808sLaY/V4zH2j2f828oOkBzfyg6QPNPKHpBc18oekHTU5pekIzf2j6
Yl217PzZ6ycdeXswvaHpDU1vaHpD0xuavtD0haYvNH2h6Yt1uf/uKD5p+srG
lKN/Ekx/aPpD8+01/aHpD01/rC+mPzS9sT731Z3Frwy/+sa0Y+8Kpkc0PaLp
EU2PaHpE0yOaHtH0iKZHNLmg6RFNj2h6ZEMxPaLpEU2PaHpE0yOaHtH0h6Y/
NP2h6Q9Nf2h6Y0Pux7uD6Q9Nf2j6Q9MfG4vpD01vaHpD0xeavtD0haYnND2h
6QlNT2h6QrM8a3pC0xOafthUTD9sqg7dvy6oaHpC0xOantiU+/OeYPpC0xOa
ntD0hKYnND2h6QlNT2h6QtMTmp7YXExPaHpC0xOantD0hKYnND2xufqn8Qd2
l/Ro+kLTF5q+0PSFpi80PaHpCU1PaHpiSzE9oekJTU9o+kHTD5p+0PSDph80
/aDpB00/aPpB0w+aftD0w9Y839xbXA8Dn3pAM4/cF0xvaHpja9Xsbi6fnR5N
f2j6Q9Mfmv7Q9IemP7bm+ef+4vrRnzojmj7R9ImmTzR9oukTTZ9oemSgmPVG
0yea9UbTKwN5HnsgmPVI0zOa9Wmg+uen/uHRL8yMpncG8nz1YPHM1Rd0vyKa
9UzTR5r1TdNLmvVuIM9X04PpKc16OFC1Xrtk3lmzouktzXqp6S/N+qnpLc16
qukvzfqq6bGBPL88VHzYAfUzGs16rOk3zfo8kOeRGcH0nWb91vSeZj0fLKb/
Bqt/OfL2l86frenph4u7F0f3FYtmP9D0o2Z/0PSiZr/Q9ONg7uOZxZ2L526+
cE40+4umNzX7jaY/NfvPYO7vR4LpU81+pOlVzf6k6VfNfqXpWc3+NVgdfsvS
7hUfTe9q9jdN/2r2O00Pa/Y/TR9r9kNNL2v2R00/bytmv9T0tGb/3JbnjUeD
6W3N/qrp723V1+ZsbF88N5r9V9Pnmv1Y0+ua/VnT75r9eluejx4rnrV2pLsi
RNP7mv1d0/+a/V4zD2j2f818oOkBzbyg6YNteX6YFcz8oOkHzTyh6QnNfKHp
C828oemH7cXMH5qe2F79+vU33/r2M9HMJ5q+0Mwrmt7QzC+a/tDMM5oe0cw3
mj7RzDvb83zxeDD9opmHNL2imY80/aKZlzQ9s70alzYozbyij3pHvSJFM29p
ekgzf2n6SDOPaXpJM59p+ml7ng+eKD6DDbKYXo1mvtP0145i+mtH9c1j3tm9
hTW9+2Qwfabpsx1VfRi/+Nxo+kzTZ5o+0/SYprc0vaXprR25x6PpL01/aXpL
01uavtL0laavNH2l6asdVX14vnQomt7S9JamtzS9pekpTU/tyPPG7GD6ake1
YVIKnmD6StNXmr7S9JWmr4by/BFNPw1Vv5927F0vD2vmk58G01eavtL0laav
NH2l6SdNP2n6SdNPQ9WBKQij6SlNP2n6SdNPmn7S9JOmn4by/BNNT2l6StNP
mn7S9JOmnzT9pOknTT9p+mmoql/tlY1oekrTU5qeGsrz2lPB9NXOYvpK01ea
ntL0lKandlZfIsCD6SlNT2l6StNTmp7amefLaPpK01eaftL0k6afNP2k6SdN
P2n6SdNPO6tvdae5tSOaefhnwfSVpq80PaXpqZ1VvVisnxRNX2n6StNXO/P8
rOtpZmM7mv7S9NfOPE/PKd7UTgNRMfOs/kO3XraORtNvmn4bLqbfhvM8/PNg
+k3Tb5p+0/TbcJXyYHI0PafpOU3PaXpuOM/b0fSdpu80fafpOU3PaXpO03Oa
nhuuUo7sjqbvhvP8/nQwvTdcfZkBq5j5Ppq+G64urbejV6PpPU3vaXpP03ua
3hvO5wm/CKb/NJePpuc0PafpuV3F9Jqm1zR9tqtKy+2UaHpN02uaXtP0mqbX
NL2m6bNd+bwjml7T9Jqm1zS9pum1XVVavl6Lpt80/abpt135/GVuMP2m6TdN
v+2qtlyYBuRizlui6TtN32n6TtNzu6o/1svL65rzk18G03eavtP0nabvNH2n
6blGlW7HqdH0WyOfb+h0O7yhOb+YF0zvNaqzGdCLOW+Ipgc1PajpQU0Panqw
UX2nfjrfjKYPNX3YyOcdvypOP960aHqxkc8boulHTT9q+rFRpW//luY84Jlg
+rJRDYymgTuY3tT0ZiPP57r3exA9Mz9H06OaHtX0qKZHNT2q6dFGtW/6HzTz
ejS92qjelf5CNP2q6ddGnvej6dlGdUT6Bpp5XH8k/YPzg+ndRp7X9SnpG2jm
92j6uFF9hQdQzLweTT9relnTy81ierlZ/Wv6gaLp52Y+D9DdF6f7Az5bzPwf
TW9rertZddF9QqLp7Wae53V3+Oo+YdH0uKbHm3nejqbPm1U3PrtPsGZejqbf
m9WzE+oX4Llg+l3T7808X+sVE+snXDMf622T0xMeTP9r+r+Z5+do5oFm9d9T
6xdMM19HMy9o5gXNvKCZFzTzQrMamy6IBcXMy9HMC80qffr0BM18G808oZkn
mtW70wUTzXzRzPOnTp8OXayZL/VH0wW0MJh5pJnnQ31auqCimVeaed6LZn5p
Vl/lAgxmXmnm+Sua+aVZ/Vu6QKOZR5p5XotmPmlW9fQwbu9FxcxjOn3a7zOa
eUvX9Xjg1Zr5S6dPc72kmbf0gsH6gn4+mHlppJj5SDMfjeR5LZp5STMvjVSr
6k9vfVYz3+kdu9MNU8y8p39Tf5ro5WjmLc28NZLnPZ22s31fKGZ+i2Y+G6nS
9nNyNPOaZj7TzGea+Wwkz3fRzGsjFR8H18xfOm0XyzXzVzTznmbe08x7I9XH
0g27uJh5TX8+3cDRzIcjeZ7T53GDFzPP6a+nG14zj0UzX45Uabnaf0kw86Vm
fhzJ81Q08+NIlZajz0UzT2rmyZE8H2k+bh7NvKmZNzXzpWa+HMnzUTTz5kiV
lpvVmnkomnlUM49qurFVzDzaqhbVy80BS4OZTzXzaCvPU3pNvdx8QTNf6Z3p
4+nRzLOtPD/p39a3+1rNPBXN/KuZf1tVun3HvRjMPNzK81I083GrSrfbF6OZ
l1t5ntJ8HFszX+l0+a/XzFv6E2kBf6mYeUufnhb0aObzVp7H9D+y4BczT+lv
pA1AMz/p9HS8Y1kw879m/tfM/608f+n0dJwZzflAK89jmo/3RnNe0Mrzl04/
3mbNPKZfqB/OO18uZh7T6+p/7izN/KV3pY+vauYx/buaW6M5z9CcZ7TK75n1
zH6kmbc0+1E05x+tPI9p9ptozkc05yOa849Wnt80+5NmXovmvKSV9y/N/KbZ
zzTjlGZ/i+b8pZXnPc1+ppn3lhezv0VzfqM5n9Gcz7TyvKjZH6M5v2nleTKa
4xDNeU4r76eaeVOzv2rmT81+G835kOY8qJ3nTc3+HM35TzvPn5r9WzOPavbv
aM6H2nleXVHM/q2ZTzX7dzTnS5rzpXaeX6M5b2rn/V0z32r2e808q9m/NfOs
Zv/WjBOa/Vwz32r252jOx9p5vl1ZzP6smXc1+7Vm/tXs35p5WLOfa+ZfzX4e
zXldO8/D0Zzfac7n2rkHNPOzpg8086+mB6I532vn+XhVMX0QzflfO8/L0ZwH
tnM/RHP+187ztaYnNPO0pi+iOS9s5/la0x+aeTua88V27hNNrmt6RTOfa/pF
M5+vDuY8sp37RjO/R3Ne2c79E835ZTvP99GcZ7ZzH2nmfU0vRXP+2c7zv6an
NPO/pq+iOT9t5/OAaM5L27nHojkvbefzAk2vac4P1hTTY5rzBE2fRXMe287n
DdGcx7Zzv2nOIzQ9pzmf0PSc5rxC03eanNX0nuY8Q9N/mvOKtcX0oOZ8Iprz
Y815cDv3o+Y8Q9OTmvMNTV9Gc3zRzucfmv6M5ny5nc9HNH2qOQ+J5jy6nftU
c16ie7+n2DO9qunVaM63O7lXNb2q6U9Nf2r6M5rz8U7uT01/RnMe3sk9qulR
TY9qcima8/RO7lFNj2p6dH0w5+2a83TNeXon96imRzX9qelLTV9q+lLTl5q+
1PRjNOf5mvP6Tu5LTU9qelLTk5qe1PSjph83FNOPmn7U9KGmBzU9qOlBTQ9q
ejCa9yM6uQ+jeX+ik3tR04uaXtRsN9G8P9HJ/ajpxWjev+jkftxYTD9G835G
J/dkNO9fdHJfavpS05eavtT0paYvNT2p6cVo3j/p5H7U9KOmHzX9qOlFTS9u
Cub9mU7uxWjer+nkXtT0oaYPNX2o6UNND2p6UNODmv7T9J+m/zS3azTvN3Vy
D2p6MJr3mzq5BzcX04Oa/tP0nqbvNH2n6TtNz2l6TtNzmp6L5v2vTu45Tb9p
ek3Ta9G8f9bJ/abpty3F9Jum3zS9pumzaN6P07yf1sn9puk3Tb9p+k3Tb5p+
0/Sbpt80T6em3zT9pum3rcX0m6bPNH2m6TNNn2n6LJr3EzXvH3Zyr2l6TdNn
mj7T9JmmxzQ9pukx3fs9zZ5ZjzR9plmPonm/s5N7TbNeafpNs35pek6znkXz
/mmv9zTrnab/NOufpv8066GmB6M5buitl5o+1Kyf0bx/2+tHzfqq6UnNeqvp
S836q+lLzfqr6U3NeqzpT816rOnLwWLWZ01vatZrTX9q1u9o3k/u9Wk07y+P
5vVe06+a9V/Ts5r9QNO3mv1B07ua/ULTv9G8/z2a9xNN/2r2F00Pa/YXTR9r
9htNL0fzfvto3o80Pa3Zn6J5f34097Zmv9L0t2b/0vT4tmL2M02fa/Y3Ta9r
9jtNv2v2P03Pa/Y7Td9r9r9oPk+g+TzBaJ4HNPulZj7Q7J+a+UCzn0bz+YPR
PC9o9lvN/KDZfzXzRDSfXxjN+7Nm3tDs15p5Q7N/a+YPzX6umT80+7tmHtle
zH6vmUc0+79mHtH0gGY+0fSBZl7R9IJmftH0g2ae0fSCZr7R9INm3tH0hGb+
0fSFZv7R9IZmHorm8yujuUc085KmTzTzk6ZXNPOUpl+i+bzMaJ63dO/3IHum
bzR9o+kZTc9oekbTM5qe0fSMpl80/aLpF02/aPpF0y+aftH0iqZXNL2i6RNN
n2j6RNMnmj7R9Ek0n2cazb2i6RVNr2i2K02vRPN5qNHcL5p+0fTLUDH9oukX
Tb9o+iWaz0+N5n7R9IqmVzS9oukVTa9oekXTK5pe0fRKNJ/v6vWLplc0vaLp
FU2vaHpF0yuaXtH0iqZPNH2i6RNNj0TzebVen2j6RNMnmj7R9MnOYvpE0yea
PtH0iaZPNH2i6RNNn2j6RNMnmv7Q9IemPzT9oekPTX9oekPTG5re0PSGpjc0
faHpC01faPpC0xeavtBcPpq+0PSFpi80fTFcTF9o+kLTF5q+0PSFpi80faHp
C01fRPP5yl5vaHpD0xua3tD0RjSfr+z1h6Y/NP2h6Q9Nf2j6Q9Mfmt7Q9Iam
NzS9oekNTW9oekPTF5q+0L3fy+uZvtD0haYvNH2h6YtoPq+q+bxqrz80/aHp
D01/aPpD0x+a/tD0h6Y/NP2h6Q9Nf2j6Q9Mfmv6I5vO4vR7R9IimRzT9oekP
TX9o+kPTH5re0PSGpjc0vdEopjc0vaHpDU1faPpC0xeavtD0haYvNH2h6QtN
X2j6QtMTmp7Q9ISmJ6L5PHWvLzR9oekLTV9o+kLTF5q+0PSFpi80PaHpCU1P
aHpC0xOanmgW0xOantD0hKYnND2h6QlNT2h6QtMTmp7Q9ISmJzQ9oekJTU9o
ekLTE5qe0PSEpic0PaHpCU1PaHpC0xOantD0hKYnND2h6QlNT2h6YqSYnojm
9wl6faHpC01faPpC0xeavtD0haYnND2h6QlNT2h6QtMPmn7Q9IOmHzT9oOkH
TT9o+kHTD5p+0PSDph80/aDpB00/aPpB0w+693sUPdMPmn7Q9EM0vz/S6wlN
L2h6QdMLml7Q9IKmFzS9EM3vr/T6QdMP0fx+S68nND2h6QlNT2h6QtMTmn7Q
9IOmHzT9oOkHTT9E8/s5vZ7Q9EQ0v6/T6wvN9qPpC01fRPP7PL3eaBfTG5re
0PSGpjc0vaHpDU1vaHpD0xua3tD0hqY3ojnu6fWHpj80/aHpD01vaHpD0xvR
/D5Urz80/aHpD01/aPpD0x+a/tD0h6Y/NP2h6Q9Nf2j6o1NMf2j6Q9Mfmv7Q
9IemPzT9oekPTX9o+kPTH5r+0PSHpj80/aHpD01/aPpD0x+a/ohmXf917hFN
j2h6RNMjmh7R9IimRzQ9orlcND2i6RFNj4wW0x+a/tD0h6Y/NP2h6Q9Nf2j6
Q9Mfmv7Q9IemPzT9oekPTX9o+kPTH5r+0PSHpj80/aHpD01/aPpD0x+a/tD0
h6Y/NP2h6Q/9f/+3/4////8A4wdV/A==
         "], {{{}, {}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwl2TMUIAAOQMG1bdu2bdu2bdu2bdu2bdu29/bm3hXz0qX7TZKwUftK7QIF
CBAgIIeCBwhwictc5ALnOcdZznCaU5zkBMc5xlGOcDj4//cc5AD72cde9rCb
XexkB9vZxla2sJlNbGQD61nHWtawmlWsZAXLWcZSlrCYRSxkAfOZx1zmMJtZ
zGQG05nGVKYwmUlMZALjGcdYxjCaUYxkBMMZxlCGMJhBDGQA/elHX/rQm170
pAfd6UZXutCZTnSkA+1pR1va0JpWtKQFzWlGU5rQmEY0pAH1qUdd6lCbWtSk
BtWpRlWqUJlKVKQC5SlHWcpQmlKUpATFKUZRilCYQhSkAPnJR17ykJtc5CQH
2clGVrKQmUxkJAPpSUda0pCaVKQkBclJRlKSkJhEJCQB8YlHXOIQm1jEJAbR
iUZUohCZSEQkAuEJR1jCEJpQhCQEwQlGUIIQmEAEJAD/ggUI8B/+8off/OIn
P/jON77yhc984iMfeM873vKG17ziJS94zjOe8oTHPOIhD7jPPe5yh9vc4iY3
uM41rnKFy1ziIhc4zznOcobTnOIkJzjOMY5yhMMc4iAH2M8+9rKH3exiJzvY
zja2soXNbGIjG1jPOtayhtWsYiUrWM4ylrKExSxiIQuYzzzmMofZzGImM5jO
NKYyhclMYiITGM84xjKG0YxiJCMYzjCGMoTBDGIgA+hPP/rSh970oic96E43
utKFznSiIx1oTzva0obWtKIlLWhOM5rShMY0oiENqE896lKH2tSiJjWoTjWq
UoXKVKIiFShPOcpShtKUoiQlKE4xilKEwhSiIAXITz7ykofc5CInOchONrKS
hcxkIiMZSE860pKG1KQiJSlITjKSkoTEJCIhCYhPPOISh9jEIiYxiE40ohKF
yEQiIhEITzjCEobQhCIkIQhOMIIShMAEIiAB+BdU//zlD7/5xU9+8J1vfOUL
n/nERz7wnne85Q2vecVLXvCcZzzlCY95xEMecJ973OUOt7nFTW5wnWtc5QqX
ucRFLnCec5zlDKc5xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbWxlC5vZ
xEY2sJ51rGUNq1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nE
RCYwnnGMZQyjGcVIRjCcYQxlCIMZxEAG0J9+9KUPvelFT3rQnW50pQud6URH
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
YhGTGEQnGlGJQmQi8V+fj/C9
               "]]}]}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwl2UMUGNgOANCpbdu2bdu2bdu2bdu2bduYqe32356/uCeLt07ykiRo2K5i
2wD//PPPhWD//PM3BiQQgQlCUDz9E5wQhCQUoQlDWMIRnghEJBKRiUJUohGd
GMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c
5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrU
pBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rRng50pBOd6UJXutGdHvSk
F73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGeCUxkEpOZwlSmMZ0ZzGQW
s5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nCVraxnR3sZBe7
2cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc5BKXucJVrnGdG9zkFre5
w13ucZ8HPOQRj3nCU57xnH/5jxe85BWvecNb3vGeD3zkE5/5wle+8Z0f/OQX
v/nD3+QPQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4
xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzk
JR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSl
HvVpQEMa0ZgmNKUZzWlBS1rRmjb8Ld7taE8HOtKJznShK93oTg960ove9KEv
/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84SnPeM6//McLXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84W/j
D0BAAhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJ
QEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlA
QQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBD
GtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH/0ZwEAG
MZghDGUYwxnBSEYxmjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zGUe81nAQhax
mCUsZRnLWcFKVrGaNaxlHevZwEY2sZktbGUb29nBTnaxmz3sZR/7OcBBDnGY
IxzlGMc5wUlOcZoznOUc57nARS5xmStc5RrXucFNbnGbO9zlHvd5wEMe8Zgn
POUZz/mX/3jBS17xmje85R3v+cBHPvGZL3zlG9/5wU9+8Zs//P30ByAggQhM
EIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwS
kpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGK
UozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rS
jOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM
4YxgJKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozl
rGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc
4CSnOM0ZznKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM5/zL
f7zgJa94zRve8o73fOAjn/jMF77yje/84Ce/+M0f/g78AQhIIAIThKAEIzgh
CEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlI
SSpSk4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJ
KUpThrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkr
WtOGtrSjPR3oSCc604WudKM7PehJL3rTh770oz8DGMggBjOEoQxjOCMYyShG
M4axjGM8E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlaz
hrWsYz0b2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOG
s5zjPBe4yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOf/yHy94ySte
84a3vOM9H/jIJz7zha984zs/+MkvfvOHv8u+AAQkEIEJQlCCEZwQhCQUoQlD
WMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa
0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nK
UZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rR
ng50pBOd6UJXutGdHvSkF73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGe
CUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4N
bGQTm9nCVraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc
5BKXucJVrnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnH/5jxe85BWvecNb3vGe
D3zkE5/5wle+8Z0f/OQXv/nD30V/AAISiMAEISjBCE4IQhKK0IQhLOEITwQi
EonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKS
icxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJ
ylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onO
dKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclM
YSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxh
K9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOEq
17jODW5yi9vc4S73uM8DHvKIxzzhKc94zr/8xwte8orXvOEt73jPBz7yic98
4Svf+M4PfvKL3/zh75EvAAEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd6URnutCVbnSn
Bz3pRW/60Jd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcG
M5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc7
2cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOcD/b/G/r/AAKd77A=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             AbsoluteThickness[1.6], 
             GrayLevel[0.5]], 
            LineBox[{2002, 2003}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        AxesOrigin -> {0, 0}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> 1, Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
           FormBox["\"Recall\"", TraditionalForm], None}, {
           FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.5], 
          AbsoluteThickness[1], 
          AbsoluteDashing[{1, 2}]], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
         "PointLegend", DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"PointLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7092235522284093`*^9, 3.709223637613293*^9, 
  3.709224625765812*^9, 3.7092247541681566`*^9, 
  3.709258192908743*^9},ExpressionUUID->"2a035e9a-bd7f-4dc9-a904-\
1ebe5a9a7d3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rocAreaMarkov", "=", 
  RowBox[{"cmMarkov", "[", "\"\<AreaUnderROCCurve\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709222324616194*^9, 3.709222329038447*^9}, {
  3.709222460536968*^9, 
  3.7092224644221907`*^9}},ExpressionUUID->"2140f3a5-5b8f-437e-8327-\
14ba296212e9"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"negative\"\>", "\[Rule]", "0.9019118894436976`"}], ",", 
   RowBox[{"\<\"positive\"\>", "\[Rule]", "0.9019118894436976`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7092235522834125`*^9, 3.709223637645295*^9, 
  3.7092246258168154`*^9, 3.7092247542201595`*^9, 
  3.7092581929387445`*^9},ExpressionUUID->"632c84a3-4f90-4ce6-8720-\
18eb77d4b65e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Logistic Regression (3.1)", "Subsection",
 CellChangeTimes->{{3.709221933426819*^9, 
  3.7092219418333*^9}},ExpressionUUID->"6e213ebf-67c6-412d-80f9-54eedd90e09a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cmLR", "=", 
   RowBox[{"ClassifierMeasurements", "[", 
    RowBox[{"lr", ",", "testsetLR"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7092221688142824`*^9, 3.709222207721508*^9}, {
  3.709222343933299*^9, 
  3.709222345890411*^9}},ExpressionUUID->"5c285b53-594a-489d-851c-\
7db76347a45c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"accLR", "=", 
  RowBox[{"cmLR", "[", "\"\<Accuracy\>\"", "]"}]}]], "Input",ExpressionUUID->\
"e77c259e-e290-4654-88ea-766e555691ba"],

Cell[BoxData["0.835`"], "Output",
 CellChangeTimes->{3.709223553491482*^9, 3.7092236388023615`*^9, 
  3.7092246269728813`*^9, 3.709224755418228*^9, 
  3.709258194026807*^9},ExpressionUUID->"e19c2cb2-8e52-4849-b025-\
fb779b58089b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"precLR", "=", 
  RowBox[{"cmLR", "[", "\"\<Precision\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709222213326829*^9, 
  3.7092222237424245`*^9}},ExpressionUUID->"3558ea3a-b9f2-426e-b72b-\
3d12aa062007"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"negative\"\>", "\[Rule]", "0.8291746641074856`"}], ",", 
   RowBox[{"\<\"positive\"\>", "\[Rule]", "0.8413361169102296`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7092235535034823`*^9, 3.709223638858364*^9, 
  3.709224626986882*^9, 3.7092247554292283`*^9, 
  3.7092581940358076`*^9},ExpressionUUID->"55b43017-386c-42c2-8802-\
8d118dc90cf1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"recLR", "=", 
  RowBox[{"cmLR", "[", "\"\<Recall\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709222254420179*^9, 
  3.7092222589294367`*^9}},ExpressionUUID->"a65d0be2-f419-452e-b345-\
cfde5bf09591"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"negative\"\>", "\[Rule]", "0.8503937007874016`"}], ",", 
   RowBox[{"\<\"positive\"\>", "\[Rule]", "0.8191056910569106`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7092235535164833`*^9, 3.709223638907367*^9, 
  3.709224626997883*^9, 3.7092247554422293`*^9, 
  3.709258194044808*^9},ExpressionUUID->"2296a6e1-6d00-48d6-8128-\
10fc6ce2aa12"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"confMtxLR", "=", 
  RowBox[{"cmLR", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709222260836546*^9, 3.709222262239626*^9}, {
  3.709222311659453*^9, 
  3.709222316743744*^9}},ExpressionUUID->"fbe1e1ce-9147-4dd8-acdb-\
7456fe19223a"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{0.9101230900301378, 0.7769628845919827, 0.4359282863104252}, {
   0.9335185044907688, 0.48604100333466, 0.003309927650978033}}, {{1., 0.42, 
   0.}, {0.9291764296714965, 0.8508203239672958, 0.6193556040495273}}}, {{0, 
   0}, {2, 2}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["864", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "864", "\" examples of \"", "\"negative\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.8291746641074856`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.8503937007874016`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.8396501457725948`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{864, " examples of ", "negative", " correctly classified"}], 
         Row[{"Precision = ", 0.8291746641074856}], 
         Row[{"Recall = ", 0.8503937007874016}], 
         Row[{"FScore = ", 0.8396501457725948}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["178", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "178", "\" examples of \"", "\"positive\"", 
             "\" misclassified as \"", "\"negative\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.1708253358925144`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.18089430894308944`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          178, " examples of ", "positive", " misclassified as ", 
           "negative"}], 
         Row[{"Column fraction = ", 0.1708253358925144}], 
         Row[{"Row fraction = ", 0.18089430894308944`}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["152", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "152", "\" examples of \"", "\"negative\"", 
             "\" misclassified as \"", "\"positive\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.15866388308977036`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.14960629921259844`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          152, " examples of ", "negative", " misclassified as ", 
           "positive"}], 
         Row[{"Column fraction = ", 0.15866388308977036`}], 
         Row[{"Row fraction = ", 0.14960629921259844`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["806", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "806", "\" examples of \"", "\"positive\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.8413361169102297`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.8191056910569106`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.8300720906282183`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{806, " examples of ", "positive", " correctly classified"}], 
         Row[{"Precision = ", 0.8413361169102297}], 
         Row[{"Recall = ", 0.8191056910569106}], 
         Row[{"FScore = ", 0.8300720906282183}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1016", "\" example\"", "\"s\"", "\" of class \"", "\"negative\""},
            "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.8503937007874016`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1016, " example", "s", " of class ", "negative"}], 
        Row[{"Recall = ", 0.8503937007874016}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          TemplateBox[{
           "984", "\" example\"", "\"s\"", "\" of class \"", "\"positive\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.8191056910569106`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{984, " example", "s", " of class ", "positive"}], 
        Row[{"Recall = ", 0.8191056910569106}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1042", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"negative\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.8291746641074856`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1042, " example", "s", " classified as ", "negative"}], 
        Row[{"Precision = ", 0.8291746641074856}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "958", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"positive\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.8413361169102297`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{958, " example", "s", " classified as ", "positive"}], 
        Row[{"Precision = ", 0.8413361169102297}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{1.5, 
       FormBox[
        RotationBox["\"negative\"", BoxRotation -> 0.], TraditionalForm]}, {
      0.5, 
       FormBox[
        RotationBox["\"positive\"", BoxRotation -> 0.], TraditionalForm]}}, {{
      1.5, 
       FormBox["1016", TraditionalForm]}, {0.5, 
       FormBox["984", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["1042", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["958", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"negative\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"positive\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.7092235535834866`*^9, 3.709223638998372*^9, 
  3.7092246270518856`*^9, 3.7092247554952326`*^9, 
  3.7092581941018114`*^9},ExpressionUUID->"ab3d651a-6845-4041-96f0-\
1d7e3d86da1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rocLR", "=", 
  RowBox[{"cmLR", "[", "\"\<ROCCurve\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7092223182768316`*^9, 
  3.709222322882095*^9}},ExpressionUUID->"3e7e0e43-b01f-4d77-bee5-\
e8bc39a43ac1"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"negative\"\>", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{}, 
        GraphicsComplexBox[CompressedData["
1:eJx13HnQ3HV9wHEmw1DGYSillKYoIl6lllJ0MgzDMHwVUfFALhWpCIhAU0ox
pREjBhUR0VLkPgqIIRBCCBAOMWKMyE0IZ+77fs59dh9TRETE6f6+7+9+39P9
WP9xXhWePLv72+/n/fntpvue9pXjzpiwww47LP2zHXZo/vv/+8/OO0648IPv
OCb9X59avctOFz166oGT+/73KdVvufjwW4/Zb2rfPz+tetdLHt885eDpff/+
t6t/cMQ7rzzy3d/p+3nfrb70ydPu//z+3+v7+d+vvuyjt708edJ/9v15/1V9
+dNbt0879Id9f/4V1R9/9+7Nr9D3+1xV/ezpH/jvT7336r7f75rqT846bs5n
3ndt3+97XfVzA+c+fNIB1/f9/jdUH/Xeqxd1/4i+x3Nj9QtnPrj67INu6nt8
N1cfPXvpyNRDftT3eG+pfmnoldenH/bjvsc/o3q/PZpHNKPv+bi1+l8m7dX9
lW7te35mVjcP/hOzZvY9X7dVj3Z/uU/Pvq3v+bu9uvm3j5tze9/zOav6Xx/6
p3s+N3dW3/N7R/Xc5Wd1/4k7+p7v2dVjr56/8OR5s/ue/zvT7N0mv+XCO45J
/d5/z+ZP0Lw+c6r/7aCbnj/zQc3rdVd195ft/kaa129udee8BevPma95Pe+u
PuD6xd1HoHl976n+yvy17fMWaF7ve6vnrWx1H3HPpwZzPcyr/vVrb7z5zUc0
18d91RPzE6S5XvTBb2segeb6ub/6RJ7Qaq4n/fVD3959CJrr64Hq5s236HTN
9aabN9fiAc3192D1mrPzC1bN9ah/331zvDikuT5/Ur1XfoE116tuftrSEc31
+1D1F7ggqrme9Te6V+fKlub6/ml188uvPltzvevmalrb1lz/86vXtfMFV837
Qf+h++pvHNe8H35WnV/eKZqXU+eXb7vm/fJw9Re5oKt5/+gLmqf/Fc376efV
+emdqnk6dX76XtW83xZUbzgnv2Gqef/pPzYP/zXN+/EX1fnhTdM8HJ1//dc1
79eF1afwBqzm/au/1fzxb2jez7+szj9+uubH6fyvv6l5fz9SvWk8v8H73u+a
U/FXfe9/vVv+P/wq/X7izZc/+vrkYM4H/Y78D2jOC31g/hc054f+UP4Bj1Zz
nuhj8w/UnC/6S/wB1Zw3+t/zH6g5f3T3wXd/gceqOY90F91fSHM+6e7h0f0F
NeeV7r65u7+w5vzSj53aPIDHqznP9JLJzQPSnG96y5T8AKs57/T/TGse8OPl
9Z0SzHmoJ+Qn5Ilqzked6+lIzXmp35mfMM35qXNdLdKcp/rD+Ql9sprzVR+f
n2DNeau/zBNezfmr/yO/AJrzWDen4cRdnqrmfNa53j6lOa91c5rtdZnm/Na5
7p7XnOf6ic3NC/p0Nee7XtbU36c1573etj2/wNWc//o3TR2+qJkHOh8Huz1T
zXzQ+e19jGZeaPJaMz90fnu+rJkn+iP5AlpUzXzRn80XlGbe6DO4wKqZP/qr
+YLTzCOdL/c9nq1mPul8OX9GM68064Fmful8OS7XzDP9VHO57bm4mvmmVzSX
0+cWp5f2mHDUvi9NDWb+6cG8jmjm4eJyPkwL/m1zuazUzEudL4eJz1UzP3V+
uT+vmaea9UczX3V+uVZr5q3+WH6DPV/N/NUn5DecZh7rf+YNWM181l/Lb0jN
vNb54b7thWrmt84P5yTNPNesb5r5rvOvs14z7/UzzR/39hermf96VfPjTtb0
gB7O66GmD/TvGm58Mb1r74OWfOldFwSXLbNcj98O5vzQ9IXmPNH0heZ80fSG
5rzR9Ifm/NH0iOY80uSD5nzS9IrmvNL0y8vVnF+antGcZ5q+0Zxvmt7RnHea
/tGcf5oe0pyHmj7SnI+aXtKcl5p+WlLN+anpKc15qukrzfm6JC3Y/aG/P3bB
d6o5v74bTI8tSQN7Hn3O9m3fC+Z81vSa5rzW9Jvm/NbkheY81/Sd5nzX9N7S
as57Tf9pzn9ND2rO/6Xl/fv9YHpRMx80/aiZF5qe1MwLTU8uTX/+1pH7rtz1
0mDmiaY3NfNlaTlfLgumR5dVM380faqZR5pe1cwnTb9q5pWmZzXzS9O3mnm2
LB28z0WvvP/gy4PJE8280/SwZv5p+nh5NfNQ08ua+ajpZ8281PS0Zn4uL+/P
K4Lpbc181fS3Zt5qelwzfzV9rpnHml5fUc181vS7Zl5ren5Fuv/KXZsrMph5
rul9zXzX9L9m3mv2Ac381+SJpgc0+4KmDzT7w8pqekGzT2j6QbNfaHpCs29o
+kKzf2h6Y2U5z6+qfurqLxz68JNXB7OvaPpkZTnvrwlmn1mZ1l575xd/sOba
YPpFs+9o+mVVNf2i6ZdV5by9rnr8+le/eeL49cH0jaZvNH2j6RtN32j6RtM3
mr7R9I2mbzQ5oOkbTd9o+mZ1NX2j6RtN32j6RtM3mr7R9I2mbzR9s7rMnxuC
6R1N72h6R9M7mt7R9I6md9ZU0zua3lmTdrzx8Bl/t+ONwfSPpn80faPpGU3P
aHpG0zOantH0jKZnNMe1pmfWlHl9UzB9o+mbtdX0jaZvNH2j6RtNz2h6RtMz
mp7R9IymZ9amv2lerok3B9M3mp7R9IymZzT9oumXdaUPfhRMz2h6RtMzmp7R
9IymZ9alA25Zt2XRP9xSzTz/cTC9o+kdTe9oekfTN5q+0bz9NH2j6RtN36yv
pm80faPpG03faPpmfdo3D4wZ1cz/aPpH0zua3tH0jqZ3NL2zPu1/bDMBbw2m
fzT9o+kfTf9o+mdDNf2j6R9N/2h6Z0OZ19H0j6Z/NP2j6R9N/2j6R9M/mv7R
PF2a/tH0z4bUXP17HzSzmt7QHzp+50kXf/C2YHppYzW9pOklTS9peknTS5pe
0vTSxtI30fSTpo80faTpIU3/bEyfXHbvEe1P3B5MD2l6SNNDm0pfRXN+aXpJ
c55tSp/N/5lVTU9F00+a80/TU5rzcFM6dcUbZyw85Y5gektzXm4q/RZNj21K
Z50w87z3nDW7mt6I5rzV9JvmfNX0nOa81fSd5vzV9J7mPNb0n+Z81vSg5rze
lL666shLLpt6ZzX9Ek0/as53TU9qzntNX2rO/03pWyc2v9GcYPpTMx80Pbq5
9Mld1d1W714g0cyTzWX+zw2mZzXzRtO3mvmj6V3NPNL0r2Y+aXpYM480fayZ
T5pe1swrTT9r5pemnzena/K6pemXu6vJiWjmn6a/NfNQ0+Oaeajpc8181PS6
Zl5q+l0zPzU9r5mnmr7fUs181fS+Zt5qel8zfzX9r5nHmn1AM481+4FmPm8p
/XdPMPuDZn5r9gnNPNfsF1vSnGYbvjOaea/ZPzTzX7OPaHpAs59o+kCzr2h6
QbO/aPphS+nhe4PZZzR9odlvNP2g2Xe2VtMTmv1H0xeafUjTG1vTgxv+sfXm
A9HsS5oe0exPW0v/zgumVzT7laZfNPuWpmc0+5emZzT7mKZvNPvZ1rTwlGZg
R9M/mn1N00Oa/U3TR5p9TtNHmv1O00uafW9r2SfuC6anNPugpqe2pdOnHLbT
0Jej6attZX+Ipre2peb07h7h1fT8/cH0lqa3NL2l6a1tqRtH3UKKprc0vaXp
K00/afppW+n3aHpK01OantL0lKanND2l6SlNT21Lv3l/c0VG01eavtL0laaf
NP2k6SdNP2n6aVvZZx4IZjxq+knTT9vS18+99G/nT4umpzS9NFD2pWh6SdNL
ml7S9JKmlzS9pOklTS8NpD8+kA+0avanB4PpKU1PDaTmdNnnomj6aqDsS9H0
lqa3BlLz04/f+SfV7EvR9JimxzQ9pukxTV8NpB9ObQI9mt7S9JamtzS9pekt
TW9pekvTW5re0vSWprcGyj6o/7J5eXd/KJge0/SYpscGq+kxTY9pekzTY4Nl
H42mzzR9pumzwXRDvv2s2Uej6bfBlPNp759Ws49G03eDqdk+T5gZTe9p+k7T
d4Nln42m9wbTfvOnNe/4YPpP03+DZR+Opv80/TeY7nlt8fmP3B1NDw6W/TOa
PtT0oaYPNX2o6UNNHw6mD+TA+FkwvThY9t9o+nEw8XRo9lfdbEvdEyKYvhws
+2o0by9Nb2p6U9Obg+mx15tfIJr+HKqmPzX9qelPTX9qelPTm5re1PSlpi+H
yn7+82B6U9ObQ+ljh5x9++MfjaY/Nf05VPb7aHpU06OaHtX0qKY/Nf2p6U9N
f2r6cyg91736X1scTY9qenSo7OMLgulTTZ9q+nQoHcsADaZPh8p+r/PxsyKa
ftX0q6ZXh6vp0+Fyv+AX1SflN4RmX42mVzW9qulVTa9q+lTTp5o+1fSppk+H
0+bpu7zw9CbN/rswmF4dTmeyEFSzb0bTs5qe1fSspmc1PTucui3UDaJo+lbT
t5qeHS775S+D6VtN32r6djjl9WRKNL2r6V1N7w6X/TSa/tX07nD6bTNuX42m
fzX9q+nd4bJfPlL9jebtdr7m5YumjzU9PFL/3kTP7HPR9LKmlzW9rOllTS9r
enkkfbj5NPZwzb6omzqddHE0fa3pZ00/j5T9Mpp+1vTySHpmU/OGiaafNX08
UvZV3f1h3Z/4aDX7ZzQ9renpkXRUfoKi6WtNX4+U/TOavtb09Ui64tE80KrZ
F6Ppb01/a/p7JOX1bEk0Pa7pcU2Pa3p8pOyL+q+a3N7jsWr2QZ1z7QTN/qf5
uF8zPqLpf03/a/pe0/cjaX1z3K7T7HfR9L+m/0er6X9N/2v6X9P7mt4fTfl4
2OfxYPp/tOyT0fS+puc1/a7pd02/a3p9NJ2WB0w0va7p9dGyz0bT65pe1/S5
psc1PT6aurHVFFc1+7DuHu7dAyiafh8t+/IT1e/LwRdN34+W/VefnX+BaPp/
tOyb0ewDo2le96ctu1ezj0azH2j2gdGUj4Ptmn3yyer88CZFsw9o+l/T/5r+
Hy37pv5as96dF81+MFr2Uc36odlHo9kfRtMfmnx7Q7OvPhXMftGqZr9opTze
D4tm39DsG5p9Q7NvtMo+rPN4uFCz7+on8uWp2Xd1/vE7PV3NfhvNfqPZbzT7
jWafaaWPd7fFVUdGs9+0yn4czX7TSs3pe+6l0ew7rbI/R7PvtFI3VpsBG8z+
o9l/NPuPZv9plf1Z/0Uz7nd7Jpj9qFX2aZ2Ps+Oj2Z9aZb/W1+WvV2r2bZ3/
8VXR7F+tso9Hs4+1Ul6P3rqomv1cn5wXtmj2Nc2+1ir7uM45NiOa/a1V9mG9
tRl/W6LZ71plH342mH1Ps9+1Uj4O3hPNPtcq+3I0+51mv9Pl/4tCyi/3ZM1+
q+fe1fxHs89Gs+9p9j3NvjeWmtP6iHY0+59m/9Psf2NlH14czD44lg7MC1E0
++FY2Zd1zqNzo9kfNfvhWNmvNbcfNfuy/t3i/AQEsz9q9sexsl8/V51frkM0
+7a+oFlnp0ezf46V/VezHkWzn2r2U80+Olb2Z51zdMLzweyrmn1Vs5+OlX1b
fyS/4Jr9O5p9dizl4/gSzT6tn81vP82+HM0+PJZ24cCsZj/WR+cFIpp9eazs
w/qq/PX4aPZpzT6t2Z/Hyr6scz4ti2a/Hiv7cTT79Vj66/wLv1jN/qzz8Xei
Zp+OZj/XrA+afXss8fXYaPbvsbJ/643Nw92ge3/vsGfmUzT7ebvs05r5pdmv
NfMrmv1es9+3yz4ezb7fLvNPs39r5qFm39bMR81+rZmP0dxf0NxfaJd9XDM/
o7mfoLmfoLmfoLl/0C77/cvVzGPNPq+Zz5r9XTOPo7k/obkfobkf0S77fTT3
G9plvmv2f818j+b+RLvs+5r5r9nfNfNfs89Hc3+jXeb/kmr2fc381+z/mvke
zf2Sdrk/oJn/0dw/0dw/aZf7CZpe0Nxf0PSD5n6Bpg809w8081+z30dzv6Zd
emBpNfu+pgc0+7mmDzT7uKYHNPt0NPeLNPeL2qUfNPu3pic0+7imLzT7uKYn
orkf1S77+rJg7k+1S39o9ndNj2j2eU2faPb5aO5/tUuvRHM/rF32fU3PaPZ/
Ta9Ec3+rXfZ/Tc9Ec/+rXe4PaPpleTX3C6K5X6a5X9YuvaO5P6DpH839Ak3/
aO4XRHO/rV36SHM/QdNLmvsLmn7S3F/Q9JPmfoOmp1ZUc39B01ea+wWavtLc
P9D0luZ+gqanorn/2C73GzS9Fc39yU65H6G5/DX3JzT9Fc39zU65f7Gymj6L
5v5np9yfiOZ+aKf0nOZ+RTT3Szul9zT3LzQ9p7l/oek5zf0LTd9p8lrTe5r7
E9Hcv+3Uv8fZM/0Xzf3cTunBaO7vdkofavpQ03+a3ovm/nCn9F8094s7pQc1
PRjN/eRO6UNNH2r6UPPHafovmvvTndJzmp5bXU3PaXpO03OantP0mabHND0W
zf1xzf3xTuk1TZ9p+kzTZ9HcT++UXovm/rrm/nqn9Jym3zT9tqaaftP0m6bf
NL0Wzf18zf38Tuk5Ta9pek3Ta5pe0/Saptc0vabptWg+L+iUftP0mqbX1lbT
a9F8ntAp/abpN02/afpN02+aPtP0WTSfT3RKr2l6TdNrmnGl6bVoPt/olF7T
9Nm6avosms87OqXXovn8Q/N5Rqf0nKbnND2n6TdNr2l6TdNrml7T9Fk0n690
Sq9p+kzTZ5o+W19Nf2n6S9Nfmv7S9JemvzS9pektTW9peiuaz486pb80/aXp
L01/afpL018bqukvTX9p+iuaz7M6pcc0PabpMU2PafpL01+a3tL0lqa3NL2l
6StNX20MJtc1n5/1ekvTV5q+iubztF5fafpK01eavtL0laavovm8brz0lqa3
NL2l6S1NX+ne3wPtmfNH01ea80fTV5rzRtNbmvNH01+a80jTY5rzSdNjmvNK
02PRfL45Xs4zTa9pzjdNr2nOO02/ac4/Tc9pzj9N30Xz+et4OR81/ac5LzX9
pzk/NT2oOU83V9OHmvNV04ua81bTj5rzV9OTmvNY05ea81nTm5rzWtOf0Xx+
rfn8eryc75oe1Zz3mj7VnP+aXtWc/5p+jebz7PEyHzQ9q5kXmn7VzA9Nz2rm
STSfn4+X3tXMG03/bgnm8/bxMo80fayZT5pejubz+vEyvzQ9rZlfmn7WzDNN
T2vmm6avNfNO09ua+afpb8081PS4Zj5q+lwzLzW9rpmfmn7XzFNNv2vmq6bn
NfNW0/ea+bq1mt7XzFtN72vmr6b/NfNXsw9o5rFmP9DM52i+7zFe9odovu8x
Xua5Zr/QzHfNvqGZ95p9QzPvNftHNN8v6fWAZj/R9IFmX9H0gmZ/0fSDZn/R
9IRmn9G9vwfZM32h6QtNX0TzfZleb2h6Q9Mbmt7Q9IamNzS9oemNaL6f0+sP
TX9oekPTG5re0PSGpjc0vaHpDU1vRPP9oV5/aPpD0xua3ojm+0e9/ojm+0i9
Honm+0e9Ponm+0a9XtH0iqZXBqrpFU2vaHpF0yuaXtH0iqZXNL2i6RVNr2h6
RdMrmh7R9IimRzQ9oukRTY9oekTTI9F8P6vXI5oe0fSIpkc0PaLpEU2PaPpD
0x+a/tD0xmA1vaHpDU1vaPpC0xeavtD0haYvNH2h6QtNX2j6QtMXmr7Q9IWm
LzR9oekLTV9o+kLTF5q+0PSFpi80faHpC01faPpC0xeavojm+4G93hiqpjc0
vaHpDU1vaHojmu8T9vpD0x+a/ojm+4e9Honm+4a9HtH0h6Y/NP2h6Q9Nf2j6
Q9Mfmv6I5vuNvf7Q9IemPzT9oekPTX9o+kPTH5qXW9Mfmv7Qvb/X1jP9oekP
TW9oekPTG5re0PSGpjc0vaHpDU1faPpC0xeavtD0haYvNH0RzfdTe72h6Q1N
b0TzfVbN91d7/aHpD01/aPpD0xuavtD0hKYfNP2g6QdNP4xU0w+aftD0g6Yf
NP2g6QdNP2j6QdMPmn7Q9IOmHzT9oOkHTT9o+kHTD5p+0PSDphc0vaDpBU0v
aHpB0wuaXtD0gqYXNL2g6QVNL4xW0wuaXtD0gqYXNL2g6QVNL2h6QdMLml7Q
9IKmFzS9oOkFTS9oekHTC9F8v7zXD5p+0PSDph80/aDpB00/aPpB0w+aftD0
g6YfNL2g6YVWMN+f7/WDph80/aDpB00vaHpB0wuaPtD0gKYHND2g6QFND2h6
QNMDmh7Q9IBm/mvmv2b+a+a/Zv5r5r9m/mvmv2b+a+a/Zv5r5r/u/b2Fnpn/
mvmvmf+a+a+Z/5r5r5n/mvmvmf+a+a+Z/5r5r5n/mvmvmf+a+a+Z95p5r5n3
mnmumeeaea6Z55p5rpnnmnmumeeacauZ55p5rpnn7WrmuWaea+a5Zp5r5rlm
nmvmuWaea+a5Zp5r5rlmnmvmuWaea+a5Zp5r5rlmnmvmuWaea+a5Zp5r5nk0
f/+oN981810z3zXzXXOcaua7Zr5r5nunmvmume+a+a6Z75r5rpnvmvmume+a
+a6Z75r5rpnvmvkezbn26zLvNfNeM+81810z3zXzXTPfNfNdM981810z3zXz
XTPfNfNd83bSzHfNfNfM8/Fq5rlmnmvmuWaea+a5Zp5r5rlmnmvmuWaea+a5
Zp5r5rlmnmvmuWaea+a5Zp5r5rlmnmvmuWaea+a5Zp5r5rlmnmvmuebp0cxz
/af/u/8//u//C1nhcKA=
         "], {{{}, {}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwl2TMUIAAOQMG1bdu2bdu2bdu2bdu2bdu29/bm3hXzUqf4TZKwUftK7QIF
CBAgIIuDBwhwictc5ALnOcdZznCaU5zkBMc5xlGOcJhDHOQA+9nHXvawm13s
ZAfb2cZWtrCZTWxkA+tZx1rWsJpVrGQFy1nGUpYE//8Oi1jIAuYzj7nMYTaz
mMkMpjONqUxhMpOYyATGM46xjGE0oxjJCIYzjKEMYTCDGMgA+tOPvvShN73o
SQ+6042udKEznehIB9rTjra0oTWtaEkLmtOMpjShMY1oSAPqU4+61KE2tahJ
DapTjapUoTKVqEgFylOOspShNKUoSQmKU4yiFKEwhShIAfKTj7zkITe5yEkO
spONrGQhM5nISAbSk460pCE1qUhJCpKTjKQkITGJSEgC4hOPuMQhNrGISQyi
E42oRCEykYhIBMITjrCEITShCEkIghOMoAQhMIEISAD+BQsQ4D/85Q+/+cVP
fvCdb3zlC5/5xEc+8J53vOUNr3nFS17wnGc85QmPecRDHnCfe9zlDre5xU1u
cJ1rXOUKl7nERS5wnnOc5QynOcVJTnCcYxzlCIc5xEEOsJ997GUPu9nFTnaw
nW1sZQub2cRGNrCedaxlDatZxUpWsJxlLGUJi1nEQhYwn3nMZQ6zmcVMZjCd
aUxlCpOZxEQmMJ5xjGUMoxnFSEYwnGEMZQiDGcRABtCffvSlD73pRU960J1u
dKULnelERzrQnna0pQ2taUVLWtCcZjSlCY1pREMaUJ961KUOtalFTWpQnWpU
pQqVqURFKlCecpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQl
C5nJREYykJ50pCUNqUlFSlKQnGQkJQmJSURCEhCfeMQlDrGJRUxiEJ1oRCUK
kYlERCIQnnCEJQyhCUVIQhCcYAQlCIEJREAC8C+o/vnLH37zi5/84Dvf+MoX
PvOJj3zgPe94yxte84qXvOA5z3jKEx7ziIc84D73uMsdbnOLm9zgOte4yhUu
c4mLXOA85zjLGU5zipOc4DjHOMoRDnOIgxxgP/vYyx52s4ud7GA729jKFjaz
iY1sYD3rWMsaVrOKlaxgOctYyhIWs4iFLGA+85jLHGYzi5nMYDrTmMoUJjOJ
iUxgPOMYyxhGM4qRjGA4wxjKEAYziIEMoD/96EsfetOLnvSgO93oShc604mO
dKA97WhLG1rTipa0oDnNaEoTGtOIhjSgPvWoSx1qU4ua1KA61ahKFSpTiYpU
oDzlKEsZSlOKkpSgOMUoShEKU4iCFCA/+chLHnKTi5zkIDvZyEoWMpOJjGQg
PelISxpSk4qUpCA5yUhKEhKTiIQkID7xiEscYhOLmMQgOtGIShQiE4mIRCA8
4QhLGEITipCEIDjBCEoQAhOIgATgXxD985c//OYXP/nBd77xlS985hMf+cB7
3vGWN7zmFS95wXOe8ZQnPOYRD3nAfe5xlzvc5hY3ucF1rnGVK1zmEhe5wHnO
cZYznOYUJznBcY5xlCMc5hAHOcB+9rGXPexmFzvZwXa2sZUtbGYTG9nAetax
ljWsZhUrWcFylrGUJSxmEQtZwHzmMZc5zGYWM5nBdKYxlSlMZhITmcB4xjGW
MYxmFCMZwXCGMZQhDGYQAxlAf/rRlz70phc96UF3utGVLnSmEx3pQHva0ZY2
tKYVLWlBc5rRlCY0phENaUB96lGXOtSmFjWpQXWqUZUqVKYSFalAecpRljKU
phQlKUFxilGUIhSmEAUpQH7ykZc85CYXOclBdrKRlSxkJhMZyUB60pGWNKQm
FSlJQXKSkZQkJCYRCUlAfOIRlzjEJhYxiUF0ohGVKEQmEhGJQHjCEZYwhCYU
IQlBcIIRlCAEJhABCcC/wPrnL3/4zS9+8oPvfOMrX/jMJz7ygfe84y1veM0r
XvKC5zzjKU94zCMe8oD73OMud7jNLW5yg+tc4ypXuMwlLnKB85zjLGc4zSlO
coLjHOMoRzjMIQ5ygP3sYy972M0udrKD7WxjK1vYzCY2soH1rGMta1jNKlay
guUsYylLWMwiFrKA+cxjLnOYzSxmMoPpTGMqU5jMJCYygfGMYyxjGM0oRjKC
4QxjKEMYzCAGMoD+9KMvfehNL3rSg+50oytd6EwnOtKB9rSjLW1oTSta0oLm
NKMpTWhMIxrSgPrUoy51qE0talKD6lSjKlWoTCUqUoHylKMsZShNKUpSguIU
oyhFKEwhClKA/OQjL3nITS5ykoPsZCMrWchMJjKSgfSkIy1pSE0qUpKC5CQj
KUlITCISkoD4xCMucYhNLGISg+hEIypRiEwkIhKB8IQjLGEITShCEoLgBCMo
QQhMIAISgH+B9M9f/vCbX/zkB9/5xle+8JlPfOQD73nHW97wmle85AXPecZT
nvCYRzzkAfe5x13ucJtb3OQG17nGVa5wmUtc5ALnOcdZznCaU5zkBMc5xlGO
cJhDHOQA+9nHXvawm13sZAfb2cZWtrCZTWxkA+tZx1rWsJpVrGQFy1nGUpaw
mEUsZAHzmcdc5jCbWcxkBtOZxlSmMJlJTGQC4xnHWMYwmlGMZATDGcZQhjCY
QQxkAP3pR1/60Jte9KQH3elGV7rQmU50pAPt+d+Bti1taE0rWtKC5jSjKU1o
TCMa0oD61KMudahNLWpSg+pUoypVqEwlKlKB8pSjLGUoTSlKUoLiFKMoRShM
IQpSgPzkIy95yE0ucpKD7GQjK1nITCYykoH0pCMtaUhNKlKSguQkIylJSEwi
EpKA+MQjLnGITSxiEoPoRCMqUYhMJCISgfCEIyxhCE0oQhKC4AQjKEEITCAC
EoB/AfXPX/7wm1/85Aff+cZXvvCZT3zkA+95x1ve8JpXvOQFz3nGU57wmEc8
5AH3ucdd7nCbW9zkBte5xlWucJlLXOQC5znHWc5wmlOc5ATHOcZRjnCYQxzk
APvZx172sJtd7GQH29nGVrawmU1sZAPrWcda1rCaVaxkBctZxlKWsJhFLGQB
85nHXOYwm1nMZAbTmcZUpjCZSUxkAuMZx1jGMJpRjGQEwxnGUIYwmEEMZAD9
6Udf+tCbXvSkB93pRle60JlOdKQD7WlHW9rQmla0pAXNaUZTmtCYRjSkAfWp
R13qUJta1KQG1alGVapQmUpUpALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clH
XvKQm1zkJAfZyUZWspCZTGQkA+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc
4hCbWMQkBtGJRlSiEJlIRCQC4QlHWMIQmlCEJATBCUZQghCYQAQM+P+n2j/j
P/zlD7/5xU9+8J1vfOULn/nERz7wnne85Q2vecVLXvCcZzzlCY95xEMecJ97
3OUOt7nFTW5wnWtc5QqXucRFLnCec5zlDKc5xUlOcJxjHOUIhznEQQ6wn33s
ZQ+72cVOdrCdbWxlC5vZxEY2sJ51rGUNq1nFSlawnGUsZcn/fpgsYiELmM88
5jKH2cxiJjOYzjSmMoXJTGIiExjPOMYyhtGMYiQjGM4whjKEwQxiIAPoTz/6
0ofe9KInPehON7rShc50oiMdaE872tKG1rSiJS1oTjOa0oTGNKIhDahPPepS
h9rUoiY1qE41qlKFylSiIhUoTznKUobSlKIkJShOMYpShMIUoiAFyE8+8pKH
3OQiJznITjaykoXMZCIj/wUSnuyf
               "]]}]}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwl2UMUGNgOANCpbdu2bdu2bdu2bdu2bduYqe32356/uCeLt07ykiRo2K5i
2wD//PPPhWD//PM3BiQQgQlCUDz9E5wQhCQUoQlDWMIRnghEJBKRiUJUohGd
GMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c
5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrU
pBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rRng50pBOd6UJXutGdHvSk
F73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGeCUxkEpOZwlSmMZ0ZzGQW
s5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nCVraxnR3sZBe7
2cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc5BKXucJVrnGdG9zkFre5
w13ucZ8HPOQRj3nCU57xnH/5jxe85BWvecNb3vGeD3zkE5/5wle+8Z0f/OQX
v/nD3+QPQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4
xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzk
JR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSl
HvVpQEMa0ZgmNKUZzWlBS1rRmjb8Ld7taE8HOtKJznShK93oTg960ove9KEv
/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84SnPeM6//McLXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84W/j
D0BAAhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJ
QEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlA
QQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBD
GtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH/0ZwEAG
MZghDGUYwxnBSEYxmjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zGUe81nAQhax
mCUsZRnLWcFKVrGaNaxlHevZwEY2sZktbGUb29nBTnaxmz3sZR/7OcBBDnGY
IxzlGMc5wUlOcZoznOUc57nARS5xmStc5RrXucFNbnGbO9zlHvd5wEMe8Zgn
POUZz/mX/3jBS17xmje85R3v+cBHPvGZL3zlG9/5wU9+8Zs//P30ByAggQhM
EIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwS
kpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGK
UozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rS
jOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM
4YxgJKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozl
rGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc
4CSnOM0ZznKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM5/zL
f7zgJa94zRve8o73fOAjn/jMF77yje/84Ce/+M0f/g78AQhIIAIThKAEIzgh
CEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlI
SSpSk4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJ
KUpThrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkr
WtOGtrSjPR3oSCc604WudKM7PehJL3rTh770oz8DGMggBjOEoQxjOCMYyShG
M4axjGM8E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlaz
hrWsYz0b2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOG
s5zjPBe4yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOf/yHy94ySte
84a3vOM9H/jIJz7zha984zs/+MkvfvOHv8u+AAQkEIEJQlCCEZwQhCQUoQlD
WMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa
0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nK
UZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rR
ng50pBOd6UJXutGdHvSkF73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGe
CUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4N
bGQTm9nCVraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc
5BKXucJVrnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnH/5jxe85BWvecNb3vGe
D3zkE5/5wle+8Z0f/OQXv/nD30V/AAISiMAEISjBCE4IQhKK0IQhLOEITwQi
EonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKS
icxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJ
ylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onO
dKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclM
YSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxh
K9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOEq
17jODW5yi9vc4S73uM8DHvKIxzzhKc94zr/8xwte8orXvOEt73jPBz7yic98
4Svf+M4PfvKL3/zh75EvAAEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd6URnutCVbnSn
Bz3pRW/60Jd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcG
M5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc7
2cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOcD/b/G/r/AAKd77A=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             AbsoluteThickness[1.6], 
             GrayLevel[0.5]], 
            LineBox[{2002, 2003}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        AxesOrigin -> {0, 0}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> 1, Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
           FormBox["\"Recall\"", TraditionalForm], None}, {
           FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.5], 
          AbsoluteThickness[1], 
          AbsoluteDashing[{1, 2}]], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
         "PointLegend", DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"PointLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"positive\"\>", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{}, 
        GraphicsComplexBox[CompressedData["
1:eJx123uwXWV5gPFMhqGMw1BKKVIUEW9FSyk6GYZhGJYiKl6Qm4pUhIhAU5pi
SiNGDCoioqXI/VJA5J6EAAEiRoyRhhAghAC5cJKQ67nlnH323ueYIiIiTvf6
nm9/z3S/Lf8wPw3JOfus9b3Pu/bOgWd+7aSzJ0+aNGntn02aVP/7//tnzp7T
3nLxvSdU/9tTi/+w761XLn19Ws//P6P4xb0nH3fgizN7fv2s4nfvf9iar7z7
op7//rvFi/d69G9PXPy9nt/v+8XD+xx/3s6hH/T8/j8s/vO3NR66eo/Le/68
K4oPP+CSVz54+JU9f/5VxQ9fvUf9O/R8PdcUP3Xtl458bPm1PV/fdcWbrp/7
5R+9fH3P13tD8cSNr3771Ikbe77+m4p3ufno29+/y809388txX9d//J9b+35
/n5SfMhtmwdW/N1tPd/vT4sPTF/w7T3fvz74xPo7vqPn9dD1n7b/YXf2vD76
IyfvNuXSD9/V83rpT6978Jj2p+7uef3059M/9/S8nnpq3xtnLznj3p7XV597
yp0XvPfcOT2vt/76hmMvu2Lm3J7Xf2612y6TL/7wO0+oev2dU+vfYV4xP5/7
ijs/684XqPl5zS++Ll0ump/f/cX8uDQ/zweK59VX01zNz/fB4oVb/7755iOa
n/eC4iVn1C+Y5uf/UPFZM47adeSrmutB199N51sq5vp4uLjz4nd+AprrRf/2
g/VX1PXUYK6nR4q/ef7lf7Nolub60n96JH3DxVxvC4vr7/6ASzTXn65/9cm7
/ayY61H/eGZ9gWiuT/2X9Zez16PFXK/6pnR7a65fnX68+/+8mOtZ11fvKXdq
rm990KJZ9StUzPWuH3ht5YWP36+5/vWH0gXyi2LuB81vr7kfdH01d17RYu4P
/cTr9X+guV9+WfyJI6bfvezjmvtHP9f56l9bqbmfFhefyAVRzP2l08vZp7nf
flV8WvoGNPef7p+9+/NPb9fcj0uKz+GGKub+1J1rs3OBau7XXxen222G5v7V
v6svn1c19/Pjxd+qX54LNV+O5lT7r2Lud/3Rerocrbn/dX13TLlUcx7oZ7bX
L5DmfNCdX9z5L5YWc17o49IXpDk/9FVL0wVUzHmi03GxRnOe6L+qb9e9n+g5
X3S6XU7RnDea8au53PSW+nLZrDmPdPpxHbCs53zSZ6YLSnNe6c7NUd8hPeeX
7lw8nR/Ysmr3XS9ZOvXQacGcb08WfyDdgJrzTk9Pf6Dm/NMLOr963YOa81Cn
H99Ozfm4vDh9OVM056X+Rn3cXaA5PzXHzfL8/c8I5nzVf6xv/zc05+1Txen2
O0pz/up0+V6sOY/1k+nHozmfdfrtd326mPNaf7Jz2m44VnN+6/pqPP9yzXmu
O4dTfQMWc77rv6hv1z2fKea81+lyPFlz/usbUr5q5oFOv3yDZj7odFy/bUUx
80Kfng58zfzQ6Xi6XTNP9GB9+w1o5suzxelyeq9m3uj08kzTzB89/776H808
0vXdcExbM59WFh+aBoBmXul03JyvmV+avNDMM/37lekLKma+PVecvt0jNPNO
X1SPt9ma+acZL5p5qNPxOnlVMfNRfyy9QJp5uap6y6VH33HCQTOLub9nBafb
4zLNfNXPph//qmqPy5b1zzh8djDzV+/ODVPMPNbHpwGkmc/6mrQOaua1Tsfp
Os381m9Nf8ALxcxznS7/UzXzXbPuaea93lZ/OVt13qqKOQ80PaA5HzR9oDkv
NL2gOT80/aA5TzQ9oTlfNH3xYr5+vhvM+aPpD815pOmR1cWcT5o+0ZxXml7R
nF+rqx8d866rj33P94LpmdX5ev9+MOedpnc059/q6vLlZz78xYN/EEwPac5H
TR9pzktNL2nOzzX5/vphMD2lOV81faU5bzW9pTl/Nf2lOY81PaY5nzV9pjmv
Nb2mOb81/aY5z9cW03Oa813Td5rzXtN7mvNf03+aeaDpQc180PShZl5o+lAz
PzS9uK6YeaLpR8180fSkZt5o+lIzfzS9qZlHmv5cV13x8btWT5vy78HMK83x
pplfml7VzLOXiulXzXzT9Kxm3mn6VjPfNL2rmXea/tXMP03/auafpoc181DT
x5r52FdML2vmZV8+n/8jmJ7uq658enDnrCN/HMx87cvn51XB9Hdf9cn37FUf
ocHMY02fa+azptf78nl8TTDzW9PzmstZ0/ea+a7p/fXFzHtN/2vmv2YfWF89
e9aH/vMz77s2mD7Q7AuaXtDsD5p+0OwTmp7Q5NL6PI+uC6Y3NPuHpj82FNMf
mv7Q9IemPzT9oekPTX9o+kPTH5r+0PTHhurT95w073MfuD6Y/tD8cZr+0PSH
pj82FtMfmv7Q9MfGPJ9vCKZHNlbPDZ//2GmH3BhMj2j6Q9Mfmv7Q9IamNzS9
oRn/mt7Q9IamL14upi80faHpC01faPpC0xeavtD0haYvNH2h6QtNX2j6QtMX
mr7Q9MWmYvpC0xeavtD0haYvNH2h6QtNX2j6QtMXm/L8vSmY3tAc15re0PTG
puq49127onPEBNMfm4vpD01/bM7z6OZgekTTI5oe0fSIpkc0PaLpkc3V8+cs
3Dj9sFuC6RFNj2h6RNMjmh7R9MiWYnpE0yNb8vy9tfj4OWsbM4/4STC9oukV
Ta9oekXTK5pe0fSKplc0vaLpFU2vaHpF0yuaXtlaTK9o+kTTI5r+0PSGpje2
5n65LZj+0PSHpjc0vaHpDU1vaHpD0xua3thWTG9sq14ceeX12Uf9NJj+0PSH
pjc0vaHpDU1vaHpD0xua3tD0hqYvNH2h6QtNX2wv5vzQ9IbmPNH0h+Y80fTI
9tyntwdz3mh6RXP+aPpFcx5pemZ7ddDedZFEc15pekdzfm3P/XtH8T9N2a9z
hEXTR5rzTtNLmvNO00+a80/TT5rzUNNTmvNR01ea83J77uU7g+kvzXmq6THN
+dpfTJ9pzltNr2nOV02/9Vd1vH3qnmjOX03Pac5jTc9pzmdN32nOa03vac5v
Tf9pznNND2rOd00f9ud94a5gzn9NP2rmgaYnNfNB05eaeaHpTc386K/GOof5
Z+doev/uYPq0v6q/u5PmRTN/NP06UMw8Gsj9fk8wfauZV5re1cwvTf8OVP/8
6D888IX50cw3TR9r5p2mlzXzT9PPmvk3kPePe4Ppa8181PS2Zl4OVPNfOrfz
J0TT45p5qulzzXzV9Lpm3mr6XTN/NT0/kHt4TnHr1QuXnL4gmnmt6X/N/Nbs
A5p5PljMfqCZ54O5p+cWH7xP/YpGs08M5n6eF0wPaPYNTR9o9o/B6l8Ou2XV
OQs1fXxfMD2h2Vc0faHZXzS9odlnNP2h2W80PTJYdS7ezk80mv1H0yuafUjT
L5p9aDD3+Pxg+kazLw1W4xcs3nLeomj6ZzD3/P3B7FeaPtLsW5peGqwOuXFl
5wqOZv8azL37QDB9NVRMXw1VX1u0qX3B4mh6S9Nbmt7S9JamrzR9pekrTV9p
+krTV0O5jx8Mpq80fTVULVjf7Nxx0fTWUO7DBcH0laavhqrfvPbGm99+PJre
0vSWprc0vTWUe/GhYPpL019D1b7pwIimxzQ9pukxTY9p+kvTX5r+0vSXpr+G
i+kvTX9p+kvTX5re0vSWprc0vTWc+zma/tL0l6a/NP2l6S9Nfw1Xh7+9vkM1
vf5wMH2m6TNNnw1Xp3LgB9Nrmj4bzj0dTa9pek3Ta5peG66+eeQ7OrdQNP02
nPv4kWB6TtNzmp7T9JqmzzR9NlzVD69XnBVNr+3I/RpNr2l6TdNrml7T9Jqm
zzR9tqOqH66tHNb06sJg+k3Tb5p+0/Sbpt80vabpNU2v7ahenp4GfDD9puk1
Ta9pek3Ta5pe0/Saptc0vbYj97z+Q2dZf2Ekmp7T9NqO3Ps/C6bfNP2m6TdN
v2n6baTaLwVIND2n6TVNn2n6TNNnI3nfiKbXND2m6bGRqn711jai6bORvG88
WvwlgqeYfSCantP0nKbnND2n6TlNz41U3+rU7/qmZn/4eXF9cWycrun3aPpP
038jVV1fm9qa3l8UTB9q+lDTh5oe1PSgpv80vTdSbW6nIAym/0byPqD/2KmD
bRPR9KHmctT0oKb/RvJ+8YtgenC0mP7T9J+m/0arNO5mRNODo3lf0Wl87NTs
H48F04+aftT0o6YfR6svE8DB9ORo3m+i6UtNT45WF9XHyyua/eOXxen2mhlN
f2p6czTvF9H0pqY3NX05WqXb5dVoelPTm5re1PTlaN5fFgfTm5q+1PTlaLX1
vBTkxew7+k/15fdaND2q6dHRvN/8qjhdLrM0P85o+lXTr6NV+vG9Hk3PanpW
07Oanm3kfWlJ8RksEMH0rqZ3Nb2r6d1G3m/0d+qX541oeljTw4287/w6mD5u
VOnbmR1NHzfyPqTTb/+mZv95PJieblTbJ9JCU8x+o7t/b6HX9LemvzX9renv
Rt6H9J7pf9DsA9H0eKN6Z/oPounzRu57fWj6DaLp90bu/2j6XdPvjeoj6Q9c
Gky/a/q9kfcDfWL6AqPpe03fa3q+kfeHaHq+UX2FbzCYvtf0vabvNX3fyPtF
NL2v6ftG9a/pBYum78eK6fuxvJ/ozsXReQGfKGaf0B10XtBo9oOxvF9Esy+M
VZ047Lyg0ewPY3k/iGafGKs6sdN5waPZL8byPqGfmFq/oMuK6Xu9Zlr9Akaz
f2j2D83+odk/NPuHZv/Q7B9juef1wIz0Ayqm7/V/z6p/YNHsL2O57/Xk9AN9
Mph9RrPPjOV+j2a/0ew3mv1mrEqfNjs2mn1Hs++M5Z7X70oXlKbXdfo01opo
9iXNvqTZh8Zy3+uPpgtweTD7kmY/Gsv7QDT70lh1crpgo9mfNPvTWN4notmn
NPtTs/oqF3ww+5Rmn9LsU828T+h/SzeMZr/Qdb3uu/tTxewb0exnzSp9OuUz
mn0kmn2tWdV1uN8Vmn1Ep093rNLsJ/rJ/vqGebqY/SGafbBZras/zfDZaPbD
Zt4v9NDOdIMVs2/o39bvjr+g2R90Grd7PlPMPhDN/qnZJ5tVGqcnaPYFzcc7
NftDNPuoZh/V7KOafVSzj2r2Sc0+2azSOFqt2V/0x9INvqKYfSSafbNZfT4d
AJr9RJ/NDR7MfqrZT5t5X9FfTwdCNPtrM+8zOh13ez8bzH7bzPuOTsfX56LZ
fzX7r2bfbeZ9SPNxyGj23Wbef3S63V+KZh9u5v1GP1XfzvusLGZ/iWZ/1uzP
mn25WfXVt/MXNPuP3pE+XqfZh/Tv6tttvWb/iaZzW8Xs460q3U713wPLZl+K
Zl/X7OeafbtVpcv9i5p9S/PxvGj281bet3S6HDdGs7+38j6lP5EOzFXF7FfR
7Put6pR0oGr2J/2PHLDBPA9o5f1KfyMdwJp9KprnBa0qvXxvf76Y/Uqnl+M0
zX6l+fhZNM8fNM8TWnkfi+b5guZ5QqtK394Wzf6mn6m/3He8UMz+pjfUv93p
mn1Oj6aPT2n2O/37mtuieb6heb6heZ7RKn+vrWvmjWbf08yXaJ6HaJ6HtPJ+
GM3zkVaeT5p9UTOvonl+0sr7o2aeRfN8pZX3S8380axPmnmk2Sc180mzP64u
Zl5p9slonve08vzS7I/RPN9p5fmm2Sejef7TyvNPsy9q5p1mP9TMP80+qJl/
mv1QMw81++KaYJ43tfJ81OyTmnmp2SejeV7VyvMxmudVmsdFmudVrbyPRvP8
qpXnbTTPq9p5X9XMX82+qpnHmhzXzONonoe18z4bzfOxdp7fmn13bTDPz9p5
vmv24Wien7XzPI/meVo777Oaea/Zb6N53tbOPRDN8zbN87N23o+jeT6meT7W
zn2h2ac1vRHN87R23q81PaLZtzX9odmv1xXTI5r9OZrnd5rnce3cI5p9WtMn
mv1a0yuafVvTK5r9W9MvmrzW9Es0zwvbef/W9I1m336pmN7R7NvRPF/UPE9s
5x7S7N/RPG9s516K5nljO+/jmp6K5nmk5nljO+/jmt7S7Oea/tLs65oe0+zv
mh6L5nlnO+/3fcX0WjTPQ9t539f0nGb/j+Z5aTv3nuZ5gKb/NM8HNL2neV6g
6TtNzkbzfLad+0/zfEHTg5rnDeuL6UPN8wZNL2qeN0TzfLide1LzPELTl5rn
E5rejOZ5czs/v9D0qOZ5hqY3o3lerXnc0s7PP6J5Xt0ufw+y1zyvbud+1fSr
pk+jeb49nvtU06eaPtX0qKZHNf2p6U9Nf2r6U5Nf0Tw/H889qulRTY9uLKZH
Nf2p6U9Nb2p6U9OXmr6M5nn+eO5NTW9qejOa5/3juT81/anpT01/avpT05sv
F9Obmt7U9KamL6N5/2E896OmFzV9qOlDTR9q+lDTh5o+1IwDTf9p+i+a90fG
c/9tKqb/NL2n6TtN30Xzfsl47j1N32n6TdNnmj7T9JmmxzQ9pukxTY9pekzT
Y5uL6TFNb2l6S9Nbmt7S9JamtzS9pektTW9pekvTW5rbKZr3rzTvX2nevxrP
PabpMU2PbSmmxzS9pektTV9pekrTU5pe0vSSppc0vaTpJU0vaXpJ00vRvJ83
nnspmvf3NO/vjeee2lpMP2n6KZr388ZzT2n6SdNPmn7S9JOmn6J5P1DzfuB4
7itNX2n6StNTmpdf01OantL01LZiekrTU5qe0vSTpp+ieT9T837meO6raN7f
HM+9pemtaN7vHM+9pektTW9peiua90s173eO597S9JXu/j3QXvP+aPf80/SW
5jyM5v3U8dxjmvNS02Oa81PTZ9G8/9o9XzX9pjlvNT2nOX81fac5jzW9F837
v5r3ezXv73bPc00vas53TT9qzntNT2rOf01fauaBpi815300j0+6/amZB5oe
1cwHTZ/2FzMvNL2qmR+afo3m/fDufNH0rWbeaHpXM380/RvN++2a99cn8rzS
9LJmfml6WTPPNP2smW+antbMO01Pa+afpq8181DT25r5GM3nCTSfJ5jIfa6Z
p5pe18xTTb9r5mc0ny+YyH0/UMx81fS+Zt5q+l8zb6P5fMJE3g8081izH2jm
s2Zf0Mxrzf6gmd+afUIzzzX7hWZ+R/P5h4m8f2jmu2Yf0cx7zX6imf+afUXT
A5r9RdMHmn1G0wvRfF5jIu83mp7Q7DuDxfSFZv/R9IZmH9L0h2Y/iubzHBO5
TzT7kqZXNPuTpk80+5SmTzT7laZXNPuWplc0+5emXzT7mKZnNPuZpm80+5qm
ZzT7m6ZvNPucpnei+fyM5vMvE3n/092/x9k1PaTpIU3/RPN5moncQ9F8vmYi
95Gmj6L5/I3m8zcTuZ80vaTpJU0vaXpJ00uaXtL0kqaXNP2j6R9N/2j6R9M/
mv7R9I+mfzT9o+kfTf9oeieazzNN5P7R9I+mfzT9o+mf4WL6R9M/mv7R9I6m
dzS9o+kdTe9E8/msidw/mr7R9I2mbzR9o+kbTd9o+kbTN5q+0fSNpm+i+XxY
t3c0vaPpHU3vaHpG0zOantH0jKZnND2j6RdNv+wI5vNq3Z7R9IymZ6L5fFu3
bzQ9o+kZTc9oekbTM5qeiebzct2+0fSNpm80faPpG03faHpG0zOantH0jKZn
ND2j6RlNz2h6JprP/3X7JprP+2k+79ftH83lqOkdTe9oekfTOyPF9I6mdzS9
o+kdTe9o+kbTN5q+0fSNpm80faPpG03faPpG0zeavtH0jaZvNH2j6RtN32j6
RtM3mr7R9I2mbzR9o+kbTb9o+kV3/95hr/n8aLdnovm8aLdvND2j6RdNv2j6
RNMnmj7R9ImmTzR9oukTTZ9o+kTTJ5o+0fSJpk80faLpE02faPpE0yeaPtH0
iaZPND2i6RFNj2h6RNMjmh5pFNMjmh6J5vPB3T7R9ImmT6L5fHC3VzS9oukT
TZ9o+kTTJ5o+0fSJpk80faLpE02faPpE0yeaHtH0iKZHND2i6RFNj2h6RNMj
mh7R9IimRzQ9oumPsWL6Q9Mfmt7Q9IamNzS9oekNTW9oekPTF5q+0PSFpi80
faHpC01faPpC0xeavtD0haYvNH2h6QtNX2h6QtMLml7Q9IKmFzS9oOkFTS80
i+mFaD7f3+0HTT9o+kHTD5p+0PSDph80/aDpB00/aPpB0w+aftD0g6YfNP2g
6QdNP2j6QdMPmn7Q9IOmHzT9oOkHTT9o+kHTD9E8nuj2hO7+vYmu6QVNL2h6
QdMLml7Q9IKmFzS9oOkFTS9oekHTC5pe0PSCphc0vaDpBU0vaHpB0wuaXtD0
gqYXNL2g6QVNL2h6QdMLmvGh6QVNL2h6oV1ML2j6QNMHmj7Q9ICmBzQ9oOkB
TQ9oekDTA5oe0PSApgc0PaDpAU0PaHpA0wOaHtD0gKYHND2g6QFND2h6QNMD
mh7Q9ICmBzQ9oOmB8WJ6QNMD0fz9q24faPpA0weaPtD0gaYPNH2g6QNNH2j6
QNMHmj7Q9EE05+Jvci9oekHTC5pe0PSCphc0vaDpBU0vaHpB0wuaXtD0guby
0fSCphc0vTBRTB9o+kDTB5o+0PSBpg80faDpA00faPpA0weaPtD0gaYPNH2g
6QNNH2j6QNMHmj7Q9IGmDzR9oOkDTR9o+kDTB5o+0PSApgf0//3v3n/8//8H
L4uABA==
         "], {{{}, {}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwl2TMUIAAOQMG1bdu2bdu2bdu2bdu2bdu29/bm3hXzUqf4TZKwUftK7QIF
CBAgIIuDBwhwictc5ALnOcdZznCaU5zkBMc5xlGOcJhDHOQA+9nHXvawm13s
ZAfb2cZWtrCZTWxkA+tZx1rWsJpVrGQFy1nGUpYE//8Oi1jIAuYzj7nMYTaz
mMkMpjONqUxhMpOYyATGM46xjGE0oxjJCIYzjKEMYTCDGMgA+tOPvvShN73o
SQ+6042udKEznehIB9rTjra0oTWtaEkLmtOMpjShMY1oSAPqU4+61KE2tahJ
DapTjapUoTKVqEgFylOOspShNKUoSQmKU4yiFKEwhShIAfKTj7zkITe5yEkO
spONrGQhM5nISAbSk460pCE1qUhJCpKTjKQkITGJSEgC4hOPuMQhNrGISQyi
E42oRCEykYhIBMITjrCEITShCEkIghOMoAQhMIEISAD+BQsQ4D/85Q+/+cVP
fvCdb3zlC5/5xEc+8J53vOUNr3nFS17wnGc85QmPecRDHnCfe9zlDre5xU1u
cJ1rXOUKl7nERS5wnnOc5QynOcVJTnCcYxzlCIc5xEEOsJ997GUPu9nFTnaw
nW1sZQub2cRGNrCedaxlDatZxUpWsJxlLGUJi1nEQhYwn3nMZQ6zmcVMZjCd
aUxlCpOZxEQmMJ5xjGUMoxnFSEYwnGEMZQiDGcRABtCffvSlD73pRU960J1u
dKULnelERzrQnna0pQ2taUVLWtCcZjSlCY1pREMaUJ961KUOtalFTWpQnWpU
pQqVqURFKlCecpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQl
C5nJREYykJ50pCUNqUlFSlKQnGQkJQmJSURCEhCfeMQlDrGJRUxiEJ1oRCUK
kYlERCIQnnCEJQyhCUVIQhCcYAQlCIEJREAC8C+o/vnLH37zi5/84Dvf+MoX
PvOJj3zgPe94yxte84qXvOA5z3jKEx7ziIc84D73uMsdbnOLm9zgOte4yhUu
c4mLXOA85zjLGU5zipOc4DjHOMoRDnOIgxxgP/vYyx52s4ud7GA729jKFjaz
iY1sYD3rWMsaVrOKlaxgOctYyhIWs4iFLGA+85jLHGYzi5nMYDrTmMoUJjOJ
iUxgPOMYyxhGM4qRjGA4wxjKEAYziIEMoD/96EsfetOLnvSgO93oShc604mO
dKA97WhLG1rTipa0oDnNaEoTGtOIhjSgPvWoSx1qU4ua1KA61ahKFSpTiYpU
oDzlKEsZSlOKkpSgOMUoShEKU4iCFCA/+chLHnKTi5zkIDvZyEoWMpOJjGQg
PelISxpSk4qUpCA5yUhKEhKTiIQkID7xiEscYhOLmMQgOtGIShQiE4mIRCA8
4QhLGEITipCEIDjBCEoQAhOIgATgXxD985c//OYXP/nBd77xlS985hMf+cB7
3vGWN7zmFS95wXOe8ZQnPOYRD3nAfe5xlzvc5hY3ucF1rnGVK1zmEhe5wHnO
cZYznOYUJznBcY5xlCMc5hAHOcB+9rGXPexmFzvZwXa2sZUtbGYTG9nAetax
ljWsZhUrWcFylrGUJSxmEQtZwHzmMZc5zGYWM5nBdKYxlSlMZhITmcB4xjGW
MYxmFCMZwXCGMZQhDGYQAxlAf/rRlz70phc96UF3utGVLnSmEx3pQHva0ZY2
tKYVLWlBc5rRlCY0phENaUB96lGXOtSmFjWpQXWqUZUqVKYSFalAecpRljKU
phQlKUFxilGUIhSmEAUpQH7ykZc85CYXOclBdrKRlSxkJhMZyUB60pGWNKQm
FSlJQXKSkZQkJCYRCUlAfOIRlzjEJhYxiUF0ohGVKEQmEhGJQHjCEZYwhCYU
IQlBcIIRlCAEJhABCcC/wPrnL3/4zS9+8oPvfOMrX/jMJz7ygfe84y1veM0r
XvKC5zzjKU94zCMe8oD73OMud7jNLW5yg+tc4ypXuMwlLnKB85zjLGc4zSlO
coLjHOMoRzjMIQ5ygP3sYy972M0udrKD7WxjK1vYzCY2soH1rGMta1jNKlay
guUsYylLWMwiFrKA+cxjLnOYzSxmMoPpTGMqU5jMJCYygfGMYyxjGM0oRjKC
4QxjKEMYzCAGMoD+9KMvfehNL3rSg+50oytd6EwnOtKB9rSjLW1oTSta0oLm
NKMpTWhMIxrSgPrUoy51qE0talKD6lSjKlWoTCUqUoHylKMsZShNKUpSguIU
oyhFKEwhClKA/OQjL3nITS5ykoPsZCMrWchMJjKSgfSkIy1pSE0qUpKC5CQj
KUlITCISkoD4xCMucYhNLGISg+hEIypRiEwkIhKB8IQjLGEITShCEoLgBCMo
QQhMIAISgH+B9M9f/vCbX/zkB9/5xle+8JlPfOQD73nHW97wmle85AXPecZT
nvCYRzzkAfe5x13ucJtb3OQG17nGVa5wmUtc5ALnOcdZznCaU5zkBMc5xlGO
cJhDHOQA+9nHXvawm13sZAfb2cZWtrCZTWxkA+tZx1rWsJpVrGQFy1nGUpaw
mEUsZAHzmcdc5jCbWcxkBtOZxlSmMJlJTGQC4xnHWMYwmlGMZATDGcZQhjCY
QQxkAP3pR1/60Jte9KQH3elGV7rQmU50pAPt+d+Bti1taE0rWtKC5jSjKU1o
TCMa0oD61KMudahNLWpSg+pUoypVqEwlKlKB8pSjLGUoTSlKUoLiFKMoRShM
IQpSgPzkIy95yE0ucpKD7GQjK1nITCYykoH0pCMtaUhNKlKSguQkIylJSEwi
EpKA+MQjLnGITSxiEoPoRCMqUYhMJCISgfCEIyxhCE0oQhKC4AQjKEEITCAC
EoB/AfXPX/7wm1/85Aff+cZXvvCZT3zkA+95x1ve8JpXvOQFz3nGU57wmEc8
5AH3ucdd7nCbW9zkBte5xlWucJlLXOQC5znHWc5wmlOc5ATHOcZRjnCYQxzk
APvZx172sJtd7GQH29nGVrawmU1sZAPrWcda1rCaVaxkBctZxlKWsJhFLGQB
85nHXOYwm1nMZAbTmcZUpjCZSUxkAuMZx1jGMJpRjGQEwxnGUIYwmEEMZAD9
6Udf+tCbXvSkB93pRle60JlOdKQD7WlHW9rQmla0pAXNaUZTmtCYRjSkAfWp
R13qUJta1KQG1alGVapQmUpUpALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clH
XvKQm1zkJAfZyUZWspCZTGQkA+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc
4hCbWMQkBtGJRlSiEJlIRCQC4QlHWMIQmlCEJATBCUZQghCYQAQM+P+n2j/j
P/zlD7/5xU9+8J1vfOULn/nERz7wnne85Q2vecVLXvCcZzzlCY95xEMecJ97
3OUOt7nFTW5wnWtc5QqXucRFLnCec5zlDKc5xUlOcJxjHOUIhznEQQ6wn33s
ZQ+72cVOdrCdbWxlC5vZxEY2sJ51rGUNq1nFSlawnGUsZcn/fpgsYiELmM88
5jKH2cxiJjOYzjSmMoXJTGIiExjPOMYyhtGMYiQjGM4whjKEwQxiIAPoTz/6
0ofe9KInPehON7rShc50oiMdaE872tKG1rSiJS1oTjOa0oTGNKIhDahPPepS
h9rUoiY1qE41qlKFylSiIhUoTznKUobSlKIkJShOMYpShMIUoiAFyE8+8pKH
3OQiJznITjaykoXMZCIj/wUSnuyf
               "]]}]}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwl2UMUGNgOANCpbdu2bdu2bdu2bdu2bduYqe32356/uCeLt07ykiRo2K5i
2wD//PPPhWD//PM3BiQQgQlCUDz9E5wQhCQUoQlDWMIRnghEJBKRiUJUohGd
GMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c
5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrU
pBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rRng50pBOd6UJXutGdHvSk
F73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGeCUxkEpOZwlSmMZ0ZzGQW
s5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nCVraxnR3sZBe7
2cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc5BKXucJVrnGdG9zkFre5
w13ucZ8HPOQRj3nCU57xnH/5jxe85BWvecNb3vGeD3zkE5/5wle+8Z0f/OQX
v/nD3+QPQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4
xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzk
JR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSl
HvVpQEMa0ZgmNKUZzWlBS1rRmjb8Ld7taE8HOtKJznShK93oTg960ove9KEv
/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84SnPeM6//McLXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84W/j
D0BAAhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJ
QEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlA
QQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBD
GtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH/0ZwEAG
MZghDGUYwxnBSEYxmjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zGUe81nAQhax
mCUsZRnLWcFKVrGaNaxlHevZwEY2sZktbGUb29nBTnaxmz3sZR/7OcBBDnGY
IxzlGMc5wUlOcZoznOUc57nARS5xmStc5RrXucFNbnGbO9zlHvd5wEMe8Zgn
POUZz/mX/3jBS17xmje85R3v+cBHPvGZL3zlG9/5wU9+8Zs//P30ByAggQhM
EIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwS
kpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGK
UozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rS
jOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM
4YxgJKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozl
rGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc
4CSnOM0ZznKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM5/zL
f7zgJa94zRve8o73fOAjn/jMF77yje/84Ce/+M0f/g78AQhIIAIThKAEIzgh
CEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlI
SSpSk4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJ
KUpThrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkr
WtOGtrSjPR3oSCc604WudKM7PehJL3rTh770oz8DGMggBjOEoQxjOCMYyShG
M4axjGM8E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlaz
hrWsYz0b2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOG
s5zjPBe4yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOf/yHy94ySte
84a3vOM9H/jIJz7zha984zs/+MkvfvOHv8u+AAQkEIEJQlCCEZwQhCQUoQlD
WMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa
0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nK
UZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rR
ng50pBOd6UJXutGdHvSkF73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGe
CUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4N
bGQTm9nCVraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc
5BKXucJVrnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnH/5jxe85BWvecNb3vGe
D3zkE5/5wle+8Z0f/OQXv/nD30V/AAISiMAEISjBCE4IQhKK0IQhLOEITwQi
EonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKS
icxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJ
ylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onO
dKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclM
YSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxh
K9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOEq
17jODW5yi9vc4S73uM8DHvKIxzzhKc94zr/8xwte8orXvOEt73jPBz7yic98
4Svf+M4PfvKL3/zh75EvAAEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd6URnutCVbnSn
Bz3pRW/60Jd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcG
M5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc7
2cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOcD/b/G/r/AAKd77A=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             AbsoluteThickness[1.6], 
             GrayLevel[0.5]], 
            LineBox[{2002, 2003}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        AxesOrigin -> {0, 0}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> 1, Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
           FormBox["\"Recall\"", TraditionalForm], None}, {
           FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.5], 
          AbsoluteThickness[1], 
          AbsoluteDashing[{1, 2}]], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
         "PointLegend", DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"PointLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7092235537834983`*^9, 3.709223639225385*^9, 
  3.7092246272438965`*^9, 3.709224755745247*^9, 
  3.709258194291822*^9},ExpressionUUID->"ffd92fd4-173d-4e91-bf59-\
bc070a7bb80a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rocAreaLR", "=", 
  RowBox[{"cmLR", "[", "\"\<AreaUnderROCCurve\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709222324616194*^9, 
  3.709222329038447*^9}},ExpressionUUID->"48de892f-f91b-4621-bced-\
a7a5d7f3153d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"negative\"\>", "\[Rule]", "0.9079234283976698`"}], ",", 
   RowBox[{"\<\"positive\"\>", "\[Rule]", "0.9079234283976698`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7092235538385015`*^9, 3.7092236392623873`*^9, 
  3.7092246272938995`*^9, 3.7092247557942495`*^9, 
  3.709258194340825*^9},ExpressionUUID->"23164730-c68e-42f3-b643-\
275e6183915b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Comparison of Results Obtained from Classification Algorithms\
\>", "Section",
 CellChangeTimes->{{3.7091812605359817`*^9, 
  3.7091813414286084`*^9}},ExpressionUUID->"59b56276-d38a-4343-a64e-\
1117ceae559d"],

Cell[CellGroupData[{

Cell["Accuracy", "Subsection",
 CellChangeTimes->{{3.7091814251033945`*^9, 
  3.7091814273425226`*^9}},ExpressionUUID->"e8596dde-e1e0-4003-b7ef-\
eb3ffa680721"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Accuracies", "=", 
  RowBox[{"TableForm", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "accNN", ",", "accRF", ",", "accSVM", ",", " ", "accMarkov", ",", " ", 
      "accLR"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"TableHeadings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Neural Networks\>\"", ",", "\"\<Random Forest\>\"", ",", 
         "\"\<Support Vector Machines\>\"", ",", " ", "\"\<Markov\>\"", ",", 
         " ", "\"\<Logostic Regression\>\""}], "}"}], ",", 
       RowBox[{"{", "\"\<Accuracy\>\"", "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7091815094102163`*^9, 3.7091815645173683`*^9}, {
  3.7091816253918505`*^9, 3.7091816309251666`*^9}, {3.709181666226186*^9, 
  3.7091816670282316`*^9}, {3.7091817062274733`*^9, 3.709181709384654*^9}, {
  3.709181779256651*^9, 3.709181780075698*^9}, {3.7091826068649874`*^9, 
  3.7091826225278835`*^9}, {3.709222492716809*^9, 
  3.709222534428194*^9}},ExpressionUUID->"2c050e2a-fd19-4217-993d-\
0e8f7cd78260"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Neural Networks\"\>",
       HoldForm], "0.804`"},
     {
      TagBox["\<\"Random Forest\"\>",
       HoldForm], "0.797`"},
     {
      TagBox["\<\"Support Vector Machines\"\>",
       HoldForm], "0.8035`"},
     {
      TagBox["\<\"Markov\"\>",
       HoldForm], "0.837`"},
     {
      TagBox["\<\"Logostic Regression\"\>",
       HoldForm], "0.835`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   OutputFormsDump`HeadedColumn],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{
      "Neural Networks", "Random Forest", "Support Vector Machines", "Markov",
        "Logostic Regression"}, {"Accuracy"}}]]]], "Output",
 CellChangeTimes->{3.7091815433401575`*^9, 3.709181633769329*^9, 
  3.709181668292304*^9, 3.709181717053093*^9, 3.7091817818107967`*^9, 
  3.709182639940879*^9, 3.7092236493049617`*^9, 3.709224545286209*^9, 
  3.7092246273049*^9, 3.70922475580425*^9, 
  3.7092581943688264`*^9},ExpressionUUID->"480a5820-5584-496d-806a-\
efb0ff5980bc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Precision", "Subsection",
 CellChangeTimes->{{3.7091814418573523`*^9, 
  3.7091814449355288`*^9}},ExpressionUUID->"c6e71425-4090-442f-9cdd-\
8bfa48b8cd7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"precisions", "=", 
  RowBox[{"TableForm", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Reverse", "@", 
       RowBox[{"Values", "@", "#"}]}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
      "precNN", ",", "precRF", ",", "precSVM", ",", " ", "precMarkov", ",", 
       "precLR"}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"TableHeadings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Neural Networks\>\"", ",", "\"\<Random Forest\>\"", ",", 
         "\"\<Support Vector Machines\>\"", ",", " ", "\"\<Markov\>\"", ",", 
         " ", "\"\<Logostic Regression\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Precision(Positive)\>\"", ",", "\"\<Precision(Negative)\>\""}], 
        "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.70916712008923*^9, 3.7091671332967367`*^9}, {
   3.709167188647141*^9, 3.709167343842959*^9}, {3.7091673794274597`*^9, 
   3.709167400305423*^9}, {3.7091674425057077`*^9, 3.709167465767577*^9}, {
   3.709167533080202*^9, 3.709167533774498*^9}, {3.70916757005404*^9, 
   3.709167615867186*^9}, {3.709181094782501*^9, 3.709181143074263*^9}, {
   3.709222544534773*^9, 3.7092225693131895`*^9}, {3.709223667062978*^9, 
   3.7092236742303877`*^9}, 3.709224367234025*^9, {3.709224443656396*^9, 
   3.709224465318635*^9}},ExpressionUUID->"71cb1b4c-c5af-4e04-94ea-\
cfe52ca36f32"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"Precision(Positive)\"\>",
       HoldForm], 
      TagBox["\<\"Precision(Negative)\"\>",
       HoldForm]},
     {
      TagBox["\<\"Neural Networks\"\>",
       HoldForm], "0.8259911894273128`", "0.7857142857142857`"},
     {
      TagBox["\<\"Random Forest\"\>",
       HoldForm], "0.7757633587786259`", "0.8203781512605042`"},
     {
      TagBox["\<\"Support Vector Machines\"\>",
       HoldForm], "0.8094240837696335`", "0.7980861244019138`"},
     {
      TagBox["\<\"Markov\"\>",
       HoldForm], "0.8599562363238512`", "0.8176795580110497`"},
     {
      TagBox["\<\"Logostic Regression\"\>",
       HoldForm], "0.8413361169102296`", "0.8291746641074856`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{
      "Neural Networks", "Random Forest", "Support Vector Machines", "Markov",
        "Logostic Regression"}, {
      "Precision(Positive)", "Precision(Negative)"}}]]]], "Output",
 CellChangeTimes->{3.7091811435512905`*^9, 3.7092236493649654`*^9, 
  3.709224486859867*^9, 3.7092245453292117`*^9, 3.7092246273169007`*^9, 
  3.7092247558182507`*^9, 
  3.7092581943798275`*^9},ExpressionUUID->"f6e3b923-8a80-4fec-bdc4-\
7de095861118"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Recall", "Subsection",
 CellChangeTimes->{{3.7091814563851833`*^9, 
  3.709181457427243*^9}},ExpressionUUID->"56fd7335-cf14-4a57-8cc0-\
4bdd738fb16a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Recalls", "=", 
  RowBox[{"TableForm", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Reverse", "@", 
       RowBox[{"Values", "@", "#"}]}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
      "recNN", ",", "recRF", ",", "recSVM", ",", " ", "recMarkov", ",", " ", 
       "recLR"}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"TableHeadings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Neural Networks\>\"", ",", "\"\<Random Forest\>\"", ",", 
         "\"\<Support Vector Machines\>\"", ",", " ", "\"\<Markov\>\"", ",", 
         " ", "\"\<Logostic Regression\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Recall(Positive)\>\"", ",", "\"\<Recall(Negative)\>\""}],
         "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.70918177207224*^9, 3.7091817959836073`*^9}, {
  3.7092225791427517`*^9, 3.709222590520403*^9}, {3.7092244955143623`*^9, 
  3.7092245085011053`*^9}},ExpressionUUID->"81035d95-8539-4e7c-9eec-\
e0ea10f4ba1e"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"Recall(Positive)\"\>",
       HoldForm], 
      TagBox["\<\"Recall(Negative)\"\>",
       HoldForm]},
     {
      TagBox["\<\"Neural Networks\"\>",
       HoldForm], "0.7621951219512195`", "0.844488188976378`"},
     {
      TagBox["\<\"Random Forest\"\>",
       HoldForm], "0.8262195121951219`", "0.7687007874015748`"},
     {
      TagBox["\<\"Support Vector Machines\"\>",
       HoldForm], "0.7855691056910569`", "0.8208661417322834`"},
     {
      TagBox["\<\"Markov\"\>",
       HoldForm], "0.7987804878048781`", "0.8740157480314961`"},
     {
      TagBox["\<\"Logostic Regression\"\>",
       HoldForm], "0.8191056910569106`", "0.8503937007874016`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{
      "Neural Networks", "Random Forest", "Support Vector Machines", "Markov",
        "Logostic Regression"}, {
      "Recall(Positive)", "Recall(Negative)"}}]]]], "Output",
 CellChangeTimes->{3.709181800817884*^9, 3.709223649376966*^9, 
  3.709224545340212*^9, 3.7092246273299017`*^9, 3.7092247558322515`*^9, 
  3.7092581943898277`*^9},ExpressionUUID->"20d378f0-081a-4680-912b-\
aa58e5cccf1f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Area Under ROC Curve", "Subsection",
 CellChangeTimes->{{3.7091814725521083`*^9, 
  3.7091814937573214`*^9}},ExpressionUUID->"7266f463-d06d-4d61-a31a-\
3eb594ab3580"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rocAreas", "=", 
  RowBox[{"TableForm", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Reverse", "@", 
       RowBox[{"Values", "@", "#"}]}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
      "rocAreaNN", ",", "rocAreaRF", ",", "rocAreaSVM", ",", " ", 
       "rocAreaMarkov", ",", " ", "rocAreaLR"}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"TableHeadings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Neural Networks\>\"", ",", "\"\<Random Forest\>\"", ",", 
         "\"\<Support Vector Machines\>\"", ",", " ", "\"\<Markov\>\"", ",", 
         " ", "\"\<Logostic Regression\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Area Under ROC(Positive)\>\"", ",", 
         "\"\<Area under ROC(Negative)\>\""}], "}"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.70918186123234*^9, 3.709181888397893*^9}, {
  3.709222594269617*^9, 3.7092226079503994`*^9}, {3.709224520185773*^9, 
  3.7092245388928432`*^9}},ExpressionUUID->"75b38bcc-8ecb-437e-90c2-\
4d902bb8e088"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"Area Under ROC(Positive)\"\>",
       HoldForm], 
      TagBox["\<\"Area under ROC(Negative)\"\>",
       HoldForm]},
     {
      TagBox["\<\"Neural Networks\"\>",
       HoldForm], "0.8782518324691121`", "0.878251832469112`"},
     {
      TagBox["\<\"Random Forest\"\>",
       HoldForm], "0.852211166058511`", "0.8431518468727993`"},
     {
      TagBox["\<\"Support Vector Machines\"\>",
       HoldForm], "0.8812345960565906`", "0.8811835829972473`"},
     {
      TagBox["\<\"Markov\"\>",
       HoldForm], "0.9019118894436976`", "0.9019118894436976`"},
     {
      TagBox["\<\"Logostic Regression\"\>",
       HoldForm], "0.9079234283976698`", "0.9079234283976698`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{
      "Neural Networks", "Random Forest", "Support Vector Machines", "Markov",
        "Logostic Regression"}, {
      "Area Under ROC(Positive)", "Area under ROC(Negative)"}}]]]], "Output",
 CellChangeTimes->{3.709181890775029*^9, 3.7092236493889666`*^9, 
  3.709224545352213*^9, 3.7092246273419027`*^9, 3.7092247558462524`*^9, 
  3.7092581944008284`*^9},ExpressionUUID->"70b4532b-5d90-4017-92ae-\
f2acc56d4bdd"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusions and Recommendations", "Section",
 CellChangeTimes->{{3.709185770701948*^9, 
  3.709185777389331*^9}},ExpressionUUID->"afcae1e3-3db8-449b-a6b3-\
c54c6350b4e3"],

Cell["\<\
Here, we only presented some approaches to address the above text \
classification problem. There are many other methods out there to tackle such \
problems. The purpose of this study was to present a general ML pipeline, try \
several preprocessing techniques and classification algorithms, and \
eventually discuss the results associated with them. From the above ML \
experiment, it can be observed that all three classification algorithms with \
preprocessing technique stated in (1.4) result in classifiers with similar \
accuracy (around %80). Precisions and Recalls obtained from all algorithms \
are also similar. However, the difference between the results in the metric \
\[OpenCurlyDoubleQuote]Area under ROC Curves\[CloseCurlyDoubleQuote] is more \
noticeable. It can be observed that Random Forest produced lower values for \
that area under ROC curve metric, which indicates lower performance comparing \
to the other two classifiers. However, Support Vector Machine algorithm has a \
better performance with respect to area under ROC comparing to Neural \
Networks and Random Forest. The other two classifiers, Markov (2.1) and \
Logistic Regression (3.1), we have achieved higher performance (e.g. \
accuracy) and yet relatively efficient classifiers. However, the \
preprocessing techniques used for these two are not employed for Random \
Forest, Neural Network and Support Vector Machine methods since the running \
time would be very large (i.e. may not be tractable on regular computers). It \
should be noted that the above conclusions are limited to the configuration \
(e.g. number of samples and the technique employed for preprocessing and \
feature extraction) considered in this study.   

There are various ways to increase the efficiency and performance of the \
classification model. For example, increasing the number of training set can \
enhance the accuracy of the classifier, especially when the features are \
selected such that they can predict the labels accurately. Increasing the \
number of features can also help to boost the performance of the classifier. \
However, it should be noted that if the number of features are too large, \
overfitting problem might occur. Another way to improve the performance is to \
implement cross validation in the analysis which will create an ensemble of \
the algorithms, as described in section \[OpenCurlyDoubleQuote]Extracting \
Training and Test Sets\[CloseCurlyDoubleQuote].  Moreover, increasing the \
number of trees in Random Forest can help us to achieve more reliable \
predictors. In general, using Ensemble Machine Learning, where multiple \
learners\[NonBreakingSpace]are trained to solve the same problem, can \
increase the performance of the classification since it constructs a set of \
hypotheses and combine them to use.
\
\>", "Text",
 CellChangeTimes->{
  3.7091860024732046`*^9, {3.709186099808772*^9, 3.7091862559287014`*^9}, {
   3.7091863034904222`*^9, 3.709186759527506*^9}, {3.7092226678818274`*^9, 
   3.7092231902717066`*^9}, {3.709223225350713*^9, 3.7092232496971054`*^9}, {
   3.7092232983578887`*^9, 3.709223305760312*^9}, {3.7092470475392647`*^9, 
   3.7092470526355553`*^9}, {3.7092492109117413`*^9, 
   3.7092492610916433`*^9}},ExpressionUUID->"08cf8fa0-9e52-4ef4-bf30-\
92f804e0f65f"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1600, 818},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 275, 4, 92, "Title", "ExpressionUUID" -> \
"32e54073-6b62-4e59-bdd0-85140af44fea"],
Cell[858, 28, 263, 4, 51, "Subtitle", "ExpressionUUID" -> \
"d97251f3-2a0d-46f1-bb59-70a7b75c0671"],
Cell[1124, 34, 299, 5, 29, "Subsubtitle", "ExpressionUUID" -> \
"792bb02a-28a3-4f5b-ac13-b6096c6bb577"],
Cell[CellGroupData[{
Cell[1448, 43, 163, 3, 64, "Section", "ExpressionUUID" -> \
"ae489d12-3e4c-44c9-9d6a-eb33877c10b1"],
Cell[1614, 48, 501, 9, 49, "Text", "ExpressionUUID" -> \
"8992d773-fa76-46ac-8298-ceb8d8eae8e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2152, 62, 183, 3, 64, "Section", "ExpressionUUID" -> \
"4aa7c7e9-1c72-46d8-bd3b-87608c535a67"],
Cell[2338, 67, 481, 9, 32, "Input", "ExpressionUUID" -> \
"e382c85d-6f02-42a7-814f-86eec7206048"],
Cell[2822, 78, 503, 13, 32, "Input", "ExpressionUUID" -> \
"0eb05cef-3a0e-4b91-b4e9-269271468570"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3362, 96, 180, 3, 64, "Section", "ExpressionUUID" -> \
"527e42e4-f2cf-444b-8b50-b9a312ed09e5"],
Cell[3545, 101, 2241, 31, 125, "Text", "ExpressionUUID" -> \
"836cd3d7-0042-46ee-9236-bbffc7b9a08e"],
Cell[CellGroupData[{
Cell[5811, 136, 1658, 47, 75, "Input", "ExpressionUUID" -> \
"7b7bb7ec-04ef-4935-a739-8b5d1eb25e8f"],
Cell[7472, 185, 7032, 136, 244, "Output", "ExpressionUUID" -> \
"b7383a84-ddeb-4c53-9b0a-18f0a867bc1d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14541, 326, 1604, 45, 75, "Input", "ExpressionUUID" -> \
"4c99b3ee-4e07-4a34-9ae0-4ea96e4f6d3c"],
Cell[16148, 373, 7042, 136, 222, "Output", "ExpressionUUID" -> \
"0b8afcd0-ae41-4f64-954b-99ed03b81cd1"]
}, Open  ]],
Cell[23205, 512, 2295, 36, 220, "Text", "ExpressionUUID" -> \
"b378679d-c92e-45cc-bbf2-9237f0b42804"],
Cell[25503, 550, 538, 16, 50, "Input", "ExpressionUUID" -> \
"eb01c248-f993-4e9f-93c5-11da9204eb42"],
Cell[26044, 568, 1085, 28, 69, "Input", "ExpressionUUID" -> \
"32f365ed-5b81-4d38-b9b3-8c9ecb0951fe"],
Cell[27132, 598, 523, 14, 50, "Input", "ExpressionUUID" -> \
"c616b881-380b-4f33-a373-43c681ab2bd7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27692, 617, 382, 6, 70, "Section", "ExpressionUUID" -> \
"cfc550d4-9135-4b60-8a36-3c37179c57f3"],
Cell[28077, 625, 6297, 97, 714, "Text", "ExpressionUUID" -> \
"fdc29595-ec42-4163-a02b-cebbe95fa526"],
Cell[CellGroupData[{
Cell[34399, 726, 563, 9, 49, "Subsection", "ExpressionUUID" -> \
"339477a4-b570-4209-990b-33620a5530d9"],
Cell[34965, 737, 1589, 30, 50, "Input", "ExpressionUUID" -> \
"6503b1d8-0b56-457b-b8e9-7b763fd05aa5"],
Cell[36557, 769, 1143, 32, 51, "Input", "ExpressionUUID" -> \
"b828f139-261c-4787-8311-6f9122a941be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37737, 806, 279, 6, 49, "Subsection", "ExpressionUUID" -> \
"d6e33961-239b-4d76-bfab-687a6cb8b2e8"],
Cell[38019, 814, 1202, 34, 50, "Input", "ExpressionUUID" -> \
"ad4fe4c1-8050-4b30-9188-e0443ae63b0a"],
Cell[39224, 850, 1276, 36, 50, "Input", "ExpressionUUID" -> \
"cce17796-2fed-434e-a9f0-1d54b1cfdc2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40537, 891, 351, 5, 49, "Subsection", "ExpressionUUID" -> \
"ba1b615a-6ecb-4d7d-a9ac-cb9730ebf56e"],
Cell[40891, 898, 1497, 44, 50, "Input", "ExpressionUUID" -> \
"9033b294-fcb0-47dd-ab87-f02c83797529"],
Cell[42391, 944, 654, 17, 30, "Input", "ExpressionUUID" -> \
"4b00fb45-b96b-48ad-9721-fe7f4c840c75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43082, 966, 254, 4, 49, "Subsection", "ExpressionUUID" -> \
"acb236e1-8f34-46fa-b83d-9707999bc175"],
Cell[43339, 972, 751, 21, 50, "Input", "ExpressionUUID" -> \
"5b89243e-4f2b-4fa1-8667-10221cf7734a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44139, 999, 185, 3, 70, "Section", "ExpressionUUID" -> \
"d04756cb-aa3d-4e2b-99f9-af0c5269dc3b"],
Cell[44327, 1004, 3525, 53, 258, "Text", "ExpressionUUID" -> \
"52bf5e6d-15ef-4a42-b53e-24b68e73837f"],
Cell[47855, 1059, 679, 19, 30, "Input", "ExpressionUUID" -> \
"4618379d-f4d7-417f-a918-d21362443db9"],
Cell[48537, 1080, 690, 19, 30, "Input", "ExpressionUUID" -> \
"a9c2d6ae-e228-4c80-b4f6-1d6a54f878ab"],
Cell[CellGroupData[{
Cell[49252, 1103, 223, 4, 49, "Subsection", "ExpressionUUID" -> \
"60e675a5-e1df-4c64-8863-7960fdc7f089"],
Cell[49478, 1109, 388, 10, 30, "Input", "ExpressionUUID" -> \
"76fc781a-84b9-4bd8-a6c9-45dfdc80d5f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49903, 1124, 222, 4, 49, "Subsection", "ExpressionUUID" -> \
"64120bdd-bb60-49b1-829a-87a00f073400"],
Cell[50128, 1130, 487, 11, 30, "Input", "ExpressionUUID" -> \
"38585e38-ba7c-421e-8ea1-a8b71799b548"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50652, 1146, 230, 4, 49, "Subsection", "ExpressionUUID" -> \
"9181122e-9c3f-44c4-bbb6-e5d615c04f58"],
Cell[50885, 1152, 837, 18, 30, "Input", "ExpressionUUID" -> \
"50b6d55d-9f72-447d-ab3a-ec933bde09a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51759, 1175, 211, 4, 49, "Subsection", "ExpressionUUID" -> \
"309ad387-5dd6-4bfc-960c-36531bb900b9"],
Cell[51973, 1181, 251, 6, 30, "Input", "ExpressionUUID" -> \
"9224d6de-eb37-4dd0-8a4a-0fbe6acbb899"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52261, 1192, 175, 3, 49, "Subsection", "ExpressionUUID" -> \
"ebce0716-cd0c-4a6b-ae77-5e3550f0447b"],
Cell[52439, 1197, 396, 10, 30, "Input", "ExpressionUUID" -> \
"6b2b6a38-76e9-4141-beb0-d993cb2a93fd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[52884, 1213, 154, 3, 70, "Section", "ExpressionUUID" -> \
"4a24ec72-1b03-4461-b7f6-c6171bcceba2"],
Cell[53041, 1218, 572, 10, 49, "Text", "ExpressionUUID" -> \
"51d40484-82ec-4681-bafa-66453235a077"],
Cell[53616, 1230, 569, 17, 30, "Input", "ExpressionUUID" -> \
"e39ccbf2-c0c7-417a-9519-c68aa79c18c0"],
Cell[54188, 1249, 672, 20, 30, "Input", "ExpressionUUID" -> \
"07df86bd-d305-429e-b2c4-485dc412c737"],
Cell[CellGroupData[{
Cell[54885, 1273, 223, 4, 49, "Subsection", "ExpressionUUID" -> \
"7a4bc7ec-b9f3-4b56-a18a-64ef67edf2dc"],
Cell[55111, 1279, 209, 5, 30, "Input", "ExpressionUUID" -> \
"84420e7b-4296-4717-b279-ee83ab8dc6e9"],
Cell[CellGroupData[{
Cell[55345, 1288, 225, 5, 30, "Input", "ExpressionUUID" -> \
"c0030fab-6427-4b69-b728-88866a3d0cb1"],
Cell[55573, 1295, 254, 4, 30, "Output", "ExpressionUUID" -> \
"652a5505-6899-470a-86b9-10cd78ebaa30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55864, 1304, 227, 5, 30, "Input", "ExpressionUUID" -> \
"f6697853-653d-438c-88c5-f7b0156f086b"],
Cell[56094, 1311, 458, 9, 30, "Output", "ExpressionUUID" -> \
"76c97a18-7ccf-4d06-87a5-969659ed7adf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56589, 1325, 225, 5, 30, "Input", "ExpressionUUID" -> \
"8a5e0b20-9ed8-42c9-85a1-e7ff06f41ea5"],
Cell[56817, 1332, 455, 9, 30, "Output", "ExpressionUUID" -> \
"1e4d9209-c971-4d1d-b332-bba3c3db18a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57309, 1346, 242, 5, 30, "Input", "ExpressionUUID" -> \
"5ef8b359-73f7-479f-b06b-e644399e3bbc"],
Cell[57554, 1353, 9911, 258, 319, "Output", "ExpressionUUID" -> \
"77fcc397-cb2f-441e-8db6-de2f7783ae4d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67502, 1616, 227, 5, 30, "Input", "ExpressionUUID" -> \
"f25ab4ed-95a3-4a34-be1b-b37ca5711ddb"],
Cell[67732, 1623, 56930, 1038, 194, "Output", "ExpressionUUID" -> \
"e22d8f30-c6df-4bce-94ba-d9012a6baa27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124699, 2666, 238, 5, 30, "Input", "ExpressionUUID" -> \
"f23c2527-d2d5-4426-b3b3-4e1c28931487"],
Cell[124940, 2673, 457, 9, 30, "Output", "ExpressionUUID" -> \
"c7b4121b-6666-4b3b-81b2-262fbd0def37"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[125446, 2688, 270, 4, 49, "Subsection", "ExpressionUUID" -> \
"985c937b-eb60-46a1-b889-b21f5361b797"],
Cell[125719, 2694, 378, 8, 30, "Input", "ExpressionUUID" -> \
"bd8dfd69-8f10-4c35-80e0-a65af681d45d"],
Cell[CellGroupData[{
Cell[126122, 2706, 276, 6, 30, "Input", "ExpressionUUID" -> \
"ad2fc110-37ff-489f-b9b4-85f037cc53bd"],
Cell[126401, 2714, 275, 5, 30, "Output", "ExpressionUUID" -> \
"07a08c50-cc8c-46b5-90db-03ce6b32dd30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126713, 2724, 278, 6, 30, "Input", "ExpressionUUID" -> \
"4105a7c3-2f79-4edd-830f-8e7873c704fb"],
Cell[126994, 2732, 483, 10, 30, "Output", "ExpressionUUID" -> \
"61341958-6cd9-44ef-baf9-b6e8b763b271"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127514, 2747, 278, 6, 30, "Input", "ExpressionUUID" -> \
"96be080a-7cbe-49d5-b744-7e3768ada0a1"],
Cell[127795, 2755, 485, 10, 30, "Output", "ExpressionUUID" -> \
"e38815d2-6cf8-49ad-8ca0-5f48004a54fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128317, 2770, 290, 6, 30, "Input", "ExpressionUUID" -> \
"b6052733-8424-4e7c-b517-514cca8ada4d"],
Cell[128610, 2778, 9930, 259, 319, "Output", "ExpressionUUID" -> \
"59596843-d283-46aa-a5de-179998cae855"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138577, 3042, 278, 6, 30, "Input", "ExpressionUUID" -> \
"6f4f87d5-84ec-4b8a-8c13-200af1d1ade6"],
Cell[138858, 3050, 57407, 1048, 194, "Output", "ExpressionUUID" -> \
"5d160a04-1841-404d-8420-8e88aea45f0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196302, 4103, 287, 6, 30, "Input", "ExpressionUUID" -> \
"b16aeda4-a1a8-416c-b6b7-cac17678f262"],
Cell[196592, 4111, 486, 10, 30, "Output", "ExpressionUUID" -> \
"e4597f0f-f838-4564-9140-b8d986a9fda8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[197127, 4127, 278, 4, 49, "Subsection", "ExpressionUUID" -> \
"47f5c06a-9113-4a63-b82e-a4f176433f2f"],
Cell[197408, 4133, 280, 7, 30, "Input", "ExpressionUUID" -> \
"bed49d82-d82a-41f0-a11e-c57492e7deb2"],
Cell[CellGroupData[{
Cell[197713, 4144, 278, 6, 30, "Input", "ExpressionUUID" -> \
"8c31406c-d363-47ed-9c92-eae3e2d8642c"],
Cell[197994, 4152, 284, 5, 30, "Output", "ExpressionUUID" -> \
"92036d3a-2c1e-4188-8cc6-632dc0a19165"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198315, 4162, 280, 6, 30, "Input", "ExpressionUUID" -> \
"d23f55ac-5afb-40e1-b21b-e56be325f7c2"],
Cell[198598, 4170, 483, 10, 30, "Output", "ExpressionUUID" -> \
"e34a4c5a-fc46-43e0-a211-dc1f14dccd0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199118, 4185, 276, 6, 30, "Input", "ExpressionUUID" -> \
"b22f3431-86ba-44c2-9b0d-cb7c8b8ab420"],
Cell[199397, 4193, 483, 10, 30, "Output", "ExpressionUUID" -> \
"39b1a69b-9e64-4e79-bdd7-66f42e87804e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199917, 4208, 297, 6, 30, "Input", "ExpressionUUID" -> \
"1fb5f392-8993-4469-a022-40898cf7209a"],
Cell[200217, 4216, 9945, 259, 319, "Output", "ExpressionUUID" -> \
"b1379d34-d09b-4af9-a2e2-e436ed21662f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210199, 4480, 278, 6, 30, "Input", "ExpressionUUID" -> \
"98be40cb-e6fd-4800-8655-e92363f97fbf"],
Cell[210480, 4488, 56905, 1037, 194, "Output", "ExpressionUUID" -> \
"564e69c6-0ee8-4009-be40-f0c3ef0fbac7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267422, 5530, 291, 6, 30, "Input", "ExpressionUUID" -> \
"f3171f86-39c8-4cfc-8501-af4157158878"],
Cell[267716, 5538, 483, 10, 30, "Output", "ExpressionUUID" -> \
"88cccfc9-907b-4cdc-91e2-7e23a7641433"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[268248, 5554, 211, 4, 49, "Subsection", "ExpressionUUID" -> \
"c56c246b-dde7-458d-a61e-80ec46be86fe"],
Cell[268462, 5560, 385, 8, 30, "Input", "ExpressionUUID" -> \
"5b4e5e8d-7cd7-4ad8-8d58-f9f956053df3"],
Cell[CellGroupData[{
Cell[268872, 5572, 237, 5, 30, "Input", "ExpressionUUID" -> \
"23676352-0bc4-4c80-b1fd-4ca86923c81a"],
Cell[269112, 5579, 234, 4, 30, "Output", "ExpressionUUID" -> \
"31e198e1-baf5-4069-b3cb-a6a060c08731"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269383, 5588, 288, 6, 30, "Input", "ExpressionUUID" -> \
"e728e34c-12c7-45bf-81c6-7e29dba422db"],
Cell[269674, 5596, 438, 9, 30, "Output", "ExpressionUUID" -> \
"f6834e34-f4ef-4766-8af6-439537c45737"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270149, 5610, 284, 6, 30, "Input", "ExpressionUUID" -> \
"83186b88-70ba-4aa0-90ee-44106671bdfb"],
Cell[270436, 5618, 436, 9, 30, "Output", "ExpressionUUID" -> \
"4670453b-ab4b-4c05-bfaf-a77809678c84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270909, 5632, 345, 6, 30, "Input", "ExpressionUUID" -> \
"b253882b-f87c-411d-97f4-cfcc7f71060f"],
Cell[271257, 5640, 9894, 258, 319, "Output", "ExpressionUUID" -> \
"852c1e6d-205d-4f9d-8b9d-878dcd3f541a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281188, 5903, 286, 6, 30, "Input", "ExpressionUUID" -> \
"e7f836ed-3595-4bbe-a325-10d54992ca11"],
Cell[281477, 5911, 56675, 1034, 194, "Output", "ExpressionUUID" -> \
"2a035e9a-bd7f-4dc9-a904-1ebe5a9a7d3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338189, 6950, 297, 6, 30, "Input", "ExpressionUUID" -> \
"2140f3a5-5b8f-437e-8327-14ba296212e9"],
Cell[338489, 6958, 438, 9, 30, "Output", "ExpressionUUID" -> \
"632c84a3-4f90-4ce6-8720-18eb77d4b65e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[338976, 6973, 169, 2, 49, "Subsection", "ExpressionUUID" -> \
"6e213ebf-67c6-412d-80f9-54eedd90e09a"],
Cell[339148, 6977, 331, 8, 30, "Input", "ExpressionUUID" -> \
"5c285b53-594a-489d-851c-7db76347a45c"],
Cell[CellGroupData[{
Cell[339504, 6989, 156, 3, 30, "Input", "ExpressionUUID" -> \
"e77c259e-e290-4654-88ea-766e555691ba"],
Cell[339663, 6994, 230, 4, 30, "Output", "ExpressionUUID" -> \
"e19c2cb2-8e52-4849-b025-fb779b58089b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[339930, 7003, 229, 5, 30, "Input", "ExpressionUUID" -> \
"3558ea3a-b9f2-426e-b72b-3d12aa062007"],
Cell[340162, 7010, 436, 9, 30, "Output", "ExpressionUUID" -> \
"55b43017-386c-42c2-8802-8d118dc90cf1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340635, 7024, 225, 5, 30, "Input", "ExpressionUUID" -> \
"a65d0be2-f419-452e-b345-cfde5bf09591"],
Cell[340863, 7031, 434, 9, 30, "Output", "ExpressionUUID" -> \
"2296a6e1-6d00-48d6-8128-10fc6ce2aa12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341334, 7045, 289, 6, 30, "Input", "ExpressionUUID" -> \
"fbe1e1ce-9147-4dd8-acdb-7456fe19223a"],
Cell[341626, 7053, 9891, 258, 319, "Output", "ExpressionUUID" -> \
"ab3d651a-6845-4041-96f0-1d7e3d86da1a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351554, 7316, 227, 5, 30, "Input", "ExpressionUUID" -> \
"3e7e0e43-b01f-4d77-bee5-e8bc39a43ac1"],
Cell[351784, 7323, 56590, 1033, 194, "Output", "ExpressionUUID" -> \
"ffd92fd4-173d-4e91-bf59-bc070a7bb80a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[408411, 8361, 238, 5, 30, "Input", "ExpressionUUID" -> \
"48de892f-f91b-4621-bced-a7a5d7f3153d"],
Cell[408652, 8368, 438, 9, 30, "Output", "ExpressionUUID" -> \
"23164730-c68e-42f3-b643-275e6183915b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[409151, 8384, 218, 5, 70, "Section", "ExpressionUUID" -> \
"59b56276-d38a-4343-a64e-1117ceae559d"],
Cell[CellGroupData[{
Cell[409394, 8393, 160, 3, 49, "Subsection", "ExpressionUUID" -> \
"e8596dde-e1e0-4003-b7ef-eb3ffa680721"],
Cell[CellGroupData[{
Cell[409579, 8400, 1076, 23, 50, "Input", "ExpressionUUID" -> \
"2c050e2a-fd19-4217-993d-0e8f7cd78260"],
Cell[410658, 8425, 1568, 44, 111, "Output", "ExpressionUUID" -> \
"480a5820-5584-496d-806a-efb0ff5980bc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[412275, 8475, 161, 3, 49, "Subsection", "ExpressionUUID" -> \
"c6e71425-4090-442f-9cdd-8bfa48b8cd7c"],
Cell[CellGroupData[{
Cell[412461, 8482, 1442, 32, 50, "Input", "ExpressionUUID" -> \
"71cb1b4c-c5af-4e04-94ea-cfe52ca36f32"],
Cell[413906, 8516, 1960, 51, 129, "Output", "ExpressionUUID" -> \
"f6e3b923-8a80-4fec-bdc4-7de095861118"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[415915, 8573, 156, 3, 49, "Subsection", "ExpressionUUID" -> \
"56fd7335-cf14-4a57-8cc0-4bdd738fb16a"],
Cell[CellGroupData[{
Cell[416096, 8580, 1057, 26, 50, "Input", "ExpressionUUID" -> \
"81035d95-8539-4e7c-9eec-e0ea10f4ba1e"],
Cell[417156, 8608, 1916, 50, 129, "Output", "ExpressionUUID" -> \
"20d378f0-081a-4680-912b-aa58e5cccf1f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[419121, 8664, 172, 3, 49, "Subsection", "ExpressionUUID" -> \
"7266f463-d06d-4d61-a31a-3eb594ab3580"],
Cell[CellGroupData[{
Cell[419318, 8671, 1109, 29, 50, "Input", "ExpressionUUID" -> \
"75b38bcc-8ecb-437e-90c2-4d902bb8e088"],
Cell[420430, 8702, 1949, 50, 129, "Output", "ExpressionUUID" -> \
"70b4532b-5d90-4017-92ae-f2acc56d4bdd"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[422440, 8759, 176, 3, 70, "Section", "ExpressionUUID" -> \
"afcae1e3-3db8-449b-a6b3-c54c6350b4e3"],
Cell[422619, 8764, 3310, 49, 296, "Text", "ExpressionUUID" -> \
"08cf8fa0-9e52-4ef4-bf30-92f804e0f65f"]
}, Open  ]]
}, Open  ]]
}
]
*)

